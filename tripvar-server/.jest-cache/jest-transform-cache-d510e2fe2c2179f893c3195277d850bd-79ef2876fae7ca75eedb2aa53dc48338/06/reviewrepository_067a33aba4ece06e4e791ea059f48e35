d754adaba7a69de73cb555b7871e12eb
/* istanbul ignore next */
function cov_xfipz4oiy() {
  var path = "/Users/mfarsx/dev/tripvar/tripvar-server/src/repositories/review.repository.js";
  var hash = "c2fc996a8ccfa8726aa6066939db64c427dcb8a8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/mfarsx/dev/tripvar/tripvar-server/src/repositories/review.repository.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 23
        },
        end: {
          line: 1,
          column: 51
        }
      },
      "1": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 5,
          column: 17
        }
      },
      "2": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 17,
          column: 5
        }
      },
      "3": {
        start: {
          line: 11,
          column: 6
        },
        end: {
          line: 14,
          column: 33
        }
      },
      "4": {
        start: {
          line: 16,
          column: 6
        },
        end: {
          line: 16,
          column: 18
        }
      },
      "5": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "6": {
        start: {
          line: 23,
          column: 6
        },
        end: {
          line: 26,
          column: 33
        }
      },
      "7": {
        start: {
          line: 28,
          column: 6
        },
        end: {
          line: 28,
          column: 18
        }
      },
      "8": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "9": {
        start: {
          line: 35,
          column: 6
        },
        end: {
          line: 38,
          column: 33
        }
      },
      "10": {
        start: {
          line: 40,
          column: 6
        },
        end: {
          line: 40,
          column: 18
        }
      },
      "11": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "12": {
        start: {
          line: 47,
          column: 6
        },
        end: {
          line: 52,
          column: 33
        }
      },
      "13": {
        start: {
          line: 54,
          column: 6
        },
        end: {
          line: 54,
          column: 18
        }
      },
      "14": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 74,
          column: 5
        }
      },
      "15": {
        start: {
          line: 61,
          column: 21
        },
        end: {
          line: 70,
          column: 8
        }
      },
      "16": {
        start: {
          line: 71,
          column: 6
        },
        end: {
          line: 71,
          column: 64
        }
      },
      "17": {
        start: {
          line: 73,
          column: 6
        },
        end: {
          line: 73,
          column: 18
        }
      },
      "18": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 93,
          column: 5
        }
      },
      "19": {
        start: {
          line: 80,
          column: 21
        },
        end: {
          line: 89,
          column: 8
        }
      },
      "20": {
        start: {
          line: 90,
          column: 6
        },
        end: {
          line: 90,
          column: 20
        }
      },
      "21": {
        start: {
          line: 92,
          column: 6
        },
        end: {
          line: 92,
          column: 18
        }
      },
      "22": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 107,
          column: 5
        }
      },
      "23": {
        start: {
          line: 99,
          column: 6
        },
        end: {
          line: 104,
          column: 22
        }
      },
      "24": {
        start: {
          line: 106,
          column: 6
        },
        end: {
          line: 106,
          column: 18
        }
      },
      "25": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 119,
          column: 5
        }
      },
      "26": {
        start: {
          line: 113,
          column: 6
        },
        end: {
          line: 116,
          column: 33
        }
      },
      "27": {
        start: {
          line: 118,
          column: 6
        },
        end: {
          line: 118,
          column: 18
        }
      },
      "28": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 132,
          column: 5
        }
      },
      "29": {
        start: {
          line: 125,
          column: 21
        },
        end: {
          line: 128,
          column: 8
        }
      },
      "30": {
        start: {
          line: 129,
          column: 6
        },
        end: {
          line: 129,
          column: 22
        }
      },
      "31": {
        start: {
          line: 131,
          column: 6
        },
        end: {
          line: 131,
          column: 18
        }
      },
      "32": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 159,
          column: 5
        }
      },
      "33": {
        start: {
          line: 138,
          column: 20
        },
        end: {
          line: 155,
          column: 8
        }
      },
      "34": {
        start: {
          line: 156,
          column: 6
        },
        end: {
          line: 156,
          column: 83
        }
      },
      "35": {
        start: {
          line: 158,
          column: 6
        },
        end: {
          line: 158,
          column: 18
        }
      },
      "36": {
        start: {
          line: 164,
          column: 4
        },
        end: {
          line: 172,
          column: 5
        }
      },
      "37": {
        start: {
          line: 165,
          column: 6
        },
        end: {
          line: 169,
          column: 8
        }
      },
      "38": {
        start: {
          line: 171,
          column: 6
        },
        end: {
          line: 171,
          column: 18
        }
      },
      "39": {
        start: {
          line: 176,
          column: 0
        },
        end: {
          line: 176,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 4,
            column: 2
          },
          end: {
            line: 4,
            column: 3
          }
        },
        loc: {
          start: {
            line: 4,
            column: 21
          },
          end: {
            line: 6,
            column: 3
          }
        },
        line: 4
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 2
          },
          end: {
            line: 9,
            column: 3
          }
        },
        loc: {
          start: {
            line: 9,
            column: 41
          },
          end: {
            line: 18,
            column: 3
          }
        },
        line: 9
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 2
          },
          end: {
            line: 21,
            column: 3
          }
        },
        loc: {
          start: {
            line: 21,
            column: 27
          },
          end: {
            line: 30,
            column: 3
          }
        },
        line: 21
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 33,
            column: 2
          },
          end: {
            line: 33,
            column: 3
          }
        },
        loc: {
          start: {
            line: 33,
            column: 29
          },
          end: {
            line: 42,
            column: 3
          }
        },
        line: 33
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 45,
            column: 2
          },
          end: {
            line: 45,
            column: 3
          }
        },
        loc: {
          start: {
            line: 45,
            column: 44
          },
          end: {
            line: 56,
            column: 3
          }
        },
        line: 45
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 59,
            column: 2
          },
          end: {
            line: 59,
            column: 3
          }
        },
        loc: {
          start: {
            line: 59,
            column: 40
          },
          end: {
            line: 75,
            column: 3
          }
        },
        line: 59
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 78,
            column: 2
          },
          end: {
            line: 78,
            column: 3
          }
        },
        loc: {
          start: {
            line: 78,
            column: 45
          },
          end: {
            line: 94,
            column: 3
          }
        },
        line: 78
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 97,
            column: 2
          },
          end: {
            line: 97,
            column: 3
          }
        },
        loc: {
          start: {
            line: 97,
            column: 31
          },
          end: {
            line: 108,
            column: 3
          }
        },
        line: 97
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 111,
            column: 2
          },
          end: {
            line: 111,
            column: 3
          }
        },
        loc: {
          start: {
            line: 111,
            column: 25
          },
          end: {
            line: 120,
            column: 3
          }
        },
        line: 111
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 123,
            column: 2
          },
          end: {
            line: 123,
            column: 3
          }
        },
        loc: {
          start: {
            line: 123,
            column: 47
          },
          end: {
            line: 133,
            column: 3
          }
        },
        line: 123
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 136,
            column: 2
          },
          end: {
            line: 136,
            column: 3
          }
        },
        loc: {
          start: {
            line: 136,
            column: 24
          },
          end: {
            line: 160,
            column: 3
          }
        },
        line: 136
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 163,
            column: 2
          },
          end: {
            line: 163,
            column: 3
          }
        },
        loc: {
          start: {
            line: 163,
            column: 50
          },
          end: {
            line: 173,
            column: 3
          }
        },
        line: 163
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 71,
            column: 13
          },
          end: {
            line: 71,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 13
          },
          end: {
            line: 71,
            column: 22
          }
        }, {
          start: {
            line: 71,
            column: 26
          },
          end: {
            line: 71,
            column: 63
          }
        }],
        line: 71
      },
      "1": {
        loc: {
          start: {
            line: 97,
            column: 19
          },
          end: {
            line: 97,
            column: 29
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 97,
            column: 27
          },
          end: {
            line: 97,
            column: 29
          }
        }],
        line: 97
      },
      "2": {
        loc: {
          start: {
            line: 156,
            column: 13
          },
          end: {
            line: 156,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 13
          },
          end: {
            line: 156,
            column: 21
          }
        }, {
          start: {
            line: 156,
            column: 25
          },
          end: {
            line: 156,
            column: 82
          }
        }],
        line: 156
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c2fc996a8ccfa8726aa6066939db64c427dcb8a8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_xfipz4oiy = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_xfipz4oiy();
const BaseRepository =
/* istanbul ignore next */
(cov_xfipz4oiy().s[0]++, require('./base.repository'));
class ReviewRepository extends BaseRepository {
  constructor(model) {
    /* istanbul ignore next */
    cov_xfipz4oiy().f[0]++;
    cov_xfipz4oiy().s[1]++;
    super(model);
  }

  // Find reviews by destination
  async findByDestination(destinationId) {
    /* istanbul ignore next */
    cov_xfipz4oiy().f[1]++;
    cov_xfipz4oiy().s[2]++;
    try {
      /* istanbul ignore next */
      cov_xfipz4oiy().s[3]++;
      return await this.model.find({
        destination: destinationId
      }).populate('user', 'name email avatar').sort({
        createdAt: -1
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_xfipz4oiy().s[4]++;
      throw error;
    }
  }

  // Find reviews by user
  async findByUser(userId) {
    /* istanbul ignore next */
    cov_xfipz4oiy().f[2]++;
    cov_xfipz4oiy().s[5]++;
    try {
      /* istanbul ignore next */
      cov_xfipz4oiy().s[6]++;
      return await this.model.find({
        user: userId
      }).populate('destination', 'name city country').sort({
        createdAt: -1
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_xfipz4oiy().s[7]++;
      throw error;
    }
  }

  // Find reviews by rating
  async findByRating(rating) {
    /* istanbul ignore next */
    cov_xfipz4oiy().f[3]++;
    cov_xfipz4oiy().s[8]++;
    try {
      /* istanbul ignore next */
      cov_xfipz4oiy().s[9]++;
      return await this.model.find({
        rating
      }).populate('user destination').sort({
        createdAt: -1
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_xfipz4oiy().s[10]++;
      throw error;
    }
  }

  // Find reviews by date range
  async findByDateRange(startDate, endDate) {
    /* istanbul ignore next */
    cov_xfipz4oiy().f[4]++;
    cov_xfipz4oiy().s[11]++;
    try {
      /* istanbul ignore next */
      cov_xfipz4oiy().s[12]++;
      return await this.model.find({
        createdAt: {
          $gte: startDate,
          $lte: endDate
        }
      }).populate('user destination').sort({
        createdAt: -1
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_xfipz4oiy().s[13]++;
      throw error;
    }
  }

  // Get average rating for a destination
  async getAverageRating(destinationId) {
    /* istanbul ignore next */
    cov_xfipz4oiy().f[5]++;
    cov_xfipz4oiy().s[14]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_xfipz4oiy().s[15]++, await this.model.aggregate([{
        $match: {
          destination: destinationId
        }
      }, {
        $group: {
          _id: null,
          averageRating: {
            $avg: '$rating'
          },
          totalReviews: {
            $sum: 1
          }
        }
      }]));
      /* istanbul ignore next */
      cov_xfipz4oiy().s[16]++;
      return /* istanbul ignore next */(cov_xfipz4oiy().b[0][0]++, result[0]) ||
      /* istanbul ignore next */
      (cov_xfipz4oiy().b[0][1]++, {
        averageRating: 0,
        totalReviews: 0
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_xfipz4oiy().s[17]++;
      throw error;
    }
  }

  // Get rating distribution for a destination
  async getRatingDistribution(destinationId) {
    /* istanbul ignore next */
    cov_xfipz4oiy().f[6]++;
    cov_xfipz4oiy().s[18]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_xfipz4oiy().s[19]++, await this.model.aggregate([{
        $match: {
          destination: destinationId
        }
      }, {
        $group: {
          _id: '$rating',
          count: {
            $sum: 1
          }
        }
      }, {
        $sort: {
          _id: -1
        }
      }]));
      /* istanbul ignore next */
      cov_xfipz4oiy().s[20]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_xfipz4oiy().s[21]++;
      throw error;
    }
  }

  // Find recent reviews
  async findRecent(limit =
  /* istanbul ignore next */
  (cov_xfipz4oiy().b[1][0]++, 10)) {
    /* istanbul ignore next */
    cov_xfipz4oiy().f[7]++;
    cov_xfipz4oiy().s[22]++;
    try {
      /* istanbul ignore next */
      cov_xfipz4oiy().s[23]++;
      return await this.model.find().populate('user', 'name avatar').populate('destination', 'name city country').sort({
        createdAt: -1
      }).limit(limit);
    } catch (error) {
      /* istanbul ignore next */
      cov_xfipz4oiy().s[24]++;
      throw error;
    }
  }

  // Find reviews with photos
  async findWithPhotos() {
    /* istanbul ignore next */
    cov_xfipz4oiy().f[8]++;
    cov_xfipz4oiy().s[25]++;
    try {
      /* istanbul ignore next */
      cov_xfipz4oiy().s[26]++;
      return await this.model.find({
        photos: {
          $exists: true,
          $not: {
            $size: 0
          }
        }
      }).populate('user destination').sort({
        createdAt: -1
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_xfipz4oiy().s[27]++;
      throw error;
    }
  }

  // Check if user has reviewed destination
  async hasUserReviewed(userId, destinationId) {
    /* istanbul ignore next */
    cov_xfipz4oiy().f[9]++;
    cov_xfipz4oiy().s[28]++;
    try {
      const review =
      /* istanbul ignore next */
      (cov_xfipz4oiy().s[29]++, await this.model.findOne({
        user: userId,
        destination: destinationId
      }));
      /* istanbul ignore next */
      cov_xfipz4oiy().s[30]++;
      return !!review;
    } catch (error) {
      /* istanbul ignore next */
      cov_xfipz4oiy().s[31]++;
      throw error;
    }
  }

  // Get review statistics
  async getStatistics() {
    /* istanbul ignore next */
    cov_xfipz4oiy().f[10]++;
    cov_xfipz4oiy().s[32]++;
    try {
      const stats =
      /* istanbul ignore next */
      (cov_xfipz4oiy().s[33]++, await this.model.aggregate([{
        $group: {
          _id: null,
          totalReviews: {
            $sum: 1
          },
          averageRating: {
            $avg: '$rating'
          },
          totalWithPhotos: {
            $sum: {
              $cond: [{
                $gt: [{
                  $size: {
                    $ifNull: ['$photos', []]
                  }
                }, 0]
              }, 1, 0]
            }
          }
        }
      }]));
      /* istanbul ignore next */
      cov_xfipz4oiy().s[34]++;
      return /* istanbul ignore next */(cov_xfipz4oiy().b[2][0]++, stats[0]) ||
      /* istanbul ignore next */
      (cov_xfipz4oiy().b[2][1]++, {
        totalReviews: 0,
        averageRating: 0,
        totalWithPhotos: 0
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_xfipz4oiy().s[35]++;
      throw error;
    }
  }

  // Update review helpfulness
  async updateHelpfulness(reviewId, helpfulCount) {
    /* istanbul ignore next */
    cov_xfipz4oiy().f[11]++;
    cov_xfipz4oiy().s[36]++;
    try {
      /* istanbul ignore next */
      cov_xfipz4oiy().s[37]++;
      return await this.model.findByIdAndUpdate(reviewId, {
        $set: {
          helpfulCount
        }
      }, {
        new: true
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_xfipz4oiy().s[38]++;
      throw error;
    }
  }
}
/* istanbul ignore next */
cov_xfipz4oiy().s[39]++;
module.exports = ReviewRepository;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,