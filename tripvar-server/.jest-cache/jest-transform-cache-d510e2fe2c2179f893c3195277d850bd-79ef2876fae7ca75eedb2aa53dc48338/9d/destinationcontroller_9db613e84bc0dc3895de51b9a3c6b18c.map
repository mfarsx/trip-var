{"version":3,"names":["cov_eu6n0ec2m","actualCoverage","Destination","s","require","ValidationError","info","destinationController","getAllDestinations","req","res","next","f","category","featured","search","from","to","date","guests","query","b","searchConditions","push","title","$regex","$options","description","location","length","$or","destinations","find","resultsCount","status","json","success","data","message","error","getDestinationById","destination","findById","params","id","createDestination","create","body","updateDestination","findByIdAndUpdate","new","runValidators","deleteDestination","findByIdAndDelete","module","exports"],"sources":["destination.controller.js"],"sourcesContent":["const Destination = require('../models/destination.model');\nconst { ValidationError } = require('../utils/errors');\nconst { info } = require('../utils/logger');\n\nconst destinationController = {\n  // Get all destinations\n  getAllDestinations: async function(req, res, next) {\n    try {\n      const { category, featured, search, from, to, date, guests } = req.query;\n      const query = {};\n\n      // Basic filters\n      if (category) {\n        query.category = category;\n      }\n\n      if (featured === 'true') {\n        query.featured = true;\n      }\n\n      // Advanced search functionality\n      const searchConditions = [];\n\n      // If search parameter is provided (general search)\n      if (search) {\n        searchConditions.push(\n          { title: { $regex: search, $options: 'i' } },\n          { description: { $regex: search, $options: 'i' } },\n          { location: { $regex: search, $options: 'i' } }\n        );\n      }\n\n      // If destination (to) is provided\n      if (to) {\n        searchConditions.push(\n          { location: { $regex: to, $options: 'i' } },\n          { title: { $regex: to, $options: 'i' } }\n        );\n      }\n\n      // If departure location (from) is provided\n      // Note: This is a simplified approach since our model doesn't have a \"from\" field\n      // In a real app, you might have a different model structure\n      if (from) {\n        // We could use this to filter based on proximity or routes\n        // For now, we'll just log it\n        info(`Search request with departure location: ${from}`);\n      }\n\n      // If date is provided\n      if (date) {\n        // In a real app, you would filter based on availability on this date\n        // For now, we'll just log it\n        info(`Search request for date: ${date}`);\n      }\n\n      // If guests count is provided\n      if (guests) {\n        // In a real app, you would filter based on capacity\n        // For now, we'll just log it\n        info(`Search request for ${guests} guests`);\n      }\n\n      // Add search conditions to query if any exist\n      if (searchConditions.length > 0) {\n        query.$or = searchConditions;\n      }\n\n      const destinations = await Destination.find(query);\n\n      // Log the search for analytics purposes\n      info('Search performed', {\n        category, featured, search, from, to, date, guests,\n        resultsCount: destinations.length\n      });\n\n      res.status(200).json({\n        success: true,\n        data: {\n          destinations\n        },\n        message: 'Destinations retrieved successfully'\n      });\n    } catch (error) {\n      next(error);\n    }\n  },\n\n  // Get destination by ID\n  getDestinationById: async function(req, res, next) {\n    try {\n      const destination = await Destination.findById(req.params.id);\n      if (!destination) {\n        throw new ValidationError('Destination not found');\n      }\n      res.status(200).json({\n        success: true,\n        data: {\n          destination\n        },\n        message: 'Destination retrieved successfully'\n      });\n    } catch (error) {\n      next(error);\n    }\n  },\n\n  // Create new destination (admin only)\n  createDestination: async function(req, res, next) {\n    try {\n      const destination = await Destination.create(req.body);\n      res.status(201).json({\n        success: true,\n        data: {\n          destination\n        },\n        message: 'Destination created successfully'\n      });\n    } catch (error) {\n      next(error);\n    }\n  },\n\n  // Update destination (admin only)\n  updateDestination: async function(req, res, next) {\n    try {\n      const destination = await Destination.findByIdAndUpdate(\n        req.params.id,\n        req.body,\n        { new: true, runValidators: true }\n      );\n      if (!destination) {\n        throw new ValidationError('Destination not found');\n      }\n      res.status(200).json({\n        success: true,\n        data: {\n          destination\n        },\n        message: 'Destination updated successfully'\n      });\n    } catch (error) {\n      next(error);\n    }\n  },\n\n  // Delete destination (admin only)\n  deleteDestination: async function(req, res, next) {\n    try {\n      const destination = await Destination.findByIdAndDelete(req.params.id);\n      if (!destination) {\n        throw new ValidationError('Destination not found');\n      }\n      res.status(200).json({\n        success: true,\n        message: 'Destination deleted successfully'\n      });\n    } catch (error) {\n      next(error);\n    }\n  }\n};\n\nmodule.exports = destinationController;\n"],"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","ignoreList":[]}