{"version":3,"names":["cov_ln55vjhbl","actualCoverage","rateLimit","s","require","slowDown","helmet","security","SecurityMiddleware","constructor","f","setupHelmet","setupRateLimiters","setupSlowDown","contentSecurityPolicy","directives","defaultSrc","styleSrc","fontSrc","imgSrc","scriptSrc","connectSrc","frameSrc","objectSrc","upgradeInsecureRequests","crossOriginEmbedderPolicy","hsts","maxAge","includeSubDomains","preload","noSniff","xssFilter","referrerPolicy","policy","generalLimiter","windowMs","max","message","error","retryAfter","standardHeaders","legacyHeaders","handler","req","res","ip","userAgent","get","path","method","status","json","authLimiter","skipSuccessfulRequests","passwordResetLimiter","uploadLimiter","delayAfter","delayMs","maxDelayMs","onLimitReached","options","requestSizeLimiter","maxSize","b","next","contentLength","parseInt","maxSizeBytes","parseSize","size","units","kb","mb","gb","match","toLowerCase","value","parseFloat","unit","Math","floor","ipWhitelist","allowedIPs","clientIP","connection","remoteAddress","length","includes","userAgentValidator","allowedUserAgents","isAllowed","some","allowed","requestTimeout","timeoutMs","setTimeout","timeout","headersSent","securityHeaders","removeHeader","setHeader","csrfProtection","token","body","_csrf","sessionToken","session","csrfToken","generateCSRFToken","crypto","randomBytes","toString","securityMiddleware","module","exports","bind"],"sources":["security.js"],"sourcesContent":["const rateLimit = require('express-rate-limit');\nconst slowDown = require('express-slow-down');\nconst helmet = require('helmet');\nconst { security } = require('../utils/logger');\n\n/**\n * Security middleware configuration\n */\nclass SecurityMiddleware {\n  constructor() {\n    this.setupHelmet();\n    this.setupRateLimiters();\n    this.setupSlowDown();\n  }\n\n  /**\n   * Setup Helmet security headers\n   */\n  setupHelmet() {\n    this.helmet = helmet({\n      contentSecurityPolicy: {\n        directives: {\n          defaultSrc: ['\\'self\\''],\n          styleSrc: ['\\'self\\'', '\\'unsafe-inline\\'', 'https://fonts.googleapis.com'],\n          fontSrc: ['\\'self\\'', 'https://fonts.gstatic.com'],\n          imgSrc: ['\\'self\\'', 'data:', 'https:'],\n          scriptSrc: ['\\'self\\''],\n          connectSrc: ['\\'self\\''],\n          frameSrc: ['\\'none\\''],\n          objectSrc: ['\\'none\\''],\n          upgradeInsecureRequests: []\n        }\n      },\n      crossOriginEmbedderPolicy: false,\n      hsts: {\n        maxAge: 31536000,\n        includeSubDomains: true,\n        preload: true\n      },\n      noSniff: true,\n      xssFilter: true,\n      referrerPolicy: { policy: 'strict-origin-when-cross-origin' }\n    });\n  }\n\n  /**\n   * Setup rate limiters\n   */\n  setupRateLimiters() {\n    // General API rate limiter\n    this.generalLimiter = rateLimit({\n      windowMs: 15 * 60 * 1000, // 15 minutes\n      max: 100, // limit each IP to 100 requests per windowMs\n      message: {\n        error: 'Too many requests from this IP, please try again later.',\n        retryAfter: '15 minutes'\n      },\n      standardHeaders: true,\n      legacyHeaders: false,\n      handler: (req, res) => {\n        security('Rate limit exceeded', {\n          ip: req.ip,\n          userAgent: req.get('User-Agent'),\n          path: req.path,\n          method: req.method\n        });\n\n        res.status(429).json({\n          error: 'Too many requests from this IP, please try again later.',\n          retryAfter: '15 minutes'\n        });\n      }\n    });\n\n    // Strict rate limiter for authentication endpoints\n    this.authLimiter = rateLimit({\n      windowMs: 15 * 60 * 1000, // 15 minutes\n      max: 5, // limit each IP to 5 requests per windowMs\n      message: {\n        error: 'Too many authentication attempts, please try again later.',\n        retryAfter: '15 minutes'\n      },\n      standardHeaders: true,\n      legacyHeaders: false,\n      skipSuccessfulRequests: true,\n      handler: (req, res) => {\n        security('Auth rate limit exceeded', {\n          ip: req.ip,\n          userAgent: req.get('User-Agent'),\n          path: req.path,\n          method: req.method\n        });\n\n        res.status(429).json({\n          error: 'Too many authentication attempts, please try again later.',\n          retryAfter: '15 minutes'\n        });\n      }\n    });\n\n    // Strict rate limiter for password reset\n    this.passwordResetLimiter = rateLimit({\n      windowMs: 60 * 60 * 1000, // 1 hour\n      max: 3, // limit each IP to 3 password reset attempts per hour\n      message: {\n        error: 'Too many password reset attempts, please try again later.',\n        retryAfter: '1 hour'\n      },\n      standardHeaders: true,\n      legacyHeaders: false,\n      handler: (req, res) => {\n        security('Password reset rate limit exceeded', {\n          ip: req.ip,\n          userAgent: req.get('User-Agent'),\n          path: req.path,\n          method: req.method\n        });\n\n        res.status(429).json({\n          error: 'Too many password reset attempts, please try again later.',\n          retryAfter: '1 hour'\n        });\n      }\n    });\n\n    // Rate limiter for file uploads\n    this.uploadLimiter = rateLimit({\n      windowMs: 60 * 60 * 1000, // 1 hour\n      max: 10, // limit each IP to 10 uploads per hour\n      message: {\n        error: 'Too many file uploads, please try again later.',\n        retryAfter: '1 hour'\n      },\n      standardHeaders: true,\n      legacyHeaders: false,\n      handler: (req, res) => {\n        security('Upload rate limit exceeded', {\n          ip: req.ip,\n          userAgent: req.get('User-Agent'),\n          path: req.path,\n          method: req.method\n        });\n\n        res.status(429).json({\n          error: 'Too many file uploads, please try again later.',\n          retryAfter: '1 hour'\n        });\n      }\n    });\n  }\n\n  /**\n   * Setup slow down middleware\n   */\n  setupSlowDown() {\n    this.slowDown = slowDown({\n      windowMs: 15 * 60 * 1000, // 15 minutes\n      delayAfter: 50, // allow 50 requests per 15 minutes, then...\n      delayMs: 500, // begin adding 500ms of delay per request above 50\n      maxDelayMs: 20000, // max delay of 20 seconds\n      onLimitReached: (req, res, options) => {\n        security('Slow down limit reached', {\n          ip: req.ip,\n          userAgent: req.get('User-Agent'),\n          path: req.path,\n          method: req.method\n        });\n      }\n    });\n  }\n\n  /**\n   * Request size limiter middleware\n   */\n  requestSizeLimiter(maxSize = '10mb') {\n    return (req, res, next) => {\n      const contentLength = parseInt(req.get('content-length') || '0', 10);\n      const maxSizeBytes = this.parseSize(maxSize);\n\n      if (contentLength > maxSizeBytes) {\n        security('Request size limit exceeded', {\n          ip: req.ip,\n          contentLength,\n          maxSize: maxSizeBytes,\n          path: req.path,\n          method: req.method\n        });\n\n        return res.status(413).json({\n          error: 'Request entity too large',\n          message: `Request size exceeds the limit of ${maxSize}`\n        });\n      }\n\n      next();\n    };\n  }\n\n  /**\n   * Parse size string to bytes\n   */\n  parseSize(size) {\n    const units = {\n      b: 1,\n      kb: 1024,\n      mb: 1024 * 1024,\n      gb: 1024 * 1024 * 1024\n    };\n\n    const match = size.toLowerCase().match(/^(\\d+(?:\\.\\d+)?)\\s*(b|kb|mb|gb)?$/);\n    if (!match) {\n      return 10 * 1024 * 1024; // default 10MB\n    }\n\n    const value = parseFloat(match[1]);\n    const unit = match[2] || 'b';\n\n    return Math.floor(value * units[unit]);\n  }\n\n  /**\n   * IP whitelist middleware\n   */\n  ipWhitelist(allowedIPs = []) {\n    return (req, res, next) => {\n      const clientIP = req.ip || req.connection.remoteAddress;\n\n      if (allowedIPs.length > 0 && !allowedIPs.includes(clientIP)) {\n        security('IP not in whitelist', {\n          ip: clientIP,\n          userAgent: req.get('User-Agent'),\n          path: req.path,\n          method: req.method\n        });\n\n        return res.status(403).json({\n          error: 'Access forbidden',\n          message: 'Your IP address is not authorized to access this resource'\n        });\n      }\n\n      next();\n    };\n  }\n\n  /**\n   * User agent validation middleware\n   */\n  userAgentValidator(allowedUserAgents = []) {\n    return (req, res, next) => {\n      const userAgent = req.get('User-Agent');\n\n      if (allowedUserAgents.length > 0) {\n        const isAllowed = allowedUserAgents.some(allowed =>\n          userAgent && userAgent.toLowerCase().includes(allowed.toLowerCase())\n        );\n\n        if (!isAllowed) {\n          security('User agent not allowed', {\n            ip: req.ip,\n            userAgent,\n            path: req.path,\n            method: req.method\n          });\n\n          return res.status(403).json({\n            error: 'Access forbidden',\n            message: 'User agent not allowed'\n          });\n        }\n      }\n\n      next();\n    };\n  }\n\n  /**\n   * Request timeout middleware\n   */\n  requestTimeout(timeoutMs = 30000) {\n    return (req, res, next) => {\n      req.setTimeout(timeoutMs, () => {\n        security('Request timeout', {\n          ip: req.ip,\n          userAgent: req.get('User-Agent'),\n          path: req.path,\n          method: req.method,\n          timeout: timeoutMs\n        });\n\n        if (!res.headersSent) {\n          res.status(408).json({\n            error: 'Request timeout',\n            message: 'The request took too long to process'\n          });\n        }\n      });\n\n      next();\n    };\n  }\n\n  /**\n   * Security headers middleware\n   */\n  securityHeaders() {\n    return (req, res, next) => {\n      // Remove server header\n      res.removeHeader('X-Powered-By');\n\n      // Add custom security headers\n      res.setHeader('X-Content-Type-Options', 'nosniff');\n      res.setHeader('X-Frame-Options', 'DENY');\n      res.setHeader('X-XSS-Protection', '1; mode=block');\n      res.setHeader('Referrer-Policy', 'strict-origin-when-cross-origin');\n      res.setHeader('Permissions-Policy', 'geolocation=(), microphone=(), camera=()');\n\n      next();\n    };\n  }\n\n  /**\n   * CSRF protection middleware (basic implementation)\n   */\n  csrfProtection() {\n    return (req, res, next) => {\n      // Skip CSRF for GET, HEAD, OPTIONS\n      if (['GET', 'HEAD', 'OPTIONS'].includes(req.method)) {\n        return next();\n      }\n\n      // Check for CSRF token\n      const token = req.get('X-CSRF-Token') || req.body._csrf;\n      const sessionToken = req.session?.csrfToken;\n\n      if (!token || !sessionToken || token !== sessionToken) {\n        security('CSRF token validation failed', {\n          ip: req.ip,\n          userAgent: req.get('User-Agent'),\n          path: req.path,\n          method: req.method\n        });\n\n        return res.status(403).json({\n          error: 'CSRF token validation failed',\n          message: 'Invalid or missing CSRF token'\n        });\n      }\n\n      next();\n    };\n  }\n\n  /**\n   * Generate CSRF token\n   */\n  generateCSRFToken() {\n    const crypto = require('crypto');\n    return crypto.randomBytes(32).toString('hex');\n  }\n}\n\n// Create singleton instance\nconst securityMiddleware = new SecurityMiddleware();\n\nmodule.exports = {\n  SecurityMiddleware,\n  securityMiddleware,\n  // Export individual middleware functions\n  helmet: securityMiddleware.helmet,\n  generalLimiter: securityMiddleware.generalLimiter,\n  authLimiter: securityMiddleware.authLimiter,\n  passwordResetLimiter: securityMiddleware.passwordResetLimiter,\n  uploadLimiter: securityMiddleware.uploadLimiter,\n  slowDown: securityMiddleware.slowDown,\n  requestSizeLimiter: securityMiddleware.requestSizeLimiter.bind(securityMiddleware),\n  ipWhitelist: securityMiddleware.ipWhitelist.bind(securityMiddleware),\n  userAgentValidator: securityMiddleware.userAgentValidator.bind(securityMiddleware),\n  requestTimeout: securityMiddleware.requestTimeout.bind(securityMiddleware),\n  securityHeaders: securityMiddleware.securityHeaders.bind(securityMiddleware),\n  csrfProtection: securityMiddleware.csrfProtection.bind(securityMiddleware),\n  generateCSRFToken: securityMiddleware.generateCSRFToken.bind(securityMiddleware)\n};"],"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","ignoreList":[]}