{"version":3,"names":["_getJestObj","mock","connectRedis","jest","fn","mockResolvedValue","disconnectRedis","getRedisClient","get","set","del","exists","expire","flushall","ping","quit","status","redisUtils","deleteCache","getCache","setCache","securityConfig","authLimiter","req","res","next","generalLimiter","validationRules","destinationTitle","destinationDescription","destinationImageUrl","destinationRating","destinationPrice","destinationLocation","destinationCategory","validateRequest","require","express","cors","helmet","compression","rateLimit","slowDown","authRoutes","destinationRoutes","bookingRoutes","healthRoutes","errorHandler","app","use","contentSecurityPolicy","crossOriginEmbedderPolicy","origin","process","env","ALLOWED_ORIGINS","split","credentials","limiter","windowMs","max","message","speedLimiter","delayAfter","delayMs","validate","json","limit","urlencoded","extended","error","Error","originalUrl","statusCode","code","isOperational","module","exports"],"sources":["app.test.js"],"sourcesContent":["// Test-specific app configuration that doesn't connect to external services\nconst express = require('express');\nconst cors = require('cors');\nconst helmet = require('helmet');\nconst compression = require('compression');\nconst rateLimit = require('express-rate-limit');\nconst slowDown = require('express-slow-down');\n\n// Mock external services before importing routes\njest.mock('../config/redis', () => ({\n  connectRedis: jest.fn().mockResolvedValue(),\n  disconnectRedis: jest.fn().mockResolvedValue(),\n  getRedisClient: jest.fn(() => ({\n    get: jest.fn().mockResolvedValue(null),\n    set: jest.fn().mockResolvedValue('OK'),\n    del: jest.fn().mockResolvedValue(1),\n    exists: jest.fn().mockResolvedValue(0),\n    expire: jest.fn().mockResolvedValue(1),\n    flushall: jest.fn().mockResolvedValue('OK'),\n    ping: jest.fn().mockResolvedValue('PONG'),\n    quit: jest.fn().mockResolvedValue('OK'),\n    status: 'ready'\n  })),\n  redisUtils: {\n    deleteCache: jest.fn().mockResolvedValue(true),\n    getCache: jest.fn().mockResolvedValue(null),\n    setCache: jest.fn().mockResolvedValue('OK'),\n    exists: jest.fn().mockResolvedValue(false),\n    expire: jest.fn().mockResolvedValue(true),\n    flushall: jest.fn().mockResolvedValue('OK')\n  }\n}));\n\n// Mock security config with relaxed rate limiting for tests\njest.mock('../config/security', () => ({\n  securityConfig: {\n    authLimiter: (req, res, next) => next(), // Skip rate limiting in tests\n    generalLimiter: (req, res, next) => next() // Skip rate limiting in tests\n  },\n  validationRules: {\n    destinationTitle: (req, res, next) => next(),\n    destinationDescription: (req, res, next) => next(),\n    destinationImageUrl: (req, res, next) => next(),\n    destinationRating: (req, res, next) => next(),\n    destinationPrice: (req, res, next) => next(),\n    destinationLocation: (req, res, next) => next(),\n    destinationCategory: (req, res, next) => next()\n  },\n  validateRequest: (req, res, next) => next()\n}));\n\n// Import routes\nconst authRoutes = require('../routes/auth.routes');\nconst destinationRoutes = require('../routes/destination.routes');\nconst bookingRoutes = require('../routes/booking.routes');\nconst healthRoutes = require('../routes/health.routes');\n\n// Import middleware\nconst errorHandler = require('../middleware/errorHandler');\n\n// Create Express app\nconst app = express();\n\n// Security middleware\napp.use(helmet({\n  contentSecurityPolicy: false, // Disable for testing\n  crossOriginEmbedderPolicy: false\n}));\n\n// CORS configuration\napp.use(cors({\n  origin: process.env.ALLOWED_ORIGINS?.split(',') || ['http://localhost:3000', 'http://localhost:5173'],\n  credentials: true\n}));\n\n// Compression middleware\napp.use(compression());\n\n// Rate limiting (relaxed for testing)\nconst limiter = rateLimit({\n  windowMs: 15 * 60 * 1000, // 15 minutes\n  max: 1000, // limit each IP to 1000 requests per windowMs (increased for testing)\n  message: 'Too many requests from this IP, please try again later.'\n});\napp.use('/api/', limiter);\n\n// Speed limiting (relaxed for testing)\nconst speedLimiter = slowDown({\n  windowMs: 15 * 60 * 1000, // 15 minutes\n  delayAfter: 500, // allow 500 requests per 15 minutes, then... (increased for testing)\n  delayMs: () => 100, // begin adding 100ms of delay per request above 500 (reduced for testing)\n  validate: { delayMs: false } // Disable validation warning\n});\napp.use('/api/', speedLimiter);\n\n// Body parsing middleware\napp.use(express.json({ limit: '10mb' }));\napp.use(express.urlencoded({ extended: true, limit: '10mb' }));\n\n\n\n// Request validation middleware (disabled for tests)\n// app.use(validateRequest);\n\n// Routes\napp.use('/api/v1/auth', authRoutes);\napp.use('/api/v1/destinations', destinationRoutes);\napp.use('/api/v1/bookings', bookingRoutes);\napp.use('/health', healthRoutes);\n\n// 404 handler for undefined routes\napp.use('*', (req, res, next) => {\n  const error = new Error(`Route ${req.originalUrl} not found`);\n  error.statusCode = 404;\n  error.status = 'fail';\n  error.code = 'ROUTE_NOT_FOUND';\n  error.isOperational = true;\n  next(error);\n});\n\n// Error handling middleware (must be last)\napp.use(errorHandler);\n\nmodule.exports = app;"],"mappings":"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","ignoreList":[]}