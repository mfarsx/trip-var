500b2d026db57facbe21163ee702a4fa
/* istanbul ignore next */
function cov_ahm7425j0() {
  var path = "/Users/mfarsx/dev/tripvar/tripvar-server/src/models/notification.model.js";
  var hash = "1e6073dc65dabaab53ae15f7a6056a59f8f8a74a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/mfarsx/dev/tripvar/tripvar-server/src/models/notification.model.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 17
        },
        end: {
          line: 1,
          column: 36
        }
      },
      "1": {
        start: {
          line: 3,
          column: 27
        },
        end: {
          line: 107,
          column: 1
        }
      },
      "2": {
        start: {
          line: 110,
          column: 0
        },
        end: {
          line: 110,
          column: 53
        }
      },
      "3": {
        start: {
          line: 111,
          column: 0
        },
        end: {
          line: 111,
          column: 49
        }
      },
      "4": {
        start: {
          line: 112,
          column: 0
        },
        end: {
          line: 112,
          column: 38
        }
      },
      "5": {
        start: {
          line: 113,
          column: 0
        },
        end: {
          line: 113,
          column: 70
        }
      },
      "6": {
        start: {
          line: 116,
          column: 0
        },
        end: {
          line: 137,
          column: 3
        }
      },
      "7": {
        start: {
          line: 117,
          column: 14
        },
        end: {
          line: 117,
          column: 24
        }
      },
      "8": {
        start: {
          line: 118,
          column: 18
        },
        end: {
          line: 118,
          column: 42
        }
      },
      "9": {
        start: {
          line: 119,
          column: 19
        },
        end: {
          line: 119,
          column: 42
        }
      },
      "10": {
        start: {
          line: 120,
          column: 22
        },
        end: {
          line: 120,
          column: 56
        }
      },
      "11": {
        start: {
          line: 121,
          column: 20
        },
        end: {
          line: 121,
          column: 59
        }
      },
      "12": {
        start: {
          line: 122,
          column: 19
        },
        end: {
          line: 122,
          column: 63
        }
      },
      "13": {
        start: {
          line: 124,
          column: 2
        },
        end: {
          line: 126,
          column: 3
        }
      },
      "14": {
        start: {
          line: 125,
          column: 4
        },
        end: {
          line: 125,
          column: 22
        }
      },
      "15": {
        start: {
          line: 127,
          column: 2
        },
        end: {
          line: 129,
          column: 3
        }
      },
      "16": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 128,
          column: 33
        }
      },
      "17": {
        start: {
          line: 130,
          column: 2
        },
        end: {
          line: 132,
          column: 3
        }
      },
      "18": {
        start: {
          line: 131,
          column: 4
        },
        end: {
          line: 131,
          column: 31
        }
      },
      "19": {
        start: {
          line: 133,
          column: 2
        },
        end: {
          line: 135,
          column: 3
        }
      },
      "20": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 134,
          column: 30
        }
      },
      "21": {
        start: {
          line: 136,
          column: 2
        },
        end: {
          line: 136,
          column: 38
        }
      },
      "22": {
        start: {
          line: 140,
          column: 0
        },
        end: {
          line: 144,
          column: 2
        }
      },
      "23": {
        start: {
          line: 141,
          column: 23
        },
        end: {
          line: 141,
          column: 49
        }
      },
      "24": {
        start: {
          line: 142,
          column: 2
        },
        end: {
          line: 142,
          column: 28
        }
      },
      "25": {
        start: {
          line: 143,
          column: 2
        },
        end: {
          line: 143,
          column: 22
        }
      },
      "26": {
        start: {
          line: 147,
          column: 0
        },
        end: {
          line: 164,
          column: 2
        }
      },
      "27": {
        start: {
          line: 148,
          column: 21
        },
        end: {
          line: 151,
          column: 3
        }
      },
      "28": {
        start: {
          line: 153,
          column: 2
        },
        end: {
          line: 163,
          column: 3
        }
      },
      "29": {
        start: {
          line: 154,
          column: 4
        },
        end: {
          line: 157,
          column: 6
        }
      },
      "30": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 162,
          column: 6
        }
      },
      "31": {
        start: {
          line: 167,
          column: 0
        },
        end: {
          line: 169,
          column: 2
        }
      },
      "32": {
        start: {
          line: 168,
          column: 2
        },
        end: {
          line: 168,
          column: 68
        }
      },
      "33": {
        start: {
          line: 172,
          column: 0
        },
        end: {
          line: 176,
          column: 2
        }
      },
      "34": {
        start: {
          line: 173,
          column: 2
        },
        end: {
          line: 175,
          column: 5
        }
      },
      "35": {
        start: {
          line: 178,
          column: 21
        },
        end: {
          line: 178,
          column: 71
        }
      },
      "36": {
        start: {
          line: 180,
          column: 0
        },
        end: {
          line: 180,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 116,
            column: 38
          },
          end: {
            line: 116,
            column: 39
          }
        },
        loc: {
          start: {
            line: 116,
            column: 49
          },
          end: {
            line: 137,
            column: 1
          }
        },
        line: 116
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 140,
            column: 48
          },
          end: {
            line: 140,
            column: 49
          }
        },
        loc: {
          start: {
            line: 140,
            column: 81
          },
          end: {
            line: 144,
            column: 1
          }
        },
        line: 140
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 147,
            column: 40
          },
          end: {
            line: 147,
            column: 41
          }
        },
        loc: {
          start: {
            line: 147,
            column: 80
          },
          end: {
            line: 164,
            column: 1
          }
        },
        line: 147
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 167,
            column: 44
          },
          end: {
            line: 167,
            column: 45
          }
        },
        loc: {
          start: {
            line: 167,
            column: 67
          },
          end: {
            line: 169,
            column: 1
          }
        },
        line: 167
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 172,
            column: 44
          },
          end: {
            line: 172,
            column: 45
          }
        },
        loc: {
          start: {
            line: 172,
            column: 61
          },
          end: {
            line: 176,
            column: 1
          }
        },
        line: 172
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 124,
            column: 2
          },
          end: {
            line: 126,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 2
          },
          end: {
            line: 126,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "1": {
        loc: {
          start: {
            line: 127,
            column: 2
          },
          end: {
            line: 129,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 2
          },
          end: {
            line: 129,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "2": {
        loc: {
          start: {
            line: 130,
            column: 2
          },
          end: {
            line: 132,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 2
          },
          end: {
            line: 132,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "3": {
        loc: {
          start: {
            line: 133,
            column: 2
          },
          end: {
            line: 135,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 2
          },
          end: {
            line: 135,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "4": {
        loc: {
          start: {
            line: 153,
            column: 2
          },
          end: {
            line: 163,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 2
          },
          end: {
            line: 163,
            column: 3
          }
        }, {
          start: {
            line: 158,
            column: 9
          },
          end: {
            line: 163,
            column: 3
          }
        }],
        line: 153
      },
      "5": {
        loc: {
          start: {
            line: 153,
            column: 6
          },
          end: {
            line: 153,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 6
          },
          end: {
            line: 153,
            column: 21
          }
        }, {
          start: {
            line: 153,
            column: 25
          },
          end: {
            line: 153,
            column: 51
          }
        }],
        line: 153
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1e6073dc65dabaab53ae15f7a6056a59f8f8a74a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ahm7425j0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ahm7425j0();
const mongoose =
/* istanbul ignore next */
(cov_ahm7425j0().s[0]++, require('mongoose'));
const notificationSchema =
/* istanbul ignore next */
(cov_ahm7425j0().s[1]++, new mongoose.Schema({
  // User who will receive the notification
  user: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User',
    required: [true, 'Notification must belong to a user']
  },
  // Related entities (optional)
  booking: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Booking',
    required: false
  },
  destination: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Destination',
    required: false
  },
  // Notification content
  title: {
    type: String,
    required: [true, 'Notification title is required'],
    trim: true,
    maxlength: [100, 'Title cannot exceed 100 characters']
  },
  message: {
    type: String,
    required: [true, 'Notification message is required'],
    trim: true,
    maxlength: [500, 'Message cannot exceed 500 characters']
  },
  // Notification type
  type: {
    type: String,
    required: [true, 'Notification type is required'],
    enum: {
      values: ['booking_confirmed', 'booking_cancelled', 'booking_reminder', 'payment_success', 'payment_failed', 'review_request', 'destination_update', 'promotion', 'system'],
      message: 'Invalid notification type'
    }
  },
  // Notification priority
  priority: {
    type: String,
    enum: {
      values: ['low', 'medium', 'high', 'urgent'],
      message: 'Priority must be low, medium, high, or urgent'
    },
    default: 'medium'
  },
  // Read status
  isRead: {
    type: Boolean,
    default: false
  },
  // Read timestamp
  readAt: {
    type: Date,
    required: false
  },
  // Action URL (optional)
  actionUrl: {
    type: String,
    required: false,
    maxlength: [200, 'Action URL cannot exceed 200 characters']
  },
  // Action text (optional)
  actionText: {
    type: String,
    required: false,
    maxlength: [50, 'Action text cannot exceed 50 characters']
  },
  // Expiration date (optional)
  expiresAt: {
    type: Date,
    required: false
  }
}, {
  timestamps: true,
  toJSON: {
    virtuals: true
  },
  toObject: {
    virtuals: true
  }
}));

// Index for better query performance
/* istanbul ignore next */
cov_ahm7425j0().s[2]++;
notificationSchema.index({
  user: 1,
  createdAt: -1
});
/* istanbul ignore next */
cov_ahm7425j0().s[3]++;
notificationSchema.index({
  user: 1,
  isRead: 1
});
/* istanbul ignore next */
cov_ahm7425j0().s[4]++;
notificationSchema.index({
  type: 1
});
/* istanbul ignore next */
cov_ahm7425j0().s[5]++;
notificationSchema.index({
  expiresAt: 1
}, {
  expireAfterSeconds: 0
}); // TTL index

// Virtual field for notification age
/* istanbul ignore next */
cov_ahm7425j0().s[6]++;
notificationSchema.virtual('age').get(function () {
  /* istanbul ignore next */
  cov_ahm7425j0().f[0]++;
  const now =
  /* istanbul ignore next */
  (cov_ahm7425j0().s[7]++, new Date());
  const created =
  /* istanbul ignore next */
  (cov_ahm7425j0().s[8]++, new Date(this.createdAt));
  const diffTime =
  /* istanbul ignore next */
  (cov_ahm7425j0().s[9]++, Math.abs(now - created));
  const diffMinutes =
  /* istanbul ignore next */
  (cov_ahm7425j0().s[10]++, Math.floor(diffTime / (1000 * 60)));
  const diffHours =
  /* istanbul ignore next */
  (cov_ahm7425j0().s[11]++, Math.floor(diffTime / (1000 * 60 * 60)));
  const diffDays =
  /* istanbul ignore next */
  (cov_ahm7425j0().s[12]++, Math.floor(diffTime / (1000 * 60 * 60 * 24)));
  /* istanbul ignore next */
  cov_ahm7425j0().s[13]++;
  if (diffMinutes < 1) {
    /* istanbul ignore next */
    cov_ahm7425j0().b[0][0]++;
    cov_ahm7425j0().s[14]++;
    return 'Just now';
  } else
  /* istanbul ignore next */
  {
    cov_ahm7425j0().b[0][1]++;
  }
  cov_ahm7425j0().s[15]++;
  if (diffMinutes < 60) {
    /* istanbul ignore next */
    cov_ahm7425j0().b[1][0]++;
    cov_ahm7425j0().s[16]++;
    return `${diffMinutes}m ago`;
  } else
  /* istanbul ignore next */
  {
    cov_ahm7425j0().b[1][1]++;
  }
  cov_ahm7425j0().s[17]++;
  if (diffHours < 24) {
    /* istanbul ignore next */
    cov_ahm7425j0().b[2][0]++;
    cov_ahm7425j0().s[18]++;
    return `${diffHours}h ago`;
  } else
  /* istanbul ignore next */
  {
    cov_ahm7425j0().b[2][1]++;
  }
  cov_ahm7425j0().s[19]++;
  if (diffDays < 7) {
    /* istanbul ignore next */
    cov_ahm7425j0().b[3][0]++;
    cov_ahm7425j0().s[20]++;
    return `${diffDays}d ago`;
  } else
  /* istanbul ignore next */
  {
    cov_ahm7425j0().b[3][1]++;
  }
  cov_ahm7425j0().s[21]++;
  return created.toLocaleDateString();
});

// Static method to create notification
/* istanbul ignore next */
cov_ahm7425j0().s[22]++;
notificationSchema.statics.createNotification = async function (notificationData) {
  /* istanbul ignore next */
  cov_ahm7425j0().f[1]++;
  const notification =
  /* istanbul ignore next */
  (cov_ahm7425j0().s[23]++, new this(notificationData));
  /* istanbul ignore next */
  cov_ahm7425j0().s[24]++;
  await notification.save();
  /* istanbul ignore next */
  cov_ahm7425j0().s[25]++;
  return notification;
};

// Static method to mark notifications as read
/* istanbul ignore next */
cov_ahm7425j0().s[26]++;
notificationSchema.statics.markAsRead = async function (userId, notificationIds) {
  /* istanbul ignore next */
  cov_ahm7425j0().f[2]++;
  const updateData =
  /* istanbul ignore next */
  (cov_ahm7425j0().s[27]++, {
    isRead: true,
    readAt: new Date()
  });
  /* istanbul ignore next */
  cov_ahm7425j0().s[28]++;
  if (
  /* istanbul ignore next */
  (cov_ahm7425j0().b[5][0]++, notificationIds) &&
  /* istanbul ignore next */
  (cov_ahm7425j0().b[5][1]++, notificationIds.length > 0)) {
    /* istanbul ignore next */
    cov_ahm7425j0().b[4][0]++;
    cov_ahm7425j0().s[29]++;
    return await this.updateMany({
      _id: {
        $in: notificationIds
      },
      user: userId
    }, updateData);
  } else {
    /* istanbul ignore next */
    cov_ahm7425j0().b[4][1]++;
    cov_ahm7425j0().s[30]++;
    return await this.updateMany({
      user: userId,
      isRead: false
    }, updateData);
  }
};

// Static method to get unread count
/* istanbul ignore next */
cov_ahm7425j0().s[31]++;
notificationSchema.statics.getUnreadCount = async function (userId) {
  /* istanbul ignore next */
  cov_ahm7425j0().f[3]++;
  cov_ahm7425j0().s[32]++;
  return await this.countDocuments({
    user: userId,
    isRead: false
  });
};

// Static method to cleanup expired notifications
/* istanbul ignore next */
cov_ahm7425j0().s[33]++;
notificationSchema.statics.cleanupExpired = async function () {
  /* istanbul ignore next */
  cov_ahm7425j0().f[4]++;
  cov_ahm7425j0().s[34]++;
  return await this.deleteMany({
    expiresAt: {
      $lt: new Date()
    }
  });
};
const Notification =
/* istanbul ignore next */
(cov_ahm7425j0().s[35]++, mongoose.model('Notification', notificationSchema));
/* istanbul ignore next */
cov_ahm7425j0().s[36]++;
module.exports = Notification;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,