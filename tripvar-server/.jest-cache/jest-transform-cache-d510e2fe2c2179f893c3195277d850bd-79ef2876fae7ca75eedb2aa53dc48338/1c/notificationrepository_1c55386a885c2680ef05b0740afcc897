fdfa17e83db50b59ce09c9653a4b1b73
/* istanbul ignore next */
function cov_2oretgr5w2() {
  var path = "/Users/mfarsx/dev/tripvar/tripvar-server/src/repositories/notification.repository.js";
  var hash = "4aeecf2e8259787eeab96574170cf3296caec34c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/mfarsx/dev/tripvar/tripvar-server/src/repositories/notification.repository.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 23
        },
        end: {
          line: 1,
          column: 51
        }
      },
      "1": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 5,
          column: 17
        }
      },
      "2": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 16,
          column: 5
        }
      },
      "3": {
        start: {
          line: 11,
          column: 6
        },
        end: {
          line: 13,
          column: 33
        }
      },
      "4": {
        start: {
          line: 15,
          column: 6
        },
        end: {
          line: 15,
          column: 18
        }
      },
      "5": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 27,
          column: 5
        }
      },
      "6": {
        start: {
          line: 22,
          column: 6
        },
        end: {
          line: 24,
          column: 33
        }
      },
      "7": {
        start: {
          line: 26,
          column: 6
        },
        end: {
          line: 26,
          column: 18
        }
      },
      "8": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "9": {
        start: {
          line: 33,
          column: 6
        },
        end: {
          line: 36,
          column: 33
        }
      },
      "10": {
        start: {
          line: 38,
          column: 6
        },
        end: {
          line: 38,
          column: 18
        }
      },
      "11": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "12": {
        start: {
          line: 45,
          column: 6
        },
        end: {
          line: 50,
          column: 33
        }
      },
      "13": {
        start: {
          line: 52,
          column: 6
        },
        end: {
          line: 52,
          column: 18
        }
      },
      "14": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 66,
          column: 5
        }
      },
      "15": {
        start: {
          line: 59,
          column: 6
        },
        end: {
          line: 63,
          column: 8
        }
      },
      "16": {
        start: {
          line: 65,
          column: 6
        },
        end: {
          line: 65,
          column: 18
        }
      },
      "17": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 78,
          column: 5
        }
      },
      "18": {
        start: {
          line: 72,
          column: 6
        },
        end: {
          line: 75,
          column: 8
        }
      },
      "19": {
        start: {
          line: 77,
          column: 6
        },
        end: {
          line: 77,
          column: 18
        }
      },
      "20": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 93,
          column: 5
        }
      },
      "21": {
        start: {
          line: 84,
          column: 25
        },
        end: {
          line: 84,
          column: 35
        }
      },
      "22": {
        start: {
          line: 85,
          column: 6
        },
        end: {
          line: 85,
          column: 57
        }
      },
      "23": {
        start: {
          line: 87,
          column: 6
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "24": {
        start: {
          line: 92,
          column: 6
        },
        end: {
          line: 92,
          column: 18
        }
      },
      "25": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 105,
          column: 5
        }
      },
      "26": {
        start: {
          line: 99,
          column: 6
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "27": {
        start: {
          line: 104,
          column: 6
        },
        end: {
          line: 104,
          column: 18
        }
      },
      "28": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 114,
          column: 5
        }
      },
      "29": {
        start: {
          line: 111,
          column: 6
        },
        end: {
          line: 111,
          column: 56
        }
      },
      "30": {
        start: {
          line: 113,
          column: 6
        },
        end: {
          line: 113,
          column: 18
        }
      },
      "31": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 126,
          column: 5
        }
      },
      "32": {
        start: {
          line: 120,
          column: 6
        },
        end: {
          line: 123,
          column: 33
        }
      },
      "33": {
        start: {
          line: 125,
          column: 6
        },
        end: {
          line: 125,
          column: 18
        }
      },
      "34": {
        start: {
          line: 131,
          column: 4
        },
        end: {
          line: 154,
          column: 5
        }
      },
      "35": {
        start: {
          line: 132,
          column: 20
        },
        end: {
          line: 150,
          column: 8
        }
      },
      "36": {
        start: {
          line: 151,
          column: 6
        },
        end: {
          line: 151,
          column: 79
        }
      },
      "37": {
        start: {
          line: 153,
          column: 6
        },
        end: {
          line: 153,
          column: 18
        }
      },
      "38": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 180,
          column: 5
        }
      },
      "39": {
        start: {
          line: 160,
          column: 19
        },
        end: {
          line: 160,
          column: 37
        }
      },
      "40": {
        start: {
          line: 161,
          column: 28
        },
        end: {
          line: 165,
          column: 21
        }
      },
      "41": {
        start: {
          line: 167,
          column: 20
        },
        end: {
          line: 167,
          column: 69
        }
      },
      "42": {
        start: {
          line: 169,
          column: 6
        },
        end: {
          line: 177,
          column: 8
        }
      },
      "43": {
        start: {
          line: 179,
          column: 6
        },
        end: {
          line: 179,
          column: 18
        }
      },
      "44": {
        start: {
          line: 184,
          column: 0
        },
        end: {
          line: 184,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 4,
            column: 2
          },
          end: {
            line: 4,
            column: 3
          }
        },
        loc: {
          start: {
            line: 4,
            column: 21
          },
          end: {
            line: 6,
            column: 3
          }
        },
        line: 4
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 2
          },
          end: {
            line: 9,
            column: 3
          }
        },
        loc: {
          start: {
            line: 9,
            column: 27
          },
          end: {
            line: 17,
            column: 3
          }
        },
        line: 9
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 2
          },
          end: {
            line: 20,
            column: 3
          }
        },
        loc: {
          start: {
            line: 20,
            column: 33
          },
          end: {
            line: 28,
            column: 3
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 31,
            column: 2
          },
          end: {
            line: 31,
            column: 3
          }
        },
        loc: {
          start: {
            line: 31,
            column: 25
          },
          end: {
            line: 40,
            column: 3
          }
        },
        line: 31
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 43,
            column: 2
          },
          end: {
            line: 43,
            column: 3
          }
        },
        loc: {
          start: {
            line: 43,
            column: 44
          },
          end: {
            line: 54,
            column: 3
          }
        },
        line: 43
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 57,
            column: 2
          },
          end: {
            line: 57,
            column: 3
          }
        },
        loc: {
          start: {
            line: 57,
            column: 35
          },
          end: {
            line: 67,
            column: 3
          }
        },
        line: 57
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 70,
            column: 2
          },
          end: {
            line: 70,
            column: 3
          }
        },
        loc: {
          start: {
            line: 70,
            column: 30
          },
          end: {
            line: 79,
            column: 3
          }
        },
        line: 70
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 82,
            column: 2
          },
          end: {
            line: 82,
            column: 3
          }
        },
        loc: {
          start: {
            line: 82,
            column: 45
          },
          end: {
            line: 94,
            column: 3
          }
        },
        line: 82
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 97,
            column: 2
          },
          end: {
            line: 97,
            column: 3
          }
        },
        loc: {
          start: {
            line: 97,
            column: 31
          },
          end: {
            line: 106,
            column: 3
          }
        },
        line: 97
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 109,
            column: 2
          },
          end: {
            line: 109,
            column: 3
          }
        },
        loc: {
          start: {
            line: 109,
            column: 34
          },
          end: {
            line: 115,
            column: 3
          }
        },
        line: 109
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 118,
            column: 2
          },
          end: {
            line: 118,
            column: 3
          }
        },
        loc: {
          start: {
            line: 118,
            column: 33
          },
          end: {
            line: 127,
            column: 3
          }
        },
        line: 118
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 130,
            column: 2
          },
          end: {
            line: 130,
            column: 3
          }
        },
        loc: {
          start: {
            line: 130,
            column: 24
          },
          end: {
            line: 155,
            column: 3
          }
        },
        line: 130
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 158,
            column: 2
          },
          end: {
            line: 158,
            column: 3
          }
        },
        loc: {
          start: {
            line: 158,
            column: 57
          },
          end: {
            line: 181,
            column: 3
          }
        },
        line: 158
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 82,
            column: 31
          },
          end: {
            line: 82,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 82,
            column: 41
          },
          end: {
            line: 82,
            column: 43
          }
        }],
        line: 82
      },
      "1": {
        loc: {
          start: {
            line: 151,
            column: 13
          },
          end: {
            line: 151,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 151,
            column: 13
          },
          end: {
            line: 151,
            column: 21
          }
        }, {
          start: {
            line: 151,
            column: 25
          },
          end: {
            line: 151,
            column: 78
          }
        }],
        line: 151
      },
      "2": {
        loc: {
          start: {
            line: 158,
            column: 35
          },
          end: {
            line: 158,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 158,
            column: 42
          },
          end: {
            line: 158,
            column: 43
          }
        }],
        line: 158
      },
      "3": {
        loc: {
          start: {
            line: 158,
            column: 45
          },
          end: {
            line: 158,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 158,
            column: 53
          },
          end: {
            line: 158,
            column: 55
          }
        }],
        line: 158
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0],
      "3": [0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4aeecf2e8259787eeab96574170cf3296caec34c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2oretgr5w2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2oretgr5w2();
const BaseRepository =
/* istanbul ignore next */
(cov_2oretgr5w2().s[0]++, require('./base.repository'));
class NotificationRepository extends BaseRepository {
  constructor(model) {
    /* istanbul ignore next */
    cov_2oretgr5w2().f[0]++;
    cov_2oretgr5w2().s[1]++;
    super(model);
  }

  // Find notifications by user
  async findByUser(userId) {
    /* istanbul ignore next */
    cov_2oretgr5w2().f[1]++;
    cov_2oretgr5w2().s[2]++;
    try {
      /* istanbul ignore next */
      cov_2oretgr5w2().s[3]++;
      return await this.model.find({
        user: userId
      }).sort({
        createdAt: -1
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2oretgr5w2().s[4]++;
      throw error;
    }
  }

  // Find unread notifications by user
  async findUnreadByUser(userId) {
    /* istanbul ignore next */
    cov_2oretgr5w2().f[2]++;
    cov_2oretgr5w2().s[5]++;
    try {
      /* istanbul ignore next */
      cov_2oretgr5w2().s[6]++;
      return await this.model.find({
        user: userId,
        isRead: false
      }).sort({
        createdAt: -1
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2oretgr5w2().s[7]++;
      throw error;
    }
  }

  // Find notifications by type
  async findByType(type) {
    /* istanbul ignore next */
    cov_2oretgr5w2().f[3]++;
    cov_2oretgr5w2().s[8]++;
    try {
      /* istanbul ignore next */
      cov_2oretgr5w2().s[9]++;
      return await this.model.find({
        type
      }).populate('user').sort({
        createdAt: -1
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2oretgr5w2().s[10]++;
      throw error;
    }
  }

  // Find notifications by date range
  async findByDateRange(startDate, endDate) {
    /* istanbul ignore next */
    cov_2oretgr5w2().f[4]++;
    cov_2oretgr5w2().s[11]++;
    try {
      /* istanbul ignore next */
      cov_2oretgr5w2().s[12]++;
      return await this.model.find({
        createdAt: {
          $gte: startDate,
          $lte: endDate
        }
      }).populate('user').sort({
        createdAt: -1
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2oretgr5w2().s[13]++;
      throw error;
    }
  }

  // Mark notification as read
  async markAsRead(notificationId) {
    /* istanbul ignore next */
    cov_2oretgr5w2().f[5]++;
    cov_2oretgr5w2().s[14]++;
    try {
      /* istanbul ignore next */
      cov_2oretgr5w2().s[15]++;
      return await this.model.findByIdAndUpdate(notificationId, {
        $set: {
          isRead: true,
          readAt: new Date()
        }
      }, {
        new: true
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2oretgr5w2().s[16]++;
      throw error;
    }
  }

  // Mark all notifications as read for a user
  async markAllAsRead(userId) {
    /* istanbul ignore next */
    cov_2oretgr5w2().f[6]++;
    cov_2oretgr5w2().s[17]++;
    try {
      /* istanbul ignore next */
      cov_2oretgr5w2().s[18]++;
      return await this.model.updateMany({
        user: userId,
        isRead: false
      }, {
        $set: {
          isRead: true,
          readAt: new Date()
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2oretgr5w2().s[19]++;
      throw error;
    }
  }

  // Delete old notifications
  async deleteOldNotifications(daysOld =
  /* istanbul ignore next */
  (cov_2oretgr5w2().b[0][0]++, 30)) {
    /* istanbul ignore next */
    cov_2oretgr5w2().f[7]++;
    cov_2oretgr5w2().s[20]++;
    try {
      const cutoffDate =
      /* istanbul ignore next */
      (cov_2oretgr5w2().s[21]++, new Date());
      /* istanbul ignore next */
      cov_2oretgr5w2().s[22]++;
      cutoffDate.setDate(cutoffDate.getDate() - daysOld);
      /* istanbul ignore next */
      cov_2oretgr5w2().s[23]++;
      return await this.model.deleteMany({
        createdAt: {
          $lt: cutoffDate
        },
        isRead: true
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2oretgr5w2().s[24]++;
      throw error;
    }
  }

  // Get notification count for user
  async getUnreadCount(userId) {
    /* istanbul ignore next */
    cov_2oretgr5w2().f[8]++;
    cov_2oretgr5w2().s[25]++;
    try {
      /* istanbul ignore next */
      cov_2oretgr5w2().s[26]++;
      return await this.model.countDocuments({
        user: userId,
        isRead: false
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2oretgr5w2().s[27]++;
      throw error;
    }
  }

  // Create bulk notifications
  async createBulk(notifications) {
    /* istanbul ignore next */
    cov_2oretgr5w2().f[9]++;
    cov_2oretgr5w2().s[28]++;
    try {
      /* istanbul ignore next */
      cov_2oretgr5w2().s[29]++;
      return await this.model.insertMany(notifications);
    } catch (error) {
      /* istanbul ignore next */
      cov_2oretgr5w2().s[30]++;
      throw error;
    }
  }

  // Find notifications by priority
  async findByPriority(priority) {
    /* istanbul ignore next */
    cov_2oretgr5w2().f[10]++;
    cov_2oretgr5w2().s[31]++;
    try {
      /* istanbul ignore next */
      cov_2oretgr5w2().s[32]++;
      return await this.model.find({
        priority
      }).populate('user').sort({
        createdAt: -1
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2oretgr5w2().s[33]++;
      throw error;
    }
  }

  // Get notification statistics
  async getStatistics() {
    /* istanbul ignore next */
    cov_2oretgr5w2().f[11]++;
    cov_2oretgr5w2().s[34]++;
    try {
      const stats =
      /* istanbul ignore next */
      (cov_2oretgr5w2().s[35]++, await this.model.aggregate([{
        $group: {
          _id: null,
          totalNotifications: {
            $sum: 1
          },
          unreadCount: {
            $sum: {
              $cond: ['$isRead', 0, 1]
            }
          },
          byType: {
            $push: {
              type: '$type',
              isRead: '$isRead'
            }
          }
        }
      }]));
      /* istanbul ignore next */
      cov_2oretgr5w2().s[36]++;
      return /* istanbul ignore next */(cov_2oretgr5w2().b[1][0]++, stats[0]) ||
      /* istanbul ignore next */
      (cov_2oretgr5w2().b[1][1]++, {
        totalNotifications: 0,
        unreadCount: 0,
        byType: []
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2oretgr5w2().s[37]++;
      throw error;
    }
  }

  // Find notifications with pagination
  async findWithPagination(userId, page =
  /* istanbul ignore next */
  (cov_2oretgr5w2().b[2][0]++, 1), limit =
  /* istanbul ignore next */
  (cov_2oretgr5w2().b[3][0]++, 10)) {
    /* istanbul ignore next */
    cov_2oretgr5w2().f[12]++;
    cov_2oretgr5w2().s[38]++;
    try {
      const skip =
      /* istanbul ignore next */
      (cov_2oretgr5w2().s[39]++, (page - 1) * limit);
      const notifications =
      /* istanbul ignore next */
      (cov_2oretgr5w2().s[40]++, await this.model.find({
        user: userId
      }).sort({
        createdAt: -1
      }).skip(skip).limit(limit));
      const total =
      /* istanbul ignore next */
      (cov_2oretgr5w2().s[41]++, await this.model.countDocuments({
        user: userId
      }));
      /* istanbul ignore next */
      cov_2oretgr5w2().s[42]++;
      return {
        notifications,
        pagination: {
          page,
          limit,
          total,
          pages: Math.ceil(total / limit)
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2oretgr5w2().s[43]++;
      throw error;
    }
  }
}
/* istanbul ignore next */
cov_2oretgr5w2().s[44]++;
module.exports = NotificationRepository;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,