3f9608bcd6db2d660ed68a7d2c637c34
/* istanbul ignore next */
function cov_nbc0cl50r() {
  var path = "/Users/mfarsx/dev/tripvar/tripvar-server/src/models/review.model.js";
  var hash = "9a8d03bdc42b2f379e59fb8ec1c6afedee60e0b2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/mfarsx/dev/tripvar/tripvar-server/src/models/review.model.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 17
        },
        end: {
          line: 1,
          column: 36
        }
      },
      "1": {
        start: {
          line: 3,
          column: 21
        },
        end: {
          line: 119,
          column: 1
        }
      },
      "2": {
        start: {
          line: 122,
          column: 0
        },
        end: {
          line: 122,
          column: 54
        }
      },
      "3": {
        start: {
          line: 123,
          column: 0
        },
        end: {
          line: 123,
          column: 66
        }
      },
      "4": {
        start: {
          line: 124,
          column: 0
        },
        end: {
          line: 124,
          column: 34
        }
      },
      "5": {
        start: {
          line: 125,
          column: 0
        },
        end: {
          line: 125,
          column: 34
        }
      },
      "6": {
        start: {
          line: 128,
          column: 0
        },
        end: {
          line: 147,
          column: 3
        }
      },
      "7": {
        start: {
          line: 129,
          column: 14
        },
        end: {
          line: 129,
          column: 24
        }
      },
      "8": {
        start: {
          line: 130,
          column: 18
        },
        end: {
          line: 130,
          column: 42
        }
      },
      "9": {
        start: {
          line: 131,
          column: 19
        },
        end: {
          line: 131,
          column: 42
        }
      },
      "10": {
        start: {
          line: 132,
          column: 19
        },
        end: {
          line: 132,
          column: 62
        }
      },
      "11": {
        start: {
          line: 134,
          column: 2
        },
        end: {
          line: 136,
          column: 3
        }
      },
      "12": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 135,
          column: 23
        }
      },
      "13": {
        start: {
          line: 137,
          column: 2
        },
        end: {
          line: 139,
          column: 3
        }
      },
      "14": {
        start: {
          line: 138,
          column: 4
        },
        end: {
          line: 138,
          column: 34
        }
      },
      "15": {
        start: {
          line: 140,
          column: 2
        },
        end: {
          line: 142,
          column: 3
        }
      },
      "16": {
        start: {
          line: 141,
          column: 4
        },
        end: {
          line: 141,
          column: 50
        }
      },
      "17": {
        start: {
          line: 143,
          column: 2
        },
        end: {
          line: 145,
          column: 3
        }
      },
      "18": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 144,
          column: 52
        }
      },
      "19": {
        start: {
          line: 146,
          column: 2
        },
        end: {
          line: 146,
          column: 50
        }
      },
      "20": {
        start: {
          line: 150,
          column: 0
        },
        end: {
          line: 182,
          column: 2
        }
      },
      "21": {
        start: {
          line: 151,
          column: 16
        },
        end: {
          line: 169,
          column: 4
        }
      },
      "22": {
        start: {
          line: 171,
          column: 2
        },
        end: {
          line: 181,
          column: 3
        }
      },
      "23": {
        start: {
          line: 172,
          column: 4
        },
        end: {
          line: 175,
          column: 7
        }
      },
      "24": {
        start: {
          line: 177,
          column: 4
        },
        end: {
          line: 180,
          column: 7
        }
      },
      "25": {
        start: {
          line: 185,
          column: 0
        },
        end: {
          line: 187,
          column: 3
        }
      },
      "26": {
        start: {
          line: 186,
          column: 2
        },
        end: {
          line: 186,
          column: 60
        }
      },
      "27": {
        start: {
          line: 190,
          column: 0
        },
        end: {
          line: 192,
          column: 3
        }
      },
      "28": {
        start: {
          line: 191,
          column: 2
        },
        end: {
          line: 191,
          column: 60
        }
      },
      "29": {
        start: {
          line: 194,
          column: 15
        },
        end: {
          line: 194,
          column: 53
        }
      },
      "30": {
        start: {
          line: 196,
          column: 0
        },
        end: {
          line: 196,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 128,
            column: 32
          },
          end: {
            line: 128,
            column: 33
          }
        },
        loc: {
          start: {
            line: 128,
            column: 43
          },
          end: {
            line: 147,
            column: 1
          }
        },
        line: 128
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 150,
            column: 46
          },
          end: {
            line: 150,
            column: 47
          }
        },
        loc: {
          start: {
            line: 150,
            column: 76
          },
          end: {
            line: 182,
            column: 1
          }
        },
        line: 150
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 185,
            column: 26
          },
          end: {
            line: 185,
            column: 27
          }
        },
        loc: {
          start: {
            line: 185,
            column: 37
          },
          end: {
            line: 187,
            column: 1
          }
        },
        line: 185
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 190,
            column: 28
          },
          end: {
            line: 190,
            column: 29
          }
        },
        loc: {
          start: {
            line: 190,
            column: 39
          },
          end: {
            line: 192,
            column: 1
          }
        },
        line: 190
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 134,
            column: 2
          },
          end: {
            line: 136,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 2
          },
          end: {
            line: 136,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "1": {
        loc: {
          start: {
            line: 137,
            column: 2
          },
          end: {
            line: 139,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 2
          },
          end: {
            line: 139,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      },
      "2": {
        loc: {
          start: {
            line: 140,
            column: 2
          },
          end: {
            line: 142,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 2
          },
          end: {
            line: 142,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "3": {
        loc: {
          start: {
            line: 143,
            column: 2
          },
          end: {
            line: 145,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 2
          },
          end: {
            line: 145,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "4": {
        loc: {
          start: {
            line: 171,
            column: 2
          },
          end: {
            line: 181,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 2
          },
          end: {
            line: 181,
            column: 3
          }
        }, {
          start: {
            line: 176,
            column: 9
          },
          end: {
            line: 181,
            column: 3
          }
        }],
        line: 171
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9a8d03bdc42b2f379e59fb8ec1c6afedee60e0b2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_nbc0cl50r = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_nbc0cl50r();
const mongoose =
/* istanbul ignore next */
(cov_nbc0cl50r().s[0]++, require('mongoose'));
const reviewSchema =
/* istanbul ignore next */
(cov_nbc0cl50r().s[1]++, new mongoose.Schema({
  // User who wrote the review
  user: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User',
    required: [true, 'Review must belong to a user']
  },
  // Destination being reviewed
  destination: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Destination',
    required: [true, 'Review must be for a destination']
  },
  // Booking reference (optional - user can review without booking)
  booking: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Booking',
    required: false
  },
  // Review content
  title: {
    type: String,
    required: [true, 'Review title is required'],
    trim: true,
    maxlength: [100, 'Title cannot exceed 100 characters']
  },
  content: {
    type: String,
    required: [true, 'Review content is required'],
    trim: true,
    maxlength: [1000, 'Review content cannot exceed 1000 characters']
  },
  // Rating (1-5 stars)
  rating: {
    type: Number,
    required: [true, 'Rating is required'],
    min: [1, 'Rating must be at least 1'],
    max: [5, 'Rating cannot exceed 5']
  },
  // Additional ratings (optional)
  ratings: {
    cleanliness: {
      type: Number,
      min: 1,
      max: 5,
      required: false
    },
    location: {
      type: Number,
      min: 1,
      max: 5,
      required: false
    },
    value: {
      type: Number,
      min: 1,
      max: 5,
      required: false
    },
    service: {
      type: Number,
      min: 1,
      max: 5,
      required: false
    }
  },
  // Review status
  status: {
    type: String,
    enum: {
      values: ['pending', 'approved', 'rejected'],
      message: 'Status must be pending, approved, or rejected'
    },
    default: 'approved'
  },
  // Helpful votes
  helpfulVotes: {
    type: Number,
    default: 0
  },
  // Users who found this review helpful
  helpfulUsers: [{
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User'
  }],
  // Admin response (optional)
  adminResponse: {
    content: {
      type: String,
      maxlength: [500, 'Admin response cannot exceed 500 characters']
    },
    respondedBy: {
      type: mongoose.Schema.Types.ObjectId,
      ref: 'User'
    },
    respondedAt: {
      type: Date
    }
  }
}, {
  timestamps: true,
  toJSON: {
    virtuals: true
  },
  toObject: {
    virtuals: true
  }
}));

// Index for better query performance
/* istanbul ignore next */
cov_nbc0cl50r().s[2]++;
reviewSchema.index({
  destination: 1,
  createdAt: -1
});
/* istanbul ignore next */
cov_nbc0cl50r().s[3]++;
reviewSchema.index({
  user: 1,
  destination: 1
}, {
  unique: true
}); // One review per user per destination
/* istanbul ignore next */
cov_nbc0cl50r().s[4]++;
reviewSchema.index({
  status: 1
});
/* istanbul ignore next */
cov_nbc0cl50r().s[5]++;
reviewSchema.index({
  rating: 1
});

// Virtual field for review age
/* istanbul ignore next */
cov_nbc0cl50r().s[6]++;
reviewSchema.virtual('age').get(function () {
  /* istanbul ignore next */
  cov_nbc0cl50r().f[0]++;
  const now =
  /* istanbul ignore next */
  (cov_nbc0cl50r().s[7]++, new Date());
  const created =
  /* istanbul ignore next */
  (cov_nbc0cl50r().s[8]++, new Date(this.createdAt));
  const diffTime =
  /* istanbul ignore next */
  (cov_nbc0cl50r().s[9]++, Math.abs(now - created));
  const diffDays =
  /* istanbul ignore next */
  (cov_nbc0cl50r().s[10]++, Math.ceil(diffTime / (1000 * 60 * 60 * 24)));
  /* istanbul ignore next */
  cov_nbc0cl50r().s[11]++;
  if (diffDays === 1) {
    /* istanbul ignore next */
    cov_nbc0cl50r().b[0][0]++;
    cov_nbc0cl50r().s[12]++;
    return '1 day ago';
  } else
  /* istanbul ignore next */
  {
    cov_nbc0cl50r().b[0][1]++;
  }
  cov_nbc0cl50r().s[13]++;
  if (diffDays < 7) {
    /* istanbul ignore next */
    cov_nbc0cl50r().b[1][0]++;
    cov_nbc0cl50r().s[14]++;
    return `${diffDays} days ago`;
  } else
  /* istanbul ignore next */
  {
    cov_nbc0cl50r().b[1][1]++;
  }
  cov_nbc0cl50r().s[15]++;
  if (diffDays < 30) {
    /* istanbul ignore next */
    cov_nbc0cl50r().b[2][0]++;
    cov_nbc0cl50r().s[16]++;
    return `${Math.ceil(diffDays / 7)} weeks ago`;
  } else
  /* istanbul ignore next */
  {
    cov_nbc0cl50r().b[2][1]++;
  }
  cov_nbc0cl50r().s[17]++;
  if (diffDays < 365) {
    /* istanbul ignore next */
    cov_nbc0cl50r().b[3][0]++;
    cov_nbc0cl50r().s[18]++;
    return `${Math.ceil(diffDays / 30)} months ago`;
  } else
  /* istanbul ignore next */
  {
    cov_nbc0cl50r().b[3][1]++;
  }
  cov_nbc0cl50r().s[19]++;
  return `${Math.ceil(diffDays / 365)} years ago`;
});

// Static method to calculate average rating for a destination
/* istanbul ignore next */
cov_nbc0cl50r().s[20]++;
reviewSchema.statics.calculateAverageRating = async function (destinationId) {
  /* istanbul ignore next */
  cov_nbc0cl50r().f[1]++;
  const stats =
  /* istanbul ignore next */
  (cov_nbc0cl50r().s[21]++, await this.aggregate([{
    $match: {
      destination: destinationId,
      status: 'approved'
    }
  }, {
    $group: {
      _id: '$destination',
      nRating: {
        $sum: 1
      },
      avgRating: {
        $avg: '$rating'
      },
      avgCleanliness: {
        $avg: '$ratings.cleanliness'
      },
      avgLocation: {
        $avg: '$ratings.location'
      },
      avgValue: {
        $avg: '$ratings.value'
      },
      avgService: {
        $avg: '$ratings.service'
      }
    }
  }]));
  /* istanbul ignore next */
  cov_nbc0cl50r().s[22]++;
  if (stats.length > 0) {
    /* istanbul ignore next */
    cov_nbc0cl50r().b[4][0]++;
    cov_nbc0cl50r().s[23]++;
    await mongoose.model('Destination').findByIdAndUpdate(destinationId, {
      rating: Math.round(stats[0].avgRating * 10) / 10,
      ratingCount: stats[0].nRating
    });
  } else {
    /* istanbul ignore next */
    cov_nbc0cl50r().b[4][1]++;
    cov_nbc0cl50r().s[24]++;
    await mongoose.model('Destination').findByIdAndUpdate(destinationId, {
      rating: 0,
      ratingCount: 0
    });
  }
};

// Post-save middleware to update destination rating
/* istanbul ignore next */
cov_nbc0cl50r().s[25]++;
reviewSchema.post('save', function () {
  /* istanbul ignore next */
  cov_nbc0cl50r().f[2]++;
  cov_nbc0cl50r().s[26]++;
  this.constructor.calculateAverageRating(this.destination);
});

// Post-remove middleware to update destination rating
/* istanbul ignore next */
cov_nbc0cl50r().s[27]++;
reviewSchema.post('remove', function () {
  /* istanbul ignore next */
  cov_nbc0cl50r().f[3]++;
  cov_nbc0cl50r().s[28]++;
  this.constructor.calculateAverageRating(this.destination);
});
const Review =
/* istanbul ignore next */
(cov_nbc0cl50r().s[29]++, mongoose.model('Review', reviewSchema));
/* istanbul ignore next */
cov_nbc0cl50r().s[30]++;
module.exports = Review;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,