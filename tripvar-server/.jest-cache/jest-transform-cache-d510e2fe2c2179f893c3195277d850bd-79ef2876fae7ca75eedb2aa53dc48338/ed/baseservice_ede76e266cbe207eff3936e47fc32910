b78bd45505e719a865b7124f68b05caf
/* istanbul ignore next */
function cov_zjy2usfkw() {
  var path = "/Users/mfarsx/dev/tripvar/tripvar-server/src/services/base.service.js";
  var hash = "a4d531c2276563c818ef71e4bf1f69f498fa4a71";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/mfarsx/dev/tripvar/tripvar-server/src/services/base.service.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 23
        },
        end: {
          line: 1,
          column: 58
        }
      },
      "1": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 19,
          column: 5
        }
      },
      "2": {
        start: {
          line: 16,
          column: 6
        },
        end: {
          line: 16,
          column: 48
        }
      },
      "3": {
        start: {
          line: 18,
          column: 6
        },
        end: {
          line: 18,
          column: 74
        }
      },
      "4": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "5": {
        start: {
          line: 29,
          column: 6
        },
        end: {
          line: 29,
          column: 44
        }
      },
      "6": {
        start: {
          line: 31,
          column: 6
        },
        end: {
          line: 31,
          column: 79
        }
      },
      "7": {
        start: {
          line: 32,
          column: 6
        },
        end: {
          line: 32,
          column: 18
        }
      },
      "8": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "9": {
        start: {
          line: 43,
          column: 6
        },
        end: {
          line: 43,
          column: 40
        }
      },
      "10": {
        start: {
          line: 45,
          column: 6
        },
        end: {
          line: 45,
          column: 82
        }
      },
      "11": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 69,
          column: 5
        }
      },
      "12": {
        start: {
          line: 56,
          column: 33
        },
        end: {
          line: 56,
          column: 59
        }
      },
      "13": {
        start: {
          line: 57,
          column: 21
        },
        end: {
          line: 57,
          column: 37
        }
      },
      "14": {
        start: {
          line: 58,
          column: 19
        },
        end: {
          line: 58,
          column: 45
        }
      },
      "15": {
        start: {
          line: 60,
          column: 6
        },
        end: {
          line: 63,
          column: 7
        }
      },
      "16": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 34
        }
      },
      "17": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 27
        }
      },
      "18": {
        start: {
          line: 65,
          column: 6
        },
        end: {
          line: 65,
          column: 15
        }
      },
      "19": {
        start: {
          line: 67,
          column: 6
        },
        end: {
          line: 67,
          column: 82
        }
      },
      "20": {
        start: {
          line: 68,
          column: 6
        },
        end: {
          line: 68,
          column: 15
        }
      },
      "21": {
        start: {
          line: 79,
          column: 26
        },
        end: {
          line: 81,
          column: 5
        }
      },
      "22": {
        start: {
          line: 80,
          column: 6
        },
        end: {
          line: 80,
          column: 77
        }
      },
      "23": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 89,
          column: 5
        }
      },
      "24": {
        start: {
          line: 84,
          column: 34
        },
        end: {
          line: 84,
          column: 60
        }
      },
      "25": {
        start: {
          line: 85,
          column: 6
        },
        end: {
          line: 88,
          column: 8
        }
      },
      "26": {
        start: {
          line: 99,
          column: 22
        },
        end: {
          line: 99,
          column: 24
        }
      },
      "27": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 110,
          column: 7
        }
      },
      "28": {
        start: {
          line: 102,
          column: 6
        },
        end: {
          line: 109,
          column: 7
        }
      },
      "29": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "30": {
        start: {
          line: 105,
          column: 10
        },
        end: {
          line: 105,
          column: 44
        }
      },
      "31": {
        start: {
          line: 107,
          column: 10
        },
        end: {
          line: 107,
          column: 37
        }
      },
      "32": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 112,
          column: 21
        }
      },
      "33": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 130,
          column: 6
        }
      },
      "34": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 161,
          column: 5
        }
      },
      "35": {
        start: {
          line: 142,
          column: 23
        },
        end: {
          line: 142,
          column: 24
        }
      },
      "36": {
        start: {
          line: 143,
          column: 6
        },
        end: {
          line: 160,
          column: 7
        }
      },
      "37": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 33
        }
      },
      "38": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 26
        }
      },
      "39": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 151,
          column: 9
        }
      },
      "40": {
        start: {
          line: 150,
          column: 10
        },
        end: {
          line: 150,
          column: 22
        }
      },
      "41": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 155,
          column: 9
        }
      },
      "42": {
        start: {
          line: 154,
          column: 10
        },
        end: {
          line: 154,
          column: 22
        }
      },
      "43": {
        start: {
          line: 158,
          column: 22
        },
        end: {
          line: 158,
          column: 49
        }
      },
      "44": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 65
        }
      },
      "45": {
        start: {
          line: 159,
          column: 37
        },
        end: {
          line: 159,
          column: 63
        }
      },
      "46": {
        start: {
          line: 163,
          column: 4
        },
        end: {
          line: 163,
          column: 20
        }
      },
      "47": {
        start: {
          line: 167,
          column: 0
        },
        end: {
          line: 167,
          column: 29
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 2
          },
          end: {
            line: 14,
            column: 3
          }
        },
        loc: {
          start: {
            line: 14,
            column: 40
          },
          end: {
            line: 20,
            column: 3
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 27,
            column: 2
          },
          end: {
            line: 27,
            column: 3
          }
        },
        loc: {
          start: {
            line: 27,
            column: 27
          },
          end: {
            line: 34,
            column: 3
          }
        },
        line: 27
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 41,
            column: 2
          },
          end: {
            line: 41,
            column: 3
          }
        },
        loc: {
          start: {
            line: 41,
            column: 30
          },
          end: {
            line: 47,
            column: 3
          }
        },
        line: 41
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 54,
            column: 2
          },
          end: {
            line: 54,
            column: 3
          }
        },
        loc: {
          start: {
            line: 54,
            column: 37
          },
          end: {
            line: 70,
            column: 3
          }
        },
        line: 54
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 78,
            column: 2
          },
          end: {
            line: 78,
            column: 3
          }
        },
        loc: {
          start: {
            line: 78,
            column: 47
          },
          end: {
            line: 90,
            column: 3
          }
        },
        line: 78
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 79,
            column: 48
          },
          end: {
            line: 79,
            column: 49
          }
        },
        loc: {
          start: {
            line: 80,
            column: 6
          },
          end: {
            line: 80,
            column: 77
          }
        },
        line: 80
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 98,
            column: 2
          },
          end: {
            line: 98,
            column: 3
          }
        },
        loc: {
          start: {
            line: 98,
            column: 37
          },
          end: {
            line: 113,
            column: 3
          }
        },
        line: 98
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 101,
            column: 30
          },
          end: {
            line: 101,
            column: 31
          }
        },
        loc: {
          start: {
            line: 101,
            column: 37
          },
          end: {
            line: 110,
            column: 5
          }
        },
        line: 101
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 122,
            column: 2
          },
          end: {
            line: 122,
            column: 3
          }
        },
        loc: {
          start: {
            line: 122,
            column: 43
          },
          end: {
            line: 131,
            column: 3
          }
        },
        line: 122
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 139,
            column: 2
          },
          end: {
            line: 139,
            column: 3
          }
        },
        loc: {
          start: {
            line: 139,
            column: 45
          },
          end: {
            line: 164,
            column: 3
          }
        },
        line: 139
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 159,
            column: 26
          },
          end: {
            line: 159,
            column: 27
          }
        },
        loc: {
          start: {
            line: 159,
            column: 37
          },
          end: {
            line: 159,
            column: 63
          }
        },
        line: 159
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 29
          },
          end: {
            line: 14,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 14,
            column: 35
          },
          end: {
            line: 14,
            column: 38
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 60,
            column: 6
          },
          end: {
            line: 63,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 6
          },
          end: {
            line: 63,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "2": {
        loc: {
          start: {
            line: 80,
            column: 6
          },
          end: {
            line: 80,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 6
          },
          end: {
            line: 80,
            column: 31
          }
        }, {
          start: {
            line: 80,
            column: 35
          },
          end: {
            line: 80,
            column: 55
          }
        }, {
          start: {
            line: 80,
            column: 59
          },
          end: {
            line: 80,
            column: 77
          }
        }],
        line: 80
      },
      "3": {
        loc: {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "4": {
        loc: {
          start: {
            line: 102,
            column: 6
          },
          end: {
            line: 109,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 6
          },
          end: {
            line: 109,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "5": {
        loc: {
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        }, {
          start: {
            line: 106,
            column: 15
          },
          end: {
            line: 108,
            column: 9
          }
        }],
        line: 104
      },
      "6": {
        loc: {
          start: {
            line: 139,
            column: 29
          },
          end: {
            line: 139,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 139,
            column: 42
          },
          end: {
            line: 139,
            column: 43
          }
        }],
        line: 139
      },
      "7": {
        loc: {
          start: {
            line: 149,
            column: 8
          },
          end: {
            line: 151,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 8
          },
          end: {
            line: 151,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "8": {
        loc: {
          start: {
            line: 149,
            column: 12
          },
          end: {
            line: 149,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 149,
            column: 12
          },
          end: {
            line: 149,
            column: 28
          }
        }, {
          start: {
            line: 149,
            column: 32
          },
          end: {
            line: 149,
            column: 54
          }
        }],
        line: 149
      },
      "9": {
        loc: {
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a4d531c2276563c818ef71e4bf1f69f498fa4a71"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_zjy2usfkw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_zjy2usfkw();
const {
  redisUtils
} =
/* istanbul ignore next */
(cov_zjy2usfkw().s[0]++, require('../middleware/redisCache'));

/**
 * Base service class with common functionality
 */
class BaseService {
  /**
   * Cache data with TTL
   * @param {string} key - Cache key
   * @param {*} data - Data to cache
   * @param {number} ttl - Time to live in seconds
   * @returns {Promise<void>}
   */
  async cacheData(key, data, ttl =
  /* istanbul ignore next */
  (cov_zjy2usfkw().b[0][0]++, 300)) {
    /* istanbul ignore next */
    cov_zjy2usfkw().f[0]++;
    cov_zjy2usfkw().s[1]++;
    try {
      /* istanbul ignore next */
      cov_zjy2usfkw().s[2]++;
      await redisUtils.setCache(key, data, ttl);
    } catch (error) {
      /* istanbul ignore next */
      cov_zjy2usfkw().s[3]++;
      console.warn(`Failed to cache data for key ${key}:`, error.message);
    }
  }

  /**
   * Get cached data
   * @param {string} key - Cache key
   * @returns {Promise<*>} Cached data or null
   */
  async getCachedData(key) {
    /* istanbul ignore next */
    cov_zjy2usfkw().f[1]++;
    cov_zjy2usfkw().s[4]++;
    try {
      /* istanbul ignore next */
      cov_zjy2usfkw().s[5]++;
      return await redisUtils.getCache(key);
    } catch (error) {
      /* istanbul ignore next */
      cov_zjy2usfkw().s[6]++;
      console.warn(`Failed to get cached data for key ${key}:`, error.message);
      /* istanbul ignore next */
      cov_zjy2usfkw().s[7]++;
      return null;
    }
  }

  /**
   * Delete cached data
   * @param {string} key - Cache key
   * @returns {Promise<void>}
   */
  async deleteCachedData(key) {
    /* istanbul ignore next */
    cov_zjy2usfkw().f[2]++;
    cov_zjy2usfkw().s[8]++;
    try {
      /* istanbul ignore next */
      cov_zjy2usfkw().s[9]++;
      await redisUtils.deleteCache(key);
    } catch (error) {
      /* istanbul ignore next */
      cov_zjy2usfkw().s[10]++;
      console.warn(`Failed to delete cached data for key ${key}:`, error.message);
    }
  }

  /**
   * Clear cache by pattern
   * @param {string} pattern - Cache key pattern
   * @returns {Promise<number>} Number of keys deleted
   */
  async clearCacheByPattern(pattern) {
    /* istanbul ignore next */
    cov_zjy2usfkw().f[3]++;
    cov_zjy2usfkw().s[11]++;
    try {
      const {
        getRedisClient
      } =
      /* istanbul ignore next */
      (cov_zjy2usfkw().s[12]++, require('../config/redis'));
      const client =
      /* istanbul ignore next */
      (cov_zjy2usfkw().s[13]++, getRedisClient());
      const keys =
      /* istanbul ignore next */
      (cov_zjy2usfkw().s[14]++, await client.keys(pattern));
      /* istanbul ignore next */
      cov_zjy2usfkw().s[15]++;
      if (keys.length > 0) {
        /* istanbul ignore next */
        cov_zjy2usfkw().b[1][0]++;
        cov_zjy2usfkw().s[16]++;
        await client.del(...keys);
        /* istanbul ignore next */
        cov_zjy2usfkw().s[17]++;
        return keys.length;
      } else
      /* istanbul ignore next */
      {
        cov_zjy2usfkw().b[1][1]++;
      }
      cov_zjy2usfkw().s[18]++;
      return 0;
    } catch (error) {
      /* istanbul ignore next */
      cov_zjy2usfkw().s[19]++;
      console.warn(`Failed to clear cache by pattern ${pattern}:`, error.message);
      /* istanbul ignore next */
      cov_zjy2usfkw().s[20]++;
      return 0;
    }
  }

  /**
   * Validate required fields
   * @param {Object} data - Data to validate
   * @param {Array<string>} requiredFields - Required field names
   * @throws {ValidationError} If validation fails
   */
  validateRequiredFields(data, requiredFields) {
    /* istanbul ignore next */
    cov_zjy2usfkw().f[4]++;
    const missingFields =
    /* istanbul ignore next */
    (cov_zjy2usfkw().s[21]++, requiredFields.filter(field => {
      /* istanbul ignore next */
      cov_zjy2usfkw().f[5]++;
      cov_zjy2usfkw().s[22]++;
      return /* istanbul ignore next */(cov_zjy2usfkw().b[2][0]++, data[field] === undefined) ||
      /* istanbul ignore next */
      (cov_zjy2usfkw().b[2][1]++, data[field] === null) ||
      /* istanbul ignore next */
      (cov_zjy2usfkw().b[2][2]++, data[field] === '');
    }));
    /* istanbul ignore next */
    cov_zjy2usfkw().s[23]++;
    if (missingFields.length > 0) {
      /* istanbul ignore next */
      cov_zjy2usfkw().b[3][0]++;
      const {
        ValidationError
      } =
      /* istanbul ignore next */
      (cov_zjy2usfkw().s[24]++, require('../utils/errors'));
      /* istanbul ignore next */
      cov_zjy2usfkw().s[25]++;
      throw new ValidationError(`Missing required fields: ${missingFields.join(', ')}`, {
        missingFields
      });
    } else
    /* istanbul ignore next */
    {
      cov_zjy2usfkw().b[3][1]++;
    }
  }

  /**
   * Sanitize input data
   * @param {Object} data - Data to sanitize
   * @param {Array<string>} allowedFields - Allowed field names
   * @returns {Object} Sanitized data
   */
  sanitizeInput(data, allowedFields) {
    /* istanbul ignore next */
    cov_zjy2usfkw().f[6]++;
    const sanitized =
    /* istanbul ignore next */
    (cov_zjy2usfkw().s[26]++, {});
    /* istanbul ignore next */
    cov_zjy2usfkw().s[27]++;
    Object.keys(data).forEach(key => {
      /* istanbul ignore next */
      cov_zjy2usfkw().f[7]++;
      cov_zjy2usfkw().s[28]++;
      if (allowedFields.includes(key)) {
        /* istanbul ignore next */
        cov_zjy2usfkw().b[4][0]++;
        cov_zjy2usfkw().s[29]++;
        // Basic sanitization
        if (typeof data[key] === 'string') {
          /* istanbul ignore next */
          cov_zjy2usfkw().b[5][0]++;
          cov_zjy2usfkw().s[30]++;
          sanitized[key] = data[key].trim();
        } else {
          /* istanbul ignore next */
          cov_zjy2usfkw().b[5][1]++;
          cov_zjy2usfkw().s[31]++;
          sanitized[key] = data[key];
        }
      } else
      /* istanbul ignore next */
      {
        cov_zjy2usfkw().b[4][1]++;
      }
    });
    /* istanbul ignore next */
    cov_zjy2usfkw().s[32]++;
    return sanitized;
  }

  /**
   * Create pagination metadata
   * @param {number} page - Current page
   * @param {number} limit - Items per page
   * @param {number} total - Total items
   * @returns {Object} Pagination metadata
   */
  createPaginationMeta(page, limit, total) {
    /* istanbul ignore next */
    cov_zjy2usfkw().f[8]++;
    cov_zjy2usfkw().s[33]++;
    return {
      page: parseInt(page),
      limit: parseInt(limit),
      total,
      pages: Math.ceil(total / limit),
      hasNext: page * limit < total,
      hasPrev: page > 1
    };
  }

  /**
   * Handle database operation with retry logic
   * @param {Function} operation - Database operation
   * @param {number} maxRetries - Maximum retry attempts
   * @returns {Promise<*>} Operation result
   */
  async withRetry(operation, maxRetries =
  /* istanbul ignore next */
  (cov_zjy2usfkw().b[6][0]++, 3)) {
    /* istanbul ignore next */
    cov_zjy2usfkw().f[9]++;
    let lastError;
    /* istanbul ignore next */
    cov_zjy2usfkw().s[34]++;
    for (let attempt =
    /* istanbul ignore next */
    (cov_zjy2usfkw().s[35]++, 1); attempt <= maxRetries; attempt++) {
      /* istanbul ignore next */
      cov_zjy2usfkw().s[36]++;
      try {
        /* istanbul ignore next */
        cov_zjy2usfkw().s[37]++;
        return await operation();
      } catch (error) {
        /* istanbul ignore next */
        cov_zjy2usfkw().s[38]++;
        lastError = error;

        // Don't retry on validation errors or authentication errors
        /* istanbul ignore next */
        cov_zjy2usfkw().s[39]++;
        if (
        /* istanbul ignore next */
        (cov_zjy2usfkw().b[8][0]++, error.statusCode) &&
        /* istanbul ignore next */
        (cov_zjy2usfkw().b[8][1]++, error.statusCode < 500)) {
          /* istanbul ignore next */
          cov_zjy2usfkw().b[7][0]++;
          cov_zjy2usfkw().s[40]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_zjy2usfkw().b[7][1]++;
        }
        cov_zjy2usfkw().s[41]++;
        if (attempt === maxRetries) {
          /* istanbul ignore next */
          cov_zjy2usfkw().b[9][0]++;
          cov_zjy2usfkw().s[42]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_zjy2usfkw().b[9][1]++;
        }

        // Exponential backoff
        const delay =
        /* istanbul ignore next */
        (cov_zjy2usfkw().s[43]++, Math.pow(2, attempt) * 1000);
        /* istanbul ignore next */
        cov_zjy2usfkw().s[44]++;
        await new Promise(resolve => {
          /* istanbul ignore next */
          cov_zjy2usfkw().f[10]++;
          cov_zjy2usfkw().s[45]++;
          return setTimeout(resolve, delay);
        });
      }
    }
    /* istanbul ignore next */
    cov_zjy2usfkw().s[46]++;
    throw lastError;
  }
}
/* istanbul ignore next */
cov_zjy2usfkw().s[47]++;
module.exports = BaseService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,