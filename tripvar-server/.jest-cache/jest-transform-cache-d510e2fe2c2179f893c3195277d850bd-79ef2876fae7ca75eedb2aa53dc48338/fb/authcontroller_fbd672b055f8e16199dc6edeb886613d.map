{"version":3,"names":["userService","require","BaseController","asyncHandler","AuthController","register","req","res","next","result","body","sendSuccess","login","getProfile","user","id","updateProfile","updatedUser","updatePassword","deleteAccount","getAllUsers","page","limit","getPaginationParams","query","sendPaginated","users","pagination","total","logout","toggleFavorite","validateRequestParams","params","destinationId","isFavorite","getFavorites","favorites","module","exports"],"sources":["auth.controller.js"],"sourcesContent":["/* eslint-disable no-param-reassign, class-methods-use-this, space-before-function-paren, no-unused-vars */\nconst userService = require('../services/user.service');\nconst BaseController = require('./base.controller');\nconst { asyncHandler } = require('../utils/asyncHandler');\n\nclass AuthController extends BaseController {\n  // Register new user\n  register = asyncHandler(async (req, res, next) => {\n    const result = await userService.register(req.body);\n    this.sendSuccess(res, result, 'User registered successfully', 201);\n  });\n\n  // Login user\n  login = asyncHandler(async (req, res, next) => {\n    const result = await userService.login(req.body);\n    this.sendSuccess(res, result, 'Login successful');\n  });\n\n  // Get current user profile\n  getProfile = asyncHandler(async (req, res, next) => {\n    const user = await userService.getProfile(req.user.id);\n    this.sendSuccess(res, { user }, 'Profile retrieved successfully');\n  });\n\n  // Update user profile\n  updateProfile = asyncHandler(async (req, res, next) => {\n    const updatedUser = await userService.updateProfile(req.user.id, req.body);\n    this.sendSuccess(res, { user: updatedUser }, 'Profile updated successfully');\n  });\n\n  // Update password\n  updatePassword = asyncHandler(async (req, res, next) => {\n    const result = await userService.updatePassword(req.user.id, req.body);\n    this.sendSuccess(res, result, 'Password updated successfully');\n  });\n\n  // Delete user account\n  deleteAccount = asyncHandler(async (req, res, next) => {\n    await userService.deleteAccount(req.user.id);\n    this.sendSuccess(res, null, 'Account deleted successfully', 204);\n  });\n\n  // Get all users\n  getAllUsers = asyncHandler(async (req, res, next) => {\n    const { page, limit } = this.getPaginationParams(req.query);\n    const result = await userService.getAllUsers({ page, limit });\n    this.sendPaginated(res, result.users, page, limit, result.pagination.total);\n  });\n\n  // Logout user\n  logout = asyncHandler(async (req, res, next) => {\n    // Clear the token from the client side\n    this.sendSuccess(res, null, 'Logged out successfully');\n  });\n\n  // Toggle favorite destination\n  toggleFavorite = asyncHandler(async (req, res, next) => {\n    this.validateRequestParams(req.params, ['destinationId']);\n    const result = await userService.toggleFavorite(req.user.id, req.params.destinationId);\n    this.sendSuccess(res, result, `Destination ${result.isFavorite ? 'added to' : 'removed from'} favorites`);\n  });\n\n  // Get user's favorite destinations\n  getFavorites = asyncHandler(async (req, res, next) => {\n    const favorites = await userService.getFavorites(req.user.id);\n    this.sendSuccess(res, { favorites }, 'Favorites retrieved successfully');\n  });\n}\n\nmodule.exports = new AuthController();\n"],"mappings":"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","ignoreList":[]}