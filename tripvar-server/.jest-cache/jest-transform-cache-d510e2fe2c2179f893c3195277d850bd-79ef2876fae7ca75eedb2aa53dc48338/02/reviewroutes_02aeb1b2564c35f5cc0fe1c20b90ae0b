ee48f722c702edd48793a555cf92000b
const express = require('express');
const {
  authenticate,
  authorize
} = require('../middleware/auth');
const {
  validateRequest,
  validationRules
} = require('../config/security');
const {
  createReview,
  getDestinationReviews,
  getUserReviews,
  updateReview,
  deleteReview,
  markReviewHelpful,
  getAllReviews,
  updateReviewStatus
} = require('../controllers/review.controller');
const router = express.Router();

// Public routes
router.get('/destination/:destinationId', getDestinationReviews);

// Protected routes (require authentication)
router.use(authenticate);

// User review routes
router.post('/', [validationRules.destinationId, validationRules.reviewTitle, validationRules.reviewContent, validationRules.reviewRating], validateRequest, createReview);
router.get('/my-reviews', getUserReviews);
router.put('/:reviewId', [validationRules.reviewTitle.optional(), validationRules.reviewContent.optional(), validationRules.reviewRating.optional()], validateRequest, updateReview);
router.delete('/:reviewId', deleteReview);
router.post('/:reviewId/helpful', markReviewHelpful);

// Admin routes
router.get('/admin/all', authorize('admin'), getAllReviews);
router.put('/admin/:reviewId/status', authorize('admin'), updateReviewStatus);
module.exports = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImF1dGhlbnRpY2F0ZSIsImF1dGhvcml6ZSIsInZhbGlkYXRlUmVxdWVzdCIsInZhbGlkYXRpb25SdWxlcyIsImNyZWF0ZVJldmlldyIsImdldERlc3RpbmF0aW9uUmV2aWV3cyIsImdldFVzZXJSZXZpZXdzIiwidXBkYXRlUmV2aWV3IiwiZGVsZXRlUmV2aWV3IiwibWFya1Jldmlld0hlbHBmdWwiLCJnZXRBbGxSZXZpZXdzIiwidXBkYXRlUmV2aWV3U3RhdHVzIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwidXNlIiwicG9zdCIsImRlc3RpbmF0aW9uSWQiLCJyZXZpZXdUaXRsZSIsInJldmlld0NvbnRlbnQiLCJyZXZpZXdSYXRpbmciLCJwdXQiLCJvcHRpb25hbCIsImRlbGV0ZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJyZXZpZXcucm91dGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCB7IGF1dGhlbnRpY2F0ZSwgYXV0aG9yaXplIH0gPSByZXF1aXJlKCcuLi9taWRkbGV3YXJlL2F1dGgnKTtcbmNvbnN0IHsgdmFsaWRhdGVSZXF1ZXN0LCB2YWxpZGF0aW9uUnVsZXMgfSA9IHJlcXVpcmUoJy4uL2NvbmZpZy9zZWN1cml0eScpO1xuY29uc3Qge1xuICBjcmVhdGVSZXZpZXcsXG4gIGdldERlc3RpbmF0aW9uUmV2aWV3cyxcbiAgZ2V0VXNlclJldmlld3MsXG4gIHVwZGF0ZVJldmlldyxcbiAgZGVsZXRlUmV2aWV3LFxuICBtYXJrUmV2aWV3SGVscGZ1bCxcbiAgZ2V0QWxsUmV2aWV3cyxcbiAgdXBkYXRlUmV2aWV3U3RhdHVzXG59ID0gcmVxdWlyZSgnLi4vY29udHJvbGxlcnMvcmV2aWV3LmNvbnRyb2xsZXInKTtcblxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuLy8gUHVibGljIHJvdXRlc1xucm91dGVyLmdldCgnL2Rlc3RpbmF0aW9uLzpkZXN0aW5hdGlvbklkJywgZ2V0RGVzdGluYXRpb25SZXZpZXdzKTtcblxuLy8gUHJvdGVjdGVkIHJvdXRlcyAocmVxdWlyZSBhdXRoZW50aWNhdGlvbilcbnJvdXRlci51c2UoYXV0aGVudGljYXRlKTtcblxuLy8gVXNlciByZXZpZXcgcm91dGVzXG5yb3V0ZXIucG9zdCgnLycsXG4gIFtcbiAgICB2YWxpZGF0aW9uUnVsZXMuZGVzdGluYXRpb25JZCxcbiAgICB2YWxpZGF0aW9uUnVsZXMucmV2aWV3VGl0bGUsXG4gICAgdmFsaWRhdGlvblJ1bGVzLnJldmlld0NvbnRlbnQsXG4gICAgdmFsaWRhdGlvblJ1bGVzLnJldmlld1JhdGluZ1xuICBdLFxuICB2YWxpZGF0ZVJlcXVlc3QsXG4gIGNyZWF0ZVJldmlld1xuKTtcblxucm91dGVyLmdldCgnL215LXJldmlld3MnLCBnZXRVc2VyUmV2aWV3cyk7XG5cbnJvdXRlci5wdXQoJy86cmV2aWV3SWQnLFxuICBbXG4gICAgdmFsaWRhdGlvblJ1bGVzLnJldmlld1RpdGxlLm9wdGlvbmFsKCksXG4gICAgdmFsaWRhdGlvblJ1bGVzLnJldmlld0NvbnRlbnQub3B0aW9uYWwoKSxcbiAgICB2YWxpZGF0aW9uUnVsZXMucmV2aWV3UmF0aW5nLm9wdGlvbmFsKClcbiAgXSxcbiAgdmFsaWRhdGVSZXF1ZXN0LFxuICB1cGRhdGVSZXZpZXdcbik7XG5cbnJvdXRlci5kZWxldGUoJy86cmV2aWV3SWQnLCBkZWxldGVSZXZpZXcpO1xuXG5yb3V0ZXIucG9zdCgnLzpyZXZpZXdJZC9oZWxwZnVsJywgbWFya1Jldmlld0hlbHBmdWwpO1xuXG4vLyBBZG1pbiByb3V0ZXNcbnJvdXRlci5nZXQoJy9hZG1pbi9hbGwnLCBhdXRob3JpemUoJ2FkbWluJyksIGdldEFsbFJldmlld3MpO1xucm91dGVyLnB1dCgnL2FkbWluLzpyZXZpZXdJZC9zdGF0dXMnLCBhdXRob3JpemUoJ2FkbWluJyksIHVwZGF0ZVJldmlld1N0YXR1cyk7XG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyOyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBUyxDQUFDO0FBQ2xDLE1BQU07RUFBRUMsWUFBWTtFQUFFQztBQUFVLENBQUMsR0FBR0YsT0FBTyxDQUFDLG9CQUFvQixDQUFDO0FBQ2pFLE1BQU07RUFBRUcsZUFBZTtFQUFFQztBQUFnQixDQUFDLEdBQUdKLE9BQU8sQ0FBQyxvQkFBb0IsQ0FBQztBQUMxRSxNQUFNO0VBQ0pLLFlBQVk7RUFDWkMscUJBQXFCO0VBQ3JCQyxjQUFjO0VBQ2RDLFlBQVk7RUFDWkMsWUFBWTtFQUNaQyxpQkFBaUI7RUFDakJDLGFBQWE7RUFDYkM7QUFDRixDQUFDLEdBQUdaLE9BQU8sQ0FBQyxrQ0FBa0MsQ0FBQztBQUUvQyxNQUFNYSxNQUFNLEdBQUdkLE9BQU8sQ0FBQ2UsTUFBTSxDQUFDLENBQUM7O0FBRS9CO0FBQ0FELE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLDZCQUE2QixFQUFFVCxxQkFBcUIsQ0FBQzs7QUFFaEU7QUFDQU8sTUFBTSxDQUFDRyxHQUFHLENBQUNmLFlBQVksQ0FBQzs7QUFFeEI7QUFDQVksTUFBTSxDQUFDSSxJQUFJLENBQUMsR0FBRyxFQUNiLENBQ0ViLGVBQWUsQ0FBQ2MsYUFBYSxFQUM3QmQsZUFBZSxDQUFDZSxXQUFXLEVBQzNCZixlQUFlLENBQUNnQixhQUFhLEVBQzdCaEIsZUFBZSxDQUFDaUIsWUFBWSxDQUM3QixFQUNEbEIsZUFBZSxFQUNmRSxZQUNGLENBQUM7QUFFRFEsTUFBTSxDQUFDRSxHQUFHLENBQUMsYUFBYSxFQUFFUixjQUFjLENBQUM7QUFFekNNLE1BQU0sQ0FBQ1MsR0FBRyxDQUFDLFlBQVksRUFDckIsQ0FDRWxCLGVBQWUsQ0FBQ2UsV0FBVyxDQUFDSSxRQUFRLENBQUMsQ0FBQyxFQUN0Q25CLGVBQWUsQ0FBQ2dCLGFBQWEsQ0FBQ0csUUFBUSxDQUFDLENBQUMsRUFDeENuQixlQUFlLENBQUNpQixZQUFZLENBQUNFLFFBQVEsQ0FBQyxDQUFDLENBQ3hDLEVBQ0RwQixlQUFlLEVBQ2ZLLFlBQ0YsQ0FBQztBQUVESyxNQUFNLENBQUNXLE1BQU0sQ0FBQyxZQUFZLEVBQUVmLFlBQVksQ0FBQztBQUV6Q0ksTUFBTSxDQUFDSSxJQUFJLENBQUMsb0JBQW9CLEVBQUVQLGlCQUFpQixDQUFDOztBQUVwRDtBQUNBRyxNQUFNLENBQUNFLEdBQUcsQ0FBQyxZQUFZLEVBQUViLFNBQVMsQ0FBQyxPQUFPLENBQUMsRUFBRVMsYUFBYSxDQUFDO0FBQzNERSxNQUFNLENBQUNTLEdBQUcsQ0FBQyx5QkFBeUIsRUFBRXBCLFNBQVMsQ0FBQyxPQUFPLENBQUMsRUFBRVUsa0JBQWtCLENBQUM7QUFFN0VhLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHYixNQUFNIiwiaWdub3JlTGlzdCI6W119