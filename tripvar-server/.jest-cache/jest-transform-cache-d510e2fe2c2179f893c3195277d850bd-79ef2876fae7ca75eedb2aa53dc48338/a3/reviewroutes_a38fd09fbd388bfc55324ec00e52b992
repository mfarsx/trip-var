f1e852cde615b6793f9ff2e9e6e0e2a3
/* istanbul ignore next */
function cov_1m9h766zae() {
  var path = "/Users/mfarsx/dev/tripvar/tripvar-server/src/routes/review.routes.js";
  var hash = "9efc37904a712602109508702f84a60592178fd5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/mfarsx/dev/tripvar/tripvar-server/src/routes/review.routes.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 16
        },
        end: {
          line: 1,
          column: 34
        }
      },
      "1": {
        start: {
          line: 2,
          column: 36
        },
        end: {
          line: 2,
          column: 65
        }
      },
      "2": {
        start: {
          line: 3,
          column: 45
        },
        end: {
          line: 3,
          column: 74
        }
      },
      "3": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 47
        }
      },
      "4": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 31
        }
      },
      "5": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 18,
          column: 65
        }
      },
      "6": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 21,
          column: 25
        }
      },
      "7": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 33,
          column: 2
        }
      },
      "8": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 35,
          column: 42
        }
      },
      "9": {
        start: {
          line: 37,
          column: 0
        },
        end: {
          line: 45,
          column: 2
        }
      },
      "10": {
        start: {
          line: 47,
          column: 0
        },
        end: {
          line: 47,
          column: 42
        }
      },
      "11": {
        start: {
          line: 49,
          column: 0
        },
        end: {
          line: 49,
          column: 53
        }
      },
      "12": {
        start: {
          line: 52,
          column: 0
        },
        end: {
          line: 52,
          column: 60
        }
      },
      "13": {
        start: {
          line: 53,
          column: 0
        },
        end: {
          line: 53,
          column: 78
        }
      },
      "14": {
        start: {
          line: 55,
          column: 0
        },
        end: {
          line: 55,
          column: 24
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9efc37904a712602109508702f84a60592178fd5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1m9h766zae = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1m9h766zae();
const express =
/* istanbul ignore next */
(cov_1m9h766zae().s[0]++, require('express'));
const {
  authenticate,
  authorize
} =
/* istanbul ignore next */
(cov_1m9h766zae().s[1]++, require('../middleware/auth'));
const {
  validateRequest,
  validationRules
} =
/* istanbul ignore next */
(cov_1m9h766zae().s[2]++, require('../config/security'));
const {
  createReview,
  getDestinationReviews,
  getUserReviews,
  updateReview,
  deleteReview,
  markReviewHelpful,
  getAllReviews,
  updateReviewStatus
} =
/* istanbul ignore next */
(cov_1m9h766zae().s[3]++, require('../controllers/review.controller'));
const router =
/* istanbul ignore next */
(cov_1m9h766zae().s[4]++, express.Router());

// Public routes
/* istanbul ignore next */
cov_1m9h766zae().s[5]++;
router.get('/destination/:destinationId', getDestinationReviews);

// Protected routes (require authentication)
/* istanbul ignore next */
cov_1m9h766zae().s[6]++;
router.use(authenticate);

// User review routes
/* istanbul ignore next */
cov_1m9h766zae().s[7]++;
router.post('/', [validationRules.destinationId, validationRules.reviewTitle, validationRules.reviewContent, validationRules.reviewRating], validateRequest, createReview);
/* istanbul ignore next */
cov_1m9h766zae().s[8]++;
router.get('/my-reviews', getUserReviews);
/* istanbul ignore next */
cov_1m9h766zae().s[9]++;
router.put('/:reviewId', [validationRules.reviewTitle.optional(), validationRules.reviewContent.optional(), validationRules.reviewRating.optional()], validateRequest, updateReview);
/* istanbul ignore next */
cov_1m9h766zae().s[10]++;
router.delete('/:reviewId', deleteReview);
/* istanbul ignore next */
cov_1m9h766zae().s[11]++;
router.post('/:reviewId/helpful', markReviewHelpful);

// Admin routes
/* istanbul ignore next */
cov_1m9h766zae().s[12]++;
router.get('/admin/all', authorize('admin'), getAllReviews);
/* istanbul ignore next */
cov_1m9h766zae().s[13]++;
router.put('/admin/:reviewId/status', authorize('admin'), updateReviewStatus);
/* istanbul ignore next */
cov_1m9h766zae().s[14]++;
module.exports = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMW05aDc2NnphZSIsImFjdHVhbENvdmVyYWdlIiwiZXhwcmVzcyIsInMiLCJyZXF1aXJlIiwiYXV0aGVudGljYXRlIiwiYXV0aG9yaXplIiwidmFsaWRhdGVSZXF1ZXN0IiwidmFsaWRhdGlvblJ1bGVzIiwiY3JlYXRlUmV2aWV3IiwiZ2V0RGVzdGluYXRpb25SZXZpZXdzIiwiZ2V0VXNlclJldmlld3MiLCJ1cGRhdGVSZXZpZXciLCJkZWxldGVSZXZpZXciLCJtYXJrUmV2aWV3SGVscGZ1bCIsImdldEFsbFJldmlld3MiLCJ1cGRhdGVSZXZpZXdTdGF0dXMiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJnZXQiLCJ1c2UiLCJwb3N0IiwiZGVzdGluYXRpb25JZCIsInJldmlld1RpdGxlIiwicmV2aWV3Q29udGVudCIsInJldmlld1JhdGluZyIsInB1dCIsIm9wdGlvbmFsIiwiZGVsZXRlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbInJldmlldy5yb3V0ZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IHsgYXV0aGVudGljYXRlLCBhdXRob3JpemUgfSA9IHJlcXVpcmUoJy4uL21pZGRsZXdhcmUvYXV0aCcpO1xuY29uc3QgeyB2YWxpZGF0ZVJlcXVlc3QsIHZhbGlkYXRpb25SdWxlcyB9ID0gcmVxdWlyZSgnLi4vY29uZmlnL3NlY3VyaXR5Jyk7XG5jb25zdCB7XG4gIGNyZWF0ZVJldmlldyxcbiAgZ2V0RGVzdGluYXRpb25SZXZpZXdzLFxuICBnZXRVc2VyUmV2aWV3cyxcbiAgdXBkYXRlUmV2aWV3LFxuICBkZWxldGVSZXZpZXcsXG4gIG1hcmtSZXZpZXdIZWxwZnVsLFxuICBnZXRBbGxSZXZpZXdzLFxuICB1cGRhdGVSZXZpZXdTdGF0dXNcbn0gPSByZXF1aXJlKCcuLi9jb250cm9sbGVycy9yZXZpZXcuY29udHJvbGxlcicpO1xuXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG4vLyBQdWJsaWMgcm91dGVzXG5yb3V0ZXIuZ2V0KCcvZGVzdGluYXRpb24vOmRlc3RpbmF0aW9uSWQnLCBnZXREZXN0aW5hdGlvblJldmlld3MpO1xuXG4vLyBQcm90ZWN0ZWQgcm91dGVzIChyZXF1aXJlIGF1dGhlbnRpY2F0aW9uKVxucm91dGVyLnVzZShhdXRoZW50aWNhdGUpO1xuXG4vLyBVc2VyIHJldmlldyByb3V0ZXNcbnJvdXRlci5wb3N0KCcvJyxcbiAgW1xuICAgIHZhbGlkYXRpb25SdWxlcy5kZXN0aW5hdGlvbklkLFxuICAgIHZhbGlkYXRpb25SdWxlcy5yZXZpZXdUaXRsZSxcbiAgICB2YWxpZGF0aW9uUnVsZXMucmV2aWV3Q29udGVudCxcbiAgICB2YWxpZGF0aW9uUnVsZXMucmV2aWV3UmF0aW5nXG4gIF0sXG4gIHZhbGlkYXRlUmVxdWVzdCxcbiAgY3JlYXRlUmV2aWV3XG4pO1xuXG5yb3V0ZXIuZ2V0KCcvbXktcmV2aWV3cycsIGdldFVzZXJSZXZpZXdzKTtcblxucm91dGVyLnB1dCgnLzpyZXZpZXdJZCcsXG4gIFtcbiAgICB2YWxpZGF0aW9uUnVsZXMucmV2aWV3VGl0bGUub3B0aW9uYWwoKSxcbiAgICB2YWxpZGF0aW9uUnVsZXMucmV2aWV3Q29udGVudC5vcHRpb25hbCgpLFxuICAgIHZhbGlkYXRpb25SdWxlcy5yZXZpZXdSYXRpbmcub3B0aW9uYWwoKVxuICBdLFxuICB2YWxpZGF0ZVJlcXVlc3QsXG4gIHVwZGF0ZVJldmlld1xuKTtcblxucm91dGVyLmRlbGV0ZSgnLzpyZXZpZXdJZCcsIGRlbGV0ZVJldmlldyk7XG5cbnJvdXRlci5wb3N0KCcvOnJldmlld0lkL2hlbHBmdWwnLCBtYXJrUmV2aWV3SGVscGZ1bCk7XG5cbi8vIEFkbWluIHJvdXRlc1xucm91dGVyLmdldCgnL2FkbWluL2FsbCcsIGF1dGhvcml6ZSgnYWRtaW4nKSwgZ2V0QWxsUmV2aWV3cyk7XG5yb3V0ZXIucHV0KCcvYWRtaW4vOnJldmlld0lkL3N0YXR1cycsIGF1dGhvcml6ZSgnYWRtaW4nKSwgdXBkYXRlUmV2aWV3U3RhdHVzKTtcblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBZVk7SUFBQUEsY0FBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsY0FBQTtBQWZaLE1BQU1FLE9BQU87QUFBQTtBQUFBLENBQUFGLGNBQUEsR0FBQUcsQ0FBQSxPQUFHQyxPQUFPLENBQUMsU0FBUyxDQUFDO0FBQ2xDLE1BQU07RUFBRUMsWUFBWTtFQUFFQztBQUFVLENBQUM7QUFBQTtBQUFBLENBQUFOLGNBQUEsR0FBQUcsQ0FBQSxPQUFHQyxPQUFPLENBQUMsb0JBQW9CLENBQUM7QUFDakUsTUFBTTtFQUFFRyxlQUFlO0VBQUVDO0FBQWdCLENBQUM7QUFBQTtBQUFBLENBQUFSLGNBQUEsR0FBQUcsQ0FBQSxPQUFHQyxPQUFPLENBQUMsb0JBQW9CLENBQUM7QUFDMUUsTUFBTTtFQUNKSyxZQUFZO0VBQ1pDLHFCQUFxQjtFQUNyQkMsY0FBYztFQUNkQyxZQUFZO0VBQ1pDLFlBQVk7RUFDWkMsaUJBQWlCO0VBQ2pCQyxhQUFhO0VBQ2JDO0FBQ0YsQ0FBQztBQUFBO0FBQUEsQ0FBQWhCLGNBQUEsR0FBQUcsQ0FBQSxPQUFHQyxPQUFPLENBQUMsa0NBQWtDLENBQUM7QUFFL0MsTUFBTWEsTUFBTTtBQUFBO0FBQUEsQ0FBQWpCLGNBQUEsR0FBQUcsQ0FBQSxPQUFHRCxPQUFPLENBQUNnQixNQUFNLENBQUMsQ0FBQzs7QUFFL0I7QUFBQTtBQUFBbEIsY0FBQSxHQUFBRyxDQUFBO0FBQ0FjLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLDZCQUE2QixFQUFFVCxxQkFBcUIsQ0FBQzs7QUFFaEU7QUFBQTtBQUFBVixjQUFBLEdBQUFHLENBQUE7QUFDQWMsTUFBTSxDQUFDRyxHQUFHLENBQUNmLFlBQVksQ0FBQzs7QUFFeEI7QUFBQTtBQUFBTCxjQUFBLEdBQUFHLENBQUE7QUFDQWMsTUFBTSxDQUFDSSxJQUFJLENBQUMsR0FBRyxFQUNiLENBQ0ViLGVBQWUsQ0FBQ2MsYUFBYSxFQUM3QmQsZUFBZSxDQUFDZSxXQUFXLEVBQzNCZixlQUFlLENBQUNnQixhQUFhLEVBQzdCaEIsZUFBZSxDQUFDaUIsWUFBWSxDQUM3QixFQUNEbEIsZUFBZSxFQUNmRSxZQUNGLENBQUM7QUFBQztBQUFBVCxjQUFBLEdBQUFHLENBQUE7QUFFRmMsTUFBTSxDQUFDRSxHQUFHLENBQUMsYUFBYSxFQUFFUixjQUFjLENBQUM7QUFBQztBQUFBWCxjQUFBLEdBQUFHLENBQUE7QUFFMUNjLE1BQU0sQ0FBQ1MsR0FBRyxDQUFDLFlBQVksRUFDckIsQ0FDRWxCLGVBQWUsQ0FBQ2UsV0FBVyxDQUFDSSxRQUFRLENBQUMsQ0FBQyxFQUN0Q25CLGVBQWUsQ0FBQ2dCLGFBQWEsQ0FBQ0csUUFBUSxDQUFDLENBQUMsRUFDeENuQixlQUFlLENBQUNpQixZQUFZLENBQUNFLFFBQVEsQ0FBQyxDQUFDLENBQ3hDLEVBQ0RwQixlQUFlLEVBQ2ZLLFlBQ0YsQ0FBQztBQUFDO0FBQUFaLGNBQUEsR0FBQUcsQ0FBQTtBQUVGYyxNQUFNLENBQUNXLE1BQU0sQ0FBQyxZQUFZLEVBQUVmLFlBQVksQ0FBQztBQUFDO0FBQUFiLGNBQUEsR0FBQUcsQ0FBQTtBQUUxQ2MsTUFBTSxDQUFDSSxJQUFJLENBQUMsb0JBQW9CLEVBQUVQLGlCQUFpQixDQUFDOztBQUVwRDtBQUFBO0FBQUFkLGNBQUEsR0FBQUcsQ0FBQTtBQUNBYyxNQUFNLENBQUNFLEdBQUcsQ0FBQyxZQUFZLEVBQUViLFNBQVMsQ0FBQyxPQUFPLENBQUMsRUFBRVMsYUFBYSxDQUFDO0FBQUM7QUFBQWYsY0FBQSxHQUFBRyxDQUFBO0FBQzVEYyxNQUFNLENBQUNTLEdBQUcsQ0FBQyx5QkFBeUIsRUFBRXBCLFNBQVMsQ0FBQyxPQUFPLENBQUMsRUFBRVUsa0JBQWtCLENBQUM7QUFBQztBQUFBaEIsY0FBQSxHQUFBRyxDQUFBO0FBRTlFMEIsTUFBTSxDQUFDQyxPQUFPLEdBQUdiLE1BQU0iLCJpZ25vcmVMaXN0IjpbXX0=