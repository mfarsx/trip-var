version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s

  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
    container_name: ai-service
    ports:
      - "8000:8000"
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - HF_API_KEY=${HF_API_KEY}
      - LLM_STUDIO_URL=http://host.docker.internal:1234/v1
      - API_V1_STR=/api/v1
      - MONGODB_URL=mongodb://mongodb:27017
      - MONGODB_NAME=${MONGODB_NAME}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
      - ALGORITHM=${ALGORITHM}
    volumes:
      - ./ai-service:/app
      - ./.env:/app/.env:ro
    networks:
      - app-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/api/v1/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: client
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=${VITE_API_URL}
    volumes:
      - ./client:/app
      - /app/node_modules
    networks:
      - app-network
    depends_on:
      - ai-service

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
    name: mongodb_data
