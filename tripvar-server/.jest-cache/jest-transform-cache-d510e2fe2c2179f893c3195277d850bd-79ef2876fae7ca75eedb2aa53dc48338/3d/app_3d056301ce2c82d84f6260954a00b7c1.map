{"version":3,"names":["cov_2ugg6oec7","actualCoverage","express","s","require","cors","compression","routes","healthRoutes","errorHandler","requestLogger","addRequestId","redisSession","NotFoundError","error","connectDB","connectRedis","securityConfig","specs","swaggerUi","swaggerOptions","initialize","initializeServices","app","catch","err","f","message","use","helmet","corsOptions","generalLimiter","json","limit","urlencoded","extended","serve","setup","all","req","res","next","originalUrl","stack","path","method","module","exports"],"sources":["app.js"],"sourcesContent":["const express = require('express');\nconst cors = require('cors');\nconst compression = require('compression');\nconst routes = require('./routes');\nconst healthRoutes = require('./routes/health.routes');\nconst errorHandler = require('./middleware/errorHandler');\nconst { requestLogger, addRequestId } = require('./utils/logger');\nconst { redisSession } = require('./middleware/redisCache');\nconst { NotFoundError } = require('./utils/errors');\nconst { error } = require('./utils/logger');\nconst connectDB = require('./config/database');\nconst { connectRedis } = require('./config/redis');\nconst { securityConfig } = require('./config/security');\nconst { specs, swaggerUi, swaggerOptions } = require('./config/swagger');\nconst { initialize: initializeServices } = require('./container/serviceRegistry');\n\nconst app = express();\n\n// Initialize service registry\ninitializeServices();\n\n// Connect to MongoDB\nconnectDB();\n\n// Connect to Redis\nconnectRedis().catch((err) => {\n  error('Failed to connect to Redis', { error: err.message });\n  // Don't exit the process, continue without Redis\n});\n\n// Security middleware\napp.use(securityConfig.helmet);\napp.use(compression());\napp.use(cors(securityConfig.corsOptions));\napp.use(securityConfig.generalLimiter);\n\n// Body parsing middleware\napp.use(express.json({ limit: '10mb' }));\napp.use(express.urlencoded({ extended: true, limit: '10mb' }));\n\n// Logging and session middleware\napp.use(addRequestId);\napp.use(requestLogger);\napp.use(redisSession());\n\n// Health check routes (outside of versioned API)\napp.use('/health', healthRoutes);\n\n// API Documentation\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(specs, swaggerOptions));\n\n// API routes\napp.use('/api/v1', routes);\n\n// 404 handler for undefined routes\napp.all('*', (req, res, next) => {\n  next(new NotFoundError(`Can't find ${req.originalUrl} on this server!`));\n});\n\n// Global error handler\napp.use((err, req, res, next) => {\n  error('Error occurred', {\n    error: err.message,\n    stack: err.stack,\n    path: req.path,\n    method: req.method\n  });\n  errorHandler(err, req, res, next);\n});\n\nmodule.exports = app;\n"],"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","ignoreList":[]}