{"version":3,"names":["cov_nbc0cl50r","actualCoverage","mongoose","s","require","reviewSchema","Schema","user","type","Types","ObjectId","ref","required","destination","booking","title","String","trim","maxlength","content","rating","Number","min","max","ratings","cleanliness","location","value","service","status","enum","values","message","default","helpfulVotes","helpfulUsers","adminResponse","respondedBy","respondedAt","Date","timestamps","toJSON","virtuals","toObject","index","createdAt","unique","virtual","get","f","now","created","diffTime","Math","abs","diffDays","ceil","b","statics","calculateAverageRating","destinationId","stats","aggregate","$match","$group","_id","nRating","$sum","avgRating","$avg","avgCleanliness","avgLocation","avgValue","avgService","length","model","findByIdAndUpdate","round","ratingCount","post","constructor","Review","module","exports"],"sources":["review.model.js"],"sourcesContent":["const mongoose = require('mongoose');\n\nconst reviewSchema = new mongoose.Schema(\n  {\n    // User who wrote the review\n    user: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: 'User',\n      required: [true, 'Review must belong to a user']\n    },\n\n    // Destination being reviewed\n    destination: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: 'Destination',\n      required: [true, 'Review must be for a destination']\n    },\n\n    // Booking reference (optional - user can review without booking)\n    booking: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: 'Booking',\n      required: false\n    },\n\n    // Review content\n    title: {\n      type: String,\n      required: [true, 'Review title is required'],\n      trim: true,\n      maxlength: [100, 'Title cannot exceed 100 characters']\n    },\n\n    content: {\n      type: String,\n      required: [true, 'Review content is required'],\n      trim: true,\n      maxlength: [1000, 'Review content cannot exceed 1000 characters']\n    },\n\n    // Rating (1-5 stars)\n    rating: {\n      type: Number,\n      required: [true, 'Rating is required'],\n      min: [1, 'Rating must be at least 1'],\n      max: [5, 'Rating cannot exceed 5']\n    },\n\n    // Additional ratings (optional)\n    ratings: {\n      cleanliness: {\n        type: Number,\n        min: 1,\n        max: 5,\n        required: false\n      },\n      location: {\n        type: Number,\n        min: 1,\n        max: 5,\n        required: false\n      },\n      value: {\n        type: Number,\n        min: 1,\n        max: 5,\n        required: false\n      },\n      service: {\n        type: Number,\n        min: 1,\n        max: 5,\n        required: false\n      }\n    },\n\n    // Review status\n    status: {\n      type: String,\n      enum: {\n        values: ['pending', 'approved', 'rejected'],\n        message: 'Status must be pending, approved, or rejected'\n      },\n      default: 'approved'\n    },\n\n    // Helpful votes\n    helpfulVotes: {\n      type: Number,\n      default: 0\n    },\n\n    // Users who found this review helpful\n    helpfulUsers: [{\n      type: mongoose.Schema.Types.ObjectId,\n      ref: 'User'\n    }],\n\n    // Admin response (optional)\n    adminResponse: {\n      content: {\n        type: String,\n        maxlength: [500, 'Admin response cannot exceed 500 characters']\n      },\n      respondedBy: {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: 'User'\n      },\n      respondedAt: {\n        type: Date\n      }\n    }\n  },\n  {\n    timestamps: true,\n    toJSON: { virtuals: true },\n    toObject: { virtuals: true }\n  }\n);\n\n// Index for better query performance\nreviewSchema.index({ destination: 1, createdAt: -1 });\nreviewSchema.index({ user: 1, destination: 1 }, { unique: true }); // One review per user per destination\nreviewSchema.index({ status: 1 });\nreviewSchema.index({ rating: 1 });\n\n// Virtual field for review age\nreviewSchema.virtual('age').get(function() {\n  const now = new Date();\n  const created = new Date(this.createdAt);\n  const diffTime = Math.abs(now - created);\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n  if (diffDays === 1) {\n    return '1 day ago';\n  }\n  if (diffDays < 7) {\n    return `${diffDays} days ago`;\n  }\n  if (diffDays < 30) {\n    return `${Math.ceil(diffDays / 7)} weeks ago`;\n  }\n  if (diffDays < 365) {\n    return `${Math.ceil(diffDays / 30)} months ago`;\n  }\n  return `${Math.ceil(diffDays / 365)} years ago`;\n});\n\n// Static method to calculate average rating for a destination\nreviewSchema.statics.calculateAverageRating = async function(destinationId) {\n  const stats = await this.aggregate([\n    {\n      $match: {\n        destination: destinationId,\n        status: 'approved'\n      }\n    },\n    {\n      $group: {\n        _id: '$destination',\n        nRating: { $sum: 1 },\n        avgRating: { $avg: '$rating' },\n        avgCleanliness: { $avg: '$ratings.cleanliness' },\n        avgLocation: { $avg: '$ratings.location' },\n        avgValue: { $avg: '$ratings.value' },\n        avgService: { $avg: '$ratings.service' }\n      }\n    }\n  ]);\n\n  if (stats.length > 0) {\n    await mongoose.model('Destination').findByIdAndUpdate(destinationId, {\n      rating: Math.round(stats[0].avgRating * 10) / 10,\n      ratingCount: stats[0].nRating\n    });\n  } else {\n    await mongoose.model('Destination').findByIdAndUpdate(destinationId, {\n      rating: 0,\n      ratingCount: 0\n    });\n  }\n};\n\n// Post-save middleware to update destination rating\nreviewSchema.post('save', function() {\n  this.constructor.calculateAverageRating(this.destination);\n});\n\n// Post-remove middleware to update destination rating\nreviewSchema.post('remove', function() {\n  this.constructor.calculateAverageRating(this.destination);\n});\n\nconst Review = mongoose.model('Review', reviewSchema);\n\nmodule.exports = Review;"],"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","ignoreList":[]}