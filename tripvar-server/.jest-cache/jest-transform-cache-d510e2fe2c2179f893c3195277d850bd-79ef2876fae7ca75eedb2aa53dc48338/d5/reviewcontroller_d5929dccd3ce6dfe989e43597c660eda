5160c73abf33ad92678d13d8d4378a69
/* istanbul ignore next */
function cov_2g4v1val53() {
  var path = "/Users/mfarsx/dev/tripvar/tripvar-server/src/controllers/review.controller.js";
  var hash = "e56ba5a238eace7ce31f5b8d44089352627685f1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/mfarsx/dev/tripvar/tripvar-server/src/controllers/review.controller.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 15
        },
        end: {
          line: 1,
          column: 48
        }
      },
      "1": {
        start: {
          line: 2,
          column: 20
        },
        end: {
          line: 2,
          column: 58
        }
      },
      "2": {
        start: {
          line: 3,
          column: 16
        },
        end: {
          line: 3,
          column: 50
        }
      },
      "3": {
        start: {
          line: 4,
          column: 58
        },
        end: {
          line: 4,
          column: 84
        }
      },
      "4": {
        start: {
          line: 5,
          column: 28
        },
        end: {
          line: 5,
          column: 56
        }
      },
      "5": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 6,
          column: 50
        }
      },
      "6": {
        start: {
          line: 9,
          column: 21
        },
        end: {
          line: 90,
          column: 1
        }
      },
      "7": {
        start: {
          line: 10,
          column: 2
        },
        end: {
          line: 89,
          column: 3
        }
      },
      "8": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 16
        }
      },
      "9": {
        start: {
          line: 20,
          column: 19
        },
        end: {
          line: 20,
          column: 30
        }
      },
      "10": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 25,
          column: 5
        }
      },
      "11": {
        start: {
          line: 24,
          column: 6
        },
        end: {
          line: 24,
          column: 71
        }
      },
      "12": {
        start: {
          line: 28,
          column: 24
        },
        end: {
          line: 28,
          column: 65
        }
      },
      "13": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "14": {
        start: {
          line: 30,
          column: 6
        },
        end: {
          line: 30,
          column: 55
        }
      },
      "15": {
        start: {
          line: 34,
          column: 27
        },
        end: {
          line: 37,
          column: 6
        }
      },
      "16": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "17": {
        start: {
          line: 40,
          column: 6
        },
        end: {
          line: 40,
          column: 76
        }
      },
      "18": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "19": {
        start: {
          line: 45,
          column: 22
        },
        end: {
          line: 49,
          column: 8
        }
      },
      "20": {
        start: {
          line: 51,
          column: 6
        },
        end: {
          line: 53,
          column: 7
        }
      },
      "21": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 63
        }
      },
      "22": {
        start: {
          line: 57,
          column: 19
        },
        end: {
          line: 65,
          column: 6
        }
      },
      "23": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 24
        }
      },
      "24": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 48
        }
      },
      "25": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 77,
          column: 7
        }
      },
      "26": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 84,
          column: 6
        }
      },
      "27": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 87,
          column: 81
        }
      },
      "28": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 88,
          column: 14
        }
      },
      "29": {
        start: {
          line: 93,
          column: 30
        },
        end: {
          line: 201,
          column: 1
        }
      },
      "30": {
        start: {
          line: 94,
          column: 2
        },
        end: {
          line: 200,
          column: 3
        }
      },
      "31": {
        start: {
          line: 95,
          column: 30
        },
        end: {
          line: 95,
          column: 40
        }
      },
      "32": {
        start: {
          line: 96,
          column: 54
        },
        end: {
          line: 96,
          column: 63
        }
      },
      "33": {
        start: {
          line: 99,
          column: 24
        },
        end: {
          line: 99,
          column: 65
        }
      },
      "34": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 102,
          column: 5
        }
      },
      "35": {
        start: {
          line: 101,
          column: 6
        },
        end: {
          line: 101,
          column: 55
        }
      },
      "36": {
        start: {
          line: 105,
          column: 18
        },
        end: {
          line: 105,
          column: 20
        }
      },
      "37": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 124,
          column: 5
        }
      },
      "38": {
        start: {
          line: 108,
          column: 6
        },
        end: {
          line: 108,
          column: 34
        }
      },
      "39": {
        start: {
          line: 109,
          column: 6
        },
        end: {
          line: 109,
          column: 12
        }
      },
      "40": {
        start: {
          line: 111,
          column: 6
        },
        end: {
          line: 111,
          column: 33
        }
      },
      "41": {
        start: {
          line: 112,
          column: 6
        },
        end: {
          line: 112,
          column: 12
        }
      },
      "42": {
        start: {
          line: 114,
          column: 6
        },
        end: {
          line: 114,
          column: 31
        }
      },
      "43": {
        start: {
          line: 115,
          column: 6
        },
        end: {
          line: 115,
          column: 12
        }
      },
      "44": {
        start: {
          line: 117,
          column: 6
        },
        end: {
          line: 117,
          column: 30
        }
      },
      "45": {
        start: {
          line: 118,
          column: 6
        },
        end: {
          line: 118,
          column: 12
        }
      },
      "46": {
        start: {
          line: 120,
          column: 6
        },
        end: {
          line: 120,
          column: 37
        }
      },
      "47": {
        start: {
          line: 121,
          column: 6
        },
        end: {
          line: 121,
          column: 12
        }
      },
      "48": {
        start: {
          line: 123,
          column: 6
        },
        end: {
          line: 123,
          column: 34
        }
      },
      "49": {
        start: {
          line: 127,
          column: 17
        },
        end: {
          line: 127,
          column: 63
        }
      },
      "50": {
        start: {
          line: 130,
          column: 20
        },
        end: {
          line: 137,
          column: 33
        }
      },
      "51": {
        start: {
          line: 140,
          column: 18
        },
        end: {
          line: 143,
          column: 6
        }
      },
      "52": {
        start: {
          line: 146,
          column: 18
        },
        end: {
          line: 163,
          column: 6
        }
      },
      "53": {
        start: {
          line: 165,
          column: 22
        },
        end: {
          line: 169,
          column: 5
        }
      },
      "54": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 180,
          column: 5
        }
      },
      "55": {
        start: {
          line: 172,
          column: 19
        },
        end: {
          line: 172,
          column: 27
        }
      },
      "56": {
        start: {
          line: 173,
          column: 6
        },
        end: {
          line: 173,
          column: 75
        }
      },
      "57": {
        start: {
          line: 174,
          column: 6
        },
        end: {
          line: 174,
          column: 51
        }
      },
      "58": {
        start: {
          line: 177,
          column: 6
        },
        end: {
          line: 179,
          column: 9
        }
      },
      "59": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 43
        }
      },
      "60": {
        start: {
          line: 182,
          column: 4
        },
        end: {
          line: 195,
          column: 6
        }
      },
      "61": {
        start: {
          line: 198,
          column: 4
        },
        end: {
          line: 198,
          column: 101
        }
      },
      "62": {
        start: {
          line: 199,
          column: 4
        },
        end: {
          line: 199,
          column: 14
        }
      },
      "63": {
        start: {
          line: 204,
          column: 23
        },
        end: {
          line: 240,
          column: 1
        }
      },
      "64": {
        start: {
          line: 205,
          column: 2
        },
        end: {
          line: 239,
          column: 3
        }
      },
      "65": {
        start: {
          line: 206,
          column: 19
        },
        end: {
          line: 206,
          column: 30
        }
      },
      "66": {
        start: {
          line: 207,
          column: 37
        },
        end: {
          line: 207,
          column: 46
        }
      },
      "67": {
        start: {
          line: 210,
          column: 17
        },
        end: {
          line: 210,
          column: 63
        }
      },
      "68": {
        start: {
          line: 213,
          column: 20
        },
        end: {
          line: 217,
          column: 33
        }
      },
      "69": {
        start: {
          line: 220,
          column: 18
        },
        end: {
          line: 220,
          column: 63
        }
      },
      "70": {
        start: {
          line: 222,
          column: 4
        },
        end: {
          line: 234,
          column: 6
        }
      },
      "71": {
        start: {
          line: 237,
          column: 4
        },
        end: {
          line: 237,
          column: 87
        }
      },
      "72": {
        start: {
          line: 238,
          column: 4
        },
        end: {
          line: 238,
          column: 14
        }
      },
      "73": {
        start: {
          line: 243,
          column: 21
        },
        end: {
          line: 283,
          column: 1
        }
      },
      "74": {
        start: {
          line: 244,
          column: 2
        },
        end: {
          line: 282,
          column: 3
        }
      },
      "75": {
        start: {
          line: 245,
          column: 25
        },
        end: {
          line: 245,
          column: 35
        }
      },
      "76": {
        start: {
          line: 246,
          column: 48
        },
        end: {
          line: 246,
          column: 56
        }
      },
      "77": {
        start: {
          line: 247,
          column: 19
        },
        end: {
          line: 247,
          column: 30
        }
      },
      "78": {
        start: {
          line: 249,
          column: 19
        },
        end: {
          line: 249,
          column: 50
        }
      },
      "79": {
        start: {
          line: 251,
          column: 4
        },
        end: {
          line: 253,
          column: 5
        }
      },
      "80": {
        start: {
          line: 252,
          column: 6
        },
        end: {
          line: 252,
          column: 50
        }
      },
      "81": {
        start: {
          line: 256,
          column: 4
        },
        end: {
          line: 258,
          column: 5
        }
      },
      "82": {
        start: {
          line: 257,
          column: 6
        },
        end: {
          line: 257,
          column: 49
        }
      },
      "83": {
        start: {
          line: 261,
          column: 26
        },
        end: {
          line: 265,
          column: 36
        }
      },
      "84": {
        start: {
          line: 267,
          column: 4
        },
        end: {
          line: 270,
          column: 7
        }
      },
      "85": {
        start: {
          line: 272,
          column: 4
        },
        end: {
          line: 277,
          column: 6
        }
      },
      "86": {
        start: {
          line: 280,
          column: 4
        },
        end: {
          line: 280,
          column: 90
        }
      },
      "87": {
        start: {
          line: 281,
          column: 4
        },
        end: {
          line: 281,
          column: 14
        }
      },
      "88": {
        start: {
          line: 286,
          column: 21
        },
        end: {
          line: 321,
          column: 1
        }
      },
      "89": {
        start: {
          line: 287,
          column: 2
        },
        end: {
          line: 320,
          column: 3
        }
      },
      "90": {
        start: {
          line: 288,
          column: 25
        },
        end: {
          line: 288,
          column: 35
        }
      },
      "91": {
        start: {
          line: 289,
          column: 19
        },
        end: {
          line: 289,
          column: 30
        }
      },
      "92": {
        start: {
          line: 291,
          column: 19
        },
        end: {
          line: 291,
          column: 50
        }
      },
      "93": {
        start: {
          line: 293,
          column: 4
        },
        end: {
          line: 295,
          column: 5
        }
      },
      "94": {
        start: {
          line: 294,
          column: 6
        },
        end: {
          line: 294,
          column: 50
        }
      },
      "95": {
        start: {
          line: 298,
          column: 4
        },
        end: {
          line: 300,
          column: 5
        }
      },
      "96": {
        start: {
          line: 299,
          column: 6
        },
        end: {
          line: 299,
          column: 49
        }
      },
      "97": {
        start: {
          line: 302,
          column: 4
        },
        end: {
          line: 302,
          column: 45
        }
      },
      "98": {
        start: {
          line: 304,
          column: 4
        },
        end: {
          line: 308,
          column: 7
        }
      },
      "99": {
        start: {
          line: 310,
          column: 4
        },
        end: {
          line: 315,
          column: 6
        }
      },
      "100": {
        start: {
          line: 318,
          column: 4
        },
        end: {
          line: 318,
          column: 90
        }
      },
      "101": {
        start: {
          line: 319,
          column: 4
        },
        end: {
          line: 319,
          column: 14
        }
      },
      "102": {
        start: {
          line: 324,
          column: 26
        },
        end: {
          line: 364,
          column: 1
        }
      },
      "103": {
        start: {
          line: 325,
          column: 2
        },
        end: {
          line: 363,
          column: 3
        }
      },
      "104": {
        start: {
          line: 326,
          column: 25
        },
        end: {
          line: 326,
          column: 35
        }
      },
      "105": {
        start: {
          line: 327,
          column: 19
        },
        end: {
          line: 327,
          column: 30
        }
      },
      "106": {
        start: {
          line: 329,
          column: 19
        },
        end: {
          line: 329,
          column: 50
        }
      },
      "107": {
        start: {
          line: 331,
          column: 4
        },
        end: {
          line: 333,
          column: 5
        }
      },
      "108": {
        start: {
          line: 332,
          column: 6
        },
        end: {
          line: 332,
          column: 50
        }
      },
      "109": {
        start: {
          line: 336,
          column: 29
        },
        end: {
          line: 336,
          column: 65
        }
      },
      "110": {
        start: {
          line: 338,
          column: 4
        },
        end: {
          line: 346,
          column: 5
        }
      },
      "111": {
        start: {
          line: 340,
          column: 6
        },
        end: {
          line: 340,
          column: 87
        }
      },
      "112": {
        start: {
          line: 340,
          column: 61
        },
        end: {
          line: 340,
          column: 85
        }
      },
      "113": {
        start: {
          line: 341,
          column: 6
        },
        end: {
          line: 341,
          column: 65
        }
      },
      "114": {
        start: {
          line: 344,
          column: 6
        },
        end: {
          line: 344,
          column: 39
        }
      },
      "115": {
        start: {
          line: 345,
          column: 6
        },
        end: {
          line: 345,
          column: 31
        }
      },
      "116": {
        start: {
          line: 348,
          column: 4
        },
        end: {
          line: 348,
          column: 24
        }
      },
      "117": {
        start: {
          line: 350,
          column: 4
        },
        end: {
          line: 358,
          column: 6
        }
      },
      "118": {
        start: {
          line: 361,
          column: 4
        },
        end: {
          line: 361,
          column: 97
        }
      },
      "119": {
        start: {
          line: 362,
          column: 4
        },
        end: {
          line: 362,
          column: 14
        }
      },
      "120": {
        start: {
          line: 367,
          column: 22
        },
        end: {
          line: 412,
          column: 1
        }
      },
      "121": {
        start: {
          line: 368,
          column: 2
        },
        end: {
          line: 411,
          column: 3
        }
      },
      "122": {
        start: {
          line: 369,
          column: 60
        },
        end: {
          line: 369,
          column: 69
        }
      },
      "123": {
        start: {
          line: 372,
          column: 18
        },
        end: {
          line: 372,
          column: 20
        }
      },
      "124": {
        start: {
          line: 373,
          column: 4
        },
        end: {
          line: 375,
          column: 5
        }
      },
      "125": {
        start: {
          line: 374,
          column: 6
        },
        end: {
          line: 374,
          column: 28
        }
      },
      "126": {
        start: {
          line: 376,
          column: 4
        },
        end: {
          line: 378,
          column: 5
        }
      },
      "127": {
        start: {
          line: 377,
          column: 6
        },
        end: {
          line: 377,
          column: 40
        }
      },
      "128": {
        start: {
          line: 381,
          column: 17
        },
        end: {
          line: 381,
          column: 63
        }
      },
      "129": {
        start: {
          line: 384,
          column: 20
        },
        end: {
          line: 389,
          column: 33
        }
      },
      "130": {
        start: {
          line: 392,
          column: 18
        },
        end: {
          line: 392,
          column: 52
        }
      },
      "131": {
        start: {
          line: 394,
          column: 4
        },
        end: {
          line: 406,
          column: 6
        }
      },
      "132": {
        start: {
          line: 409,
          column: 4
        },
        end: {
          line: 409,
          column: 64
        }
      },
      "133": {
        start: {
          line: 410,
          column: 4
        },
        end: {
          line: 410,
          column: 14
        }
      },
      "134": {
        start: {
          line: 415,
          column: 27
        },
        end: {
          line: 467,
          column: 1
        }
      },
      "135": {
        start: {
          line: 416,
          column: 2
        },
        end: {
          line: 466,
          column: 3
        }
      },
      "136": {
        start: {
          line: 417,
          column: 25
        },
        end: {
          line: 417,
          column: 35
        }
      },
      "137": {
        start: {
          line: 418,
          column: 38
        },
        end: {
          line: 418,
          column: 46
        }
      },
      "138": {
        start: {
          line: 420,
          column: 26
        },
        end: {
          line: 420,
          column: 61
        }
      },
      "139": {
        start: {
          line: 421,
          column: 4
        },
        end: {
          line: 423,
          column: 5
        }
      },
      "140": {
        start: {
          line: 422,
          column: 6
        },
        end: {
          line: 422,
          column: 57
        }
      },
      "141": {
        start: {
          line: 425,
          column: 19
        },
        end: {
          line: 425,
          column: 50
        }
      },
      "142": {
        start: {
          line: 426,
          column: 4
        },
        end: {
          line: 428,
          column: 5
        }
      },
      "143": {
        start: {
          line: 427,
          column: 6
        },
        end: {
          line: 427,
          column: 50
        }
      },
      "144": {
        start: {
          line: 431,
          column: 4
        },
        end: {
          line: 431,
          column: 27
        }
      },
      "145": {
        start: {
          line: 434,
          column: 4
        },
        end: {
          line: 440,
          column: 5
        }
      },
      "146": {
        start: {
          line: 435,
          column: 6
        },
        end: {
          line: 439,
          column: 8
        }
      },
      "147": {
        start: {
          line: 442,
          column: 4
        },
        end: {
          line: 442,
          column: 24
        }
      },
      "148": {
        start: {
          line: 445,
          column: 4
        },
        end: {
          line: 448,
          column: 7
        }
      },
      "149": {
        start: {
          line: 450,
          column: 4
        },
        end: {
          line: 454,
          column: 7
        }
      },
      "150": {
        start: {
          line: 456,
          column: 4
        },
        end: {
          line: 461,
          column: 6
        }
      },
      "151": {
        start: {
          line: 464,
          column: 4
        },
        end: {
          line: 464,
          column: 97
        }
      },
      "152": {
        start: {
          line: 465,
          column: 4
        },
        end: {
          line: 465,
          column: 14
        }
      },
      "153": {
        start: {
          line: 469,
          column: 0
        },
        end: {
          line: 478,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 21
          },
          end: {
            line: 9,
            column: 22
          }
        },
        loc: {
          start: {
            line: 9,
            column: 46
          },
          end: {
            line: 90,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 93,
            column: 30
          },
          end: {
            line: 93,
            column: 31
          }
        },
        loc: {
          start: {
            line: 93,
            column: 55
          },
          end: {
            line: 201,
            column: 1
          }
        },
        line: 93
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 177,
            column: 38
          },
          end: {
            line: 177,
            column: 39
          }
        },
        loc: {
          start: {
            line: 177,
            column: 48
          },
          end: {
            line: 179,
            column: 7
          }
        },
        line: 177
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 204,
            column: 23
          },
          end: {
            line: 204,
            column: 24
          }
        },
        loc: {
          start: {
            line: 204,
            column: 48
          },
          end: {
            line: 240,
            column: 1
          }
        },
        line: 204
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 243,
            column: 21
          },
          end: {
            line: 243,
            column: 22
          }
        },
        loc: {
          start: {
            line: 243,
            column: 46
          },
          end: {
            line: 283,
            column: 1
          }
        },
        line: 243
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 286,
            column: 21
          },
          end: {
            line: 286,
            column: 22
          }
        },
        loc: {
          start: {
            line: 286,
            column: 46
          },
          end: {
            line: 321,
            column: 1
          }
        },
        line: 286
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 324,
            column: 26
          },
          end: {
            line: 324,
            column: 27
          }
        },
        loc: {
          start: {
            line: 324,
            column: 51
          },
          end: {
            line: 364,
            column: 1
          }
        },
        line: 324
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 340,
            column: 55
          },
          end: {
            line: 340,
            column: 56
          }
        },
        loc: {
          start: {
            line: 340,
            column: 61
          },
          end: {
            line: 340,
            column: 85
          }
        },
        line: 340
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 367,
            column: 22
          },
          end: {
            line: 367,
            column: 23
          }
        },
        loc: {
          start: {
            line: 367,
            column: 47
          },
          end: {
            line: 412,
            column: 1
          }
        },
        line: 367
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 415,
            column: 27
          },
          end: {
            line: 415,
            column: 28
          }
        },
        loc: {
          start: {
            line: 415,
            column: 52
          },
          end: {
            line: 467,
            column: 1
          }
        },
        line: 415
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 23,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 23,
            column: 22
          }
        }, {
          start: {
            line: 23,
            column: 26
          },
          end: {
            line: 23,
            column: 32
          }
        }, {
          start: {
            line: 23,
            column: 36
          },
          end: {
            line: 23,
            column: 44
          }
        }, {
          start: {
            line: 23,
            column: 48
          },
          end: {
            line: 23,
            column: 55
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "3": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "4": {
        loc: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "5": {
        loc: {
          start: {
            line: 51,
            column: 6
          },
          end: {
            line: 53,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 6
          },
          end: {
            line: 53,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "6": {
        loc: {
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 96,
            column: 20
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 96,
            column: 19
          },
          end: {
            line: 96,
            column: 20
          }
        }],
        line: 96
      },
      "7": {
        loc: {
          start: {
            line: 96,
            column: 22
          },
          end: {
            line: 96,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 96,
            column: 30
          },
          end: {
            line: 96,
            column: 32
          }
        }],
        line: 96
      },
      "8": {
        loc: {
          start: {
            line: 96,
            column: 34
          },
          end: {
            line: 96,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 96,
            column: 41
          },
          end: {
            line: 96,
            column: 49
          }
        }],
        line: 96
      },
      "9": {
        loc: {
          start: {
            line: 100,
            column: 4
          },
          end: {
            line: 102,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 4
          },
          end: {
            line: 102,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "10": {
        loc: {
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 109,
            column: 12
          }
        }, {
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 112,
            column: 12
          }
        }, {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 115,
            column: 12
          }
        }, {
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 118,
            column: 12
          }
        }, {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 121,
            column: 12
          }
        }, {
          start: {
            line: 122,
            column: 4
          },
          end: {
            line: 123,
            column: 34
          }
        }],
        line: 106
      },
      "11": {
        loc: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 180,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 180,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "12": {
        loc: {
          start: {
            line: 207,
            column: 12
          },
          end: {
            line: 207,
            column: 20
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 207,
            column: 19
          },
          end: {
            line: 207,
            column: 20
          }
        }],
        line: 207
      },
      "13": {
        loc: {
          start: {
            line: 207,
            column: 22
          },
          end: {
            line: 207,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 207,
            column: 30
          },
          end: {
            line: 207,
            column: 32
          }
        }],
        line: 207
      },
      "14": {
        loc: {
          start: {
            line: 251,
            column: 4
          },
          end: {
            line: 253,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 4
          },
          end: {
            line: 253,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "15": {
        loc: {
          start: {
            line: 256,
            column: 4
          },
          end: {
            line: 258,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 256,
            column: 4
          },
          end: {
            line: 258,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 256
      },
      "16": {
        loc: {
          start: {
            line: 293,
            column: 4
          },
          end: {
            line: 295,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 293,
            column: 4
          },
          end: {
            line: 295,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 293
      },
      "17": {
        loc: {
          start: {
            line: 298,
            column: 4
          },
          end: {
            line: 300,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 298,
            column: 4
          },
          end: {
            line: 300,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 298
      },
      "18": {
        loc: {
          start: {
            line: 298,
            column: 8
          },
          end: {
            line: 298,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 298,
            column: 8
          },
          end: {
            line: 298,
            column: 41
          }
        }, {
          start: {
            line: 298,
            column: 45
          },
          end: {
            line: 298,
            column: 70
          }
        }],
        line: 298
      },
      "19": {
        loc: {
          start: {
            line: 331,
            column: 4
          },
          end: {
            line: 333,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 331,
            column: 4
          },
          end: {
            line: 333,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 331
      },
      "20": {
        loc: {
          start: {
            line: 338,
            column: 4
          },
          end: {
            line: 346,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 338,
            column: 4
          },
          end: {
            line: 346,
            column: 5
          }
        }, {
          start: {
            line: 342,
            column: 11
          },
          end: {
            line: 346,
            column: 5
          }
        }],
        line: 338
      },
      "21": {
        loc: {
          start: {
            line: 356,
            column: 18
          },
          end: {
            line: 356,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 356,
            column: 37
          },
          end: {
            line: 356,
            column: 47
          }
        }, {
          start: {
            line: 356,
            column: 50
          },
          end: {
            line: 356,
            column: 58
          }
        }],
        line: 356
      },
      "22": {
        loc: {
          start: {
            line: 369,
            column: 20
          },
          end: {
            line: 369,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 369,
            column: 27
          },
          end: {
            line: 369,
            column: 28
          }
        }],
        line: 369
      },
      "23": {
        loc: {
          start: {
            line: 369,
            column: 30
          },
          end: {
            line: 369,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 369,
            column: 38
          },
          end: {
            line: 369,
            column: 40
          }
        }],
        line: 369
      },
      "24": {
        loc: {
          start: {
            line: 373,
            column: 4
          },
          end: {
            line: 375,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 373,
            column: 4
          },
          end: {
            line: 375,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 373
      },
      "25": {
        loc: {
          start: {
            line: 376,
            column: 4
          },
          end: {
            line: 378,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 376,
            column: 4
          },
          end: {
            line: 378,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 376
      },
      "26": {
        loc: {
          start: {
            line: 421,
            column: 4
          },
          end: {
            line: 423,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 421,
            column: 4
          },
          end: {
            line: 423,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 421
      },
      "27": {
        loc: {
          start: {
            line: 426,
            column: 4
          },
          end: {
            line: 428,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 426,
            column: 4
          },
          end: {
            line: 428,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 426
      },
      "28": {
        loc: {
          start: {
            line: 434,
            column: 4
          },
          end: {
            line: 440,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 434,
            column: 4
          },
          end: {
            line: 440,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 434
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0],
      "7": [0],
      "8": [0],
      "9": [0, 0],
      "10": [0, 0, 0, 0, 0, 0],
      "11": [0, 0],
      "12": [0],
      "13": [0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0],
      "23": [0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e56ba5a238eace7ce31f5b8d44089352627685f1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2g4v1val53 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2g4v1val53();
const Review =
/* istanbul ignore next */
(cov_2g4v1val53().s[0]++, require('../models/review.model'));
const Destination =
/* istanbul ignore next */
(cov_2g4v1val53().s[1]++, require('../models/destination.model'));
const Booking =
/* istanbul ignore next */
(cov_2g4v1val53().s[2]++, require('../models/booking.model'));
const {
  ValidationError,
  NotFoundError,
  ConflictError
} =
/* istanbul ignore next */
(cov_2g4v1val53().s[3]++, require('../utils/errors'));
const {
  successResponse
} =
/* istanbul ignore next */
(cov_2g4v1val53().s[4]++, require('../utils/response'));
const {
  info,
  error
} =
/* istanbul ignore next */
(cov_2g4v1val53().s[5]++, require('../utils/logger'));

// Create a new review
/* istanbul ignore next */
cov_2g4v1val53().s[6]++;
const createReview = async (req, res, next) => {
  /* istanbul ignore next */
  cov_2g4v1val53().f[0]++;
  cov_2g4v1val53().s[7]++;
  try {
    const {
      destinationId,
      bookingId,
      title,
      content,
      rating,
      ratings
    } =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[8]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[9]++, req.user.id);

    // Validate required fields
    /* istanbul ignore next */
    cov_2g4v1val53().s[10]++;
    if (
    /* istanbul ignore next */
    (cov_2g4v1val53().b[1][0]++, !destinationId) ||
    /* istanbul ignore next */
    (cov_2g4v1val53().b[1][1]++, !title) ||
    /* istanbul ignore next */
    (cov_2g4v1val53().b[1][2]++, !content) ||
    /* istanbul ignore next */
    (cov_2g4v1val53().b[1][3]++, !rating)) {
      /* istanbul ignore next */
      cov_2g4v1val53().b[0][0]++;
      cov_2g4v1val53().s[11]++;
      throw new ValidationError('Missing required review information');
    } else
    /* istanbul ignore next */
    {
      cov_2g4v1val53().b[0][1]++;
    }

    // Check if destination exists
    const destination =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[12]++, await Destination.findById(destinationId));
    /* istanbul ignore next */
    cov_2g4v1val53().s[13]++;
    if (!destination) {
      /* istanbul ignore next */
      cov_2g4v1val53().b[2][0]++;
      cov_2g4v1val53().s[14]++;
      throw new NotFoundError('Destination not found');
    } else
    /* istanbul ignore next */
    {
      cov_2g4v1val53().b[2][1]++;
    }

    // Check if user already reviewed this destination
    const existingReview =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[15]++, await Review.findOne({
      user: userId,
      destination: destinationId
    }));
    /* istanbul ignore next */
    cov_2g4v1val53().s[16]++;
    if (existingReview) {
      /* istanbul ignore next */
      cov_2g4v1val53().b[3][0]++;
      cov_2g4v1val53().s[17]++;
      throw new ConflictError('You have already reviewed this destination');
    } else
    /* istanbul ignore next */
    {
      cov_2g4v1val53().b[3][1]++;
    }

    // If bookingId is provided, verify the booking belongs to the user
    cov_2g4v1val53().s[18]++;
    if (bookingId) {
      /* istanbul ignore next */
      cov_2g4v1val53().b[4][0]++;
      const booking =
      /* istanbul ignore next */
      (cov_2g4v1val53().s[19]++, await Booking.findOne({
        _id: bookingId,
        user: userId,
        destination: destinationId
      }));
      /* istanbul ignore next */
      cov_2g4v1val53().s[20]++;
      if (!booking) {
        /* istanbul ignore next */
        cov_2g4v1val53().b[5][0]++;
        cov_2g4v1val53().s[21]++;
        throw new ValidationError('Invalid booking reference');
      } else
      /* istanbul ignore next */
      {
        cov_2g4v1val53().b[5][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2g4v1val53().b[4][1]++;
    }

    // Create review
    const review =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[22]++, new Review({
      user: userId,
      destination: destinationId,
      booking: bookingId,
      title,
      content,
      rating,
      ratings
    }));
    /* istanbul ignore next */
    cov_2g4v1val53().s[23]++;
    await review.save();

    // Populate the review with user details
    /* istanbul ignore next */
    cov_2g4v1val53().s[24]++;
    await review.populate('user', 'name email');
    /* istanbul ignore next */
    cov_2g4v1val53().s[25]++;
    info('New review created', {
      reviewId: review._id,
      userId,
      destinationId,
      rating
    });
    /* istanbul ignore next */
    cov_2g4v1val53().s[26]++;
    res.status(201).json(successResponse({
      review
    }, 'Review created successfully'));
  } catch (err) {
    /* istanbul ignore next */
    cov_2g4v1val53().s[27]++;
    error('Error creating review', {
      error: err.message,
      userId: req.user?.id
    });
    /* istanbul ignore next */
    cov_2g4v1val53().s[28]++;
    next(err);
  }
};

// Get reviews for a destination
/* istanbul ignore next */
cov_2g4v1val53().s[29]++;
const getDestinationReviews = async (req, res, next) => {
  /* istanbul ignore next */
  cov_2g4v1val53().f[1]++;
  cov_2g4v1val53().s[30]++;
  try {
    const {
      destinationId
    } =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[31]++, req.params);
    const {
      page =
      /* istanbul ignore next */
      (cov_2g4v1val53().b[6][0]++, 1),
      limit =
      /* istanbul ignore next */
      (cov_2g4v1val53().b[7][0]++, 10),
      sort =
      /* istanbul ignore next */
      (cov_2g4v1val53().b[8][0]++, 'newest')
    } =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[32]++, req.query);

    // Check if destination exists
    const destination =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[33]++, await Destination.findById(destinationId));
    /* istanbul ignore next */
    cov_2g4v1val53().s[34]++;
    if (!destination) {
      /* istanbul ignore next */
      cov_2g4v1val53().b[9][0]++;
      cov_2g4v1val53().s[35]++;
      throw new NotFoundError('Destination not found');
    } else
    /* istanbul ignore next */
    {
      cov_2g4v1val53().b[9][1]++;
    }

    // Build sort object
    let sortObj =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[36]++, {});
    /* istanbul ignore next */
    cov_2g4v1val53().s[37]++;
    switch (sort) {
      case 'newest':
        /* istanbul ignore next */
        cov_2g4v1val53().b[10][0]++;
        cov_2g4v1val53().s[38]++;
        sortObj = {
          createdAt: -1
        };
        /* istanbul ignore next */
        cov_2g4v1val53().s[39]++;
        break;
      case 'oldest':
        /* istanbul ignore next */
        cov_2g4v1val53().b[10][1]++;
        cov_2g4v1val53().s[40]++;
        sortObj = {
          createdAt: 1
        };
        /* istanbul ignore next */
        cov_2g4v1val53().s[41]++;
        break;
      case 'highest':
        /* istanbul ignore next */
        cov_2g4v1val53().b[10][2]++;
        cov_2g4v1val53().s[42]++;
        sortObj = {
          rating: -1
        };
        /* istanbul ignore next */
        cov_2g4v1val53().s[43]++;
        break;
      case 'lowest':
        /* istanbul ignore next */
        cov_2g4v1val53().b[10][3]++;
        cov_2g4v1val53().s[44]++;
        sortObj = {
          rating: 1
        };
        /* istanbul ignore next */
        cov_2g4v1val53().s[45]++;
        break;
      case 'most_helpful':
        /* istanbul ignore next */
        cov_2g4v1val53().b[10][4]++;
        cov_2g4v1val53().s[46]++;
        sortObj = {
          helpfulVotes: -1
        };
        /* istanbul ignore next */
        cov_2g4v1val53().s[47]++;
        break;
      default:
        /* istanbul ignore next */
        cov_2g4v1val53().b[10][5]++;
        cov_2g4v1val53().s[48]++;
        sortObj = {
          createdAt: -1
        };
    }

    // Calculate pagination
    const skip =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[49]++, (parseInt(page, 10) - 1) * parseInt(limit, 10));

    // Get reviews with pagination
    const reviews =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[50]++, await Review.find({
      destination: destinationId,
      status: 'approved'
    }).populate('user', 'name email').sort(sortObj).skip(skip).limit(parseInt(limit, 10)));

    // Get total count
    const total =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[51]++, await Review.countDocuments({
      destination: destinationId,
      status: 'approved'
    }));

    // Get rating statistics
    const stats =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[52]++, await Review.aggregate([{
      $match: {
        destination: destinationId,
        status: 'approved'
      }
    }, {
      $group: {
        _id: null,
        averageRating: {
          $avg: '$rating'
        },
        totalReviews: {
          $sum: 1
        },
        ratingDistribution: {
          $push: '$rating'
        }
      }
    }]));
    let ratingStats =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[53]++, {
      averageRating: 0,
      totalReviews: 0,
      distribution: {
        5: 0,
        4: 0,
        3: 0,
        2: 0,
        1: 0
      }
    });
    /* istanbul ignore next */
    cov_2g4v1val53().s[54]++;
    if (stats.length > 0) {
      /* istanbul ignore next */
      cov_2g4v1val53().b[11][0]++;
      const stat =
      /* istanbul ignore next */
      (cov_2g4v1val53().s[55]++, stats[0]);
      /* istanbul ignore next */
      cov_2g4v1val53().s[56]++;
      ratingStats.averageRating = Math.round(stat.averageRating * 10) / 10;
      /* istanbul ignore next */
      cov_2g4v1val53().s[57]++;
      ratingStats.totalReviews = stat.totalReviews;

      // Calculate distribution
      /* istanbul ignore next */
      cov_2g4v1val53().s[58]++;
      stat.ratingDistribution.forEach(rating => {
        /* istanbul ignore next */
        cov_2g4v1val53().f[2]++;
        cov_2g4v1val53().s[59]++;
        ratingStats.distribution[rating]++;
      });
    } else
    /* istanbul ignore next */
    {
      cov_2g4v1val53().b[11][1]++;
    }
    cov_2g4v1val53().s[60]++;
    res.json(successResponse({
      reviews,
      ratingStats,
      pagination: {
        current: parseInt(page, 10),
        pages: Math.ceil(total / parseInt(limit, 10)),
        total
      }
    }, 'Reviews retrieved successfully'));
  } catch (err) {
    /* istanbul ignore next */
    cov_2g4v1val53().s[61]++;
    error('Error fetching reviews', {
      error: err.message,
      destinationId: req.params.destinationId
    });
    /* istanbul ignore next */
    cov_2g4v1val53().s[62]++;
    next(err);
  }
};

// Get user's reviews
/* istanbul ignore next */
cov_2g4v1val53().s[63]++;
const getUserReviews = async (req, res, next) => {
  /* istanbul ignore next */
  cov_2g4v1val53().f[3]++;
  cov_2g4v1val53().s[64]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[65]++, req.user.id);
    const {
      page =
      /* istanbul ignore next */
      (cov_2g4v1val53().b[12][0]++, 1),
      limit =
      /* istanbul ignore next */
      (cov_2g4v1val53().b[13][0]++, 10)
    } =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[66]++, req.query);

    // Calculate pagination
    const skip =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[67]++, (parseInt(page, 10) - 1) * parseInt(limit, 10));

    // Get user's reviews
    const reviews =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[68]++, await Review.find({
      user: userId
    }).populate('destination', 'title location imageUrl').sort({
      createdAt: -1
    }).skip(skip).limit(parseInt(limit, 10)));

    // Get total count
    const total =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[69]++, await Review.countDocuments({
      user: userId
    }));
    /* istanbul ignore next */
    cov_2g4v1val53().s[70]++;
    res.json(successResponse({
      reviews,
      pagination: {
        current: parseInt(page, 10),
        pages: Math.ceil(total / parseInt(limit, 10)),
        total
      }
    }, 'User reviews retrieved successfully'));
  } catch (err) {
    /* istanbul ignore next */
    cov_2g4v1val53().s[71]++;
    error('Error fetching user reviews', {
      error: err.message,
      userId: req.user?.id
    });
    /* istanbul ignore next */
    cov_2g4v1val53().s[72]++;
    next(err);
  }
};

// Update a review
/* istanbul ignore next */
cov_2g4v1val53().s[73]++;
const updateReview = async (req, res, next) => {
  /* istanbul ignore next */
  cov_2g4v1val53().f[4]++;
  cov_2g4v1val53().s[74]++;
  try {
    const {
      reviewId
    } =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[75]++, req.params);
    const {
      title,
      content,
      rating,
      ratings
    } =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[76]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[77]++, req.user.id);
    const review =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[78]++, await Review.findById(reviewId));
    /* istanbul ignore next */
    cov_2g4v1val53().s[79]++;
    if (!review) {
      /* istanbul ignore next */
      cov_2g4v1val53().b[14][0]++;
      cov_2g4v1val53().s[80]++;
      throw new NotFoundError('Review not found');
    } else
    /* istanbul ignore next */
    {
      cov_2g4v1val53().b[14][1]++;
    }

    // Check if user owns this review
    cov_2g4v1val53().s[81]++;
    if (review.user.toString() !== userId) {
      /* istanbul ignore next */
      cov_2g4v1val53().b[15][0]++;
      cov_2g4v1val53().s[82]++;
      throw new ValidationError('Access denied');
    } else
    /* istanbul ignore next */
    {
      cov_2g4v1val53().b[15][1]++;
    }

    // Update review
    const updatedReview =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[83]++, await Review.findByIdAndUpdate(reviewId, {
      title,
      content,
      rating,
      ratings
    }, {
      new: true,
      runValidators: true
    }).populate('user', 'name email'));
    /* istanbul ignore next */
    cov_2g4v1val53().s[84]++;
    info('Review updated', {
      reviewId,
      userId
    });
    /* istanbul ignore next */
    cov_2g4v1val53().s[85]++;
    res.json(successResponse({
      review: updatedReview
    }, 'Review updated successfully'));
  } catch (err) {
    /* istanbul ignore next */
    cov_2g4v1val53().s[86]++;
    error('Error updating review', {
      error: err.message,
      reviewId: req.params.reviewId
    });
    /* istanbul ignore next */
    cov_2g4v1val53().s[87]++;
    next(err);
  }
};

// Delete a review
/* istanbul ignore next */
cov_2g4v1val53().s[88]++;
const deleteReview = async (req, res, next) => {
  /* istanbul ignore next */
  cov_2g4v1val53().f[5]++;
  cov_2g4v1val53().s[89]++;
  try {
    const {
      reviewId
    } =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[90]++, req.params);
    const userId =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[91]++, req.user.id);
    const review =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[92]++, await Review.findById(reviewId));
    /* istanbul ignore next */
    cov_2g4v1val53().s[93]++;
    if (!review) {
      /* istanbul ignore next */
      cov_2g4v1val53().b[16][0]++;
      cov_2g4v1val53().s[94]++;
      throw new NotFoundError('Review not found');
    } else
    /* istanbul ignore next */
    {
      cov_2g4v1val53().b[16][1]++;
    }

    // Check if user owns this review or is admin
    cov_2g4v1val53().s[95]++;
    if (
    /* istanbul ignore next */
    (cov_2g4v1val53().b[18][0]++, review.user.toString() !== userId) &&
    /* istanbul ignore next */
    (cov_2g4v1val53().b[18][1]++, req.user.role !== 'admin')) {
      /* istanbul ignore next */
      cov_2g4v1val53().b[17][0]++;
      cov_2g4v1val53().s[96]++;
      throw new ValidationError('Access denied');
    } else
    /* istanbul ignore next */
    {
      cov_2g4v1val53().b[17][1]++;
    }
    cov_2g4v1val53().s[97]++;
    await Review.findByIdAndDelete(reviewId);
    /* istanbul ignore next */
    cov_2g4v1val53().s[98]++;
    info('Review deleted', {
      reviewId,
      userId,
      deletedBy: req.user.role
    });
    /* istanbul ignore next */
    cov_2g4v1val53().s[99]++;
    res.json(successResponse(null, 'Review deleted successfully'));
  } catch (err) {
    /* istanbul ignore next */
    cov_2g4v1val53().s[100]++;
    error('Error deleting review', {
      error: err.message,
      reviewId: req.params.reviewId
    });
    /* istanbul ignore next */
    cov_2g4v1val53().s[101]++;
    next(err);
  }
};

// Mark review as helpful
/* istanbul ignore next */
cov_2g4v1val53().s[102]++;
const markReviewHelpful = async (req, res, next) => {
  /* istanbul ignore next */
  cov_2g4v1val53().f[6]++;
  cov_2g4v1val53().s[103]++;
  try {
    const {
      reviewId
    } =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[104]++, req.params);
    const userId =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[105]++, req.user.id);
    const review =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[106]++, await Review.findById(reviewId));
    /* istanbul ignore next */
    cov_2g4v1val53().s[107]++;
    if (!review) {
      /* istanbul ignore next */
      cov_2g4v1val53().b[19][0]++;
      cov_2g4v1val53().s[108]++;
      throw new NotFoundError('Review not found');
    } else
    /* istanbul ignore next */
    {
      cov_2g4v1val53().b[19][1]++;
    }

    // Check if user already marked this review as helpful
    const isAlreadyHelpful =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[109]++, review.helpfulUsers.includes(userId));
    /* istanbul ignore next */
    cov_2g4v1val53().s[110]++;
    if (isAlreadyHelpful) {
      /* istanbul ignore next */
      cov_2g4v1val53().b[20][0]++;
      cov_2g4v1val53().s[111]++;
      // Remove helpful vote
      review.helpfulUsers = review.helpfulUsers.filter(id => {
        /* istanbul ignore next */
        cov_2g4v1val53().f[7]++;
        cov_2g4v1val53().s[112]++;
        return id.toString() !== userId;
      });
      /* istanbul ignore next */
      cov_2g4v1val53().s[113]++;
      review.helpfulVotes = Math.max(0, review.helpfulVotes - 1);
    } else {
      /* istanbul ignore next */
      cov_2g4v1val53().b[20][1]++;
      cov_2g4v1val53().s[114]++;
      // Add helpful vote
      review.helpfulUsers.push(userId);
      /* istanbul ignore next */
      cov_2g4v1val53().s[115]++;
      review.helpfulVotes += 1;
    }
    /* istanbul ignore next */
    cov_2g4v1val53().s[116]++;
    await review.save();
    /* istanbul ignore next */
    cov_2g4v1val53().s[117]++;
    res.json(successResponse({
      helpful: !isAlreadyHelpful,
      helpfulVotes: review.helpfulVotes
    }, `Review ${isAlreadyHelpful ?
    /* istanbul ignore next */
    (cov_2g4v1val53().b[21][0]++, 'unmarked') :
    /* istanbul ignore next */
    (cov_2g4v1val53().b[21][1]++, 'marked')} as helpful`));
  } catch (err) {
    /* istanbul ignore next */
    cov_2g4v1val53().s[118]++;
    error('Error marking review helpful', {
      error: err.message,
      reviewId: req.params.reviewId
    });
    /* istanbul ignore next */
    cov_2g4v1val53().s[119]++;
    next(err);
  }
};

// Get all reviews (admin only)
/* istanbul ignore next */
cov_2g4v1val53().s[120]++;
const getAllReviews = async (req, res, next) => {
  /* istanbul ignore next */
  cov_2g4v1val53().f[8]++;
  cov_2g4v1val53().s[121]++;
  try {
    const {
      status,
      page =
      /* istanbul ignore next */
      (cov_2g4v1val53().b[22][0]++, 1),
      limit =
      /* istanbul ignore next */
      (cov_2g4v1val53().b[23][0]++, 20),
      destinationId
    } =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[122]++, req.query);

    // Build query
    const query =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[123]++, {});
    /* istanbul ignore next */
    cov_2g4v1val53().s[124]++;
    if (status) {
      /* istanbul ignore next */
      cov_2g4v1val53().b[24][0]++;
      cov_2g4v1val53().s[125]++;
      query.status = status;
    } else
    /* istanbul ignore next */
    {
      cov_2g4v1val53().b[24][1]++;
    }
    cov_2g4v1val53().s[126]++;
    if (destinationId) {
      /* istanbul ignore next */
      cov_2g4v1val53().b[25][0]++;
      cov_2g4v1val53().s[127]++;
      query.destination = destinationId;
    } else
    /* istanbul ignore next */
    {
      cov_2g4v1val53().b[25][1]++;
    }

    // Calculate pagination
    const skip =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[128]++, (parseInt(page, 10) - 1) * parseInt(limit, 10));

    // Get reviews with pagination
    const reviews =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[129]++, await Review.find(query).populate('destination', 'title location').populate('user', 'name email').sort({
      createdAt: -1
    }).skip(skip).limit(parseInt(limit, 10)));

    // Get total count
    const total =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[130]++, await Review.countDocuments(query));
    /* istanbul ignore next */
    cov_2g4v1val53().s[131]++;
    res.json(successResponse({
      reviews,
      pagination: {
        current: parseInt(page, 10),
        pages: Math.ceil(total / parseInt(limit, 10)),
        total
      }
    }, 'All reviews retrieved successfully'));
  } catch (err) {
    /* istanbul ignore next */
    cov_2g4v1val53().s[132]++;
    error('Error fetching all reviews', {
      error: err.message
    });
    /* istanbul ignore next */
    cov_2g4v1val53().s[133]++;
    next(err);
  }
};

// Update review status (admin only)
/* istanbul ignore next */
cov_2g4v1val53().s[134]++;
const updateReviewStatus = async (req, res, next) => {
  /* istanbul ignore next */
  cov_2g4v1val53().f[9]++;
  cov_2g4v1val53().s[135]++;
  try {
    const {
      reviewId
    } =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[136]++, req.params);
    const {
      status,
      adminResponse
    } =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[137]++, req.body);
    const validStatuses =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[138]++, ['pending', 'approved', 'rejected']);
    /* istanbul ignore next */
    cov_2g4v1val53().s[139]++;
    if (!validStatuses.includes(status)) {
      /* istanbul ignore next */
      cov_2g4v1val53().b[26][0]++;
      cov_2g4v1val53().s[140]++;
      throw new ValidationError('Invalid review status');
    } else
    /* istanbul ignore next */
    {
      cov_2g4v1val53().b[26][1]++;
    }
    const review =
    /* istanbul ignore next */
    (cov_2g4v1val53().s[141]++, await Review.findById(reviewId));
    /* istanbul ignore next */
    cov_2g4v1val53().s[142]++;
    if (!review) {
      /* istanbul ignore next */
      cov_2g4v1val53().b[27][0]++;
      cov_2g4v1val53().s[143]++;
      throw new NotFoundError('Review not found');
    } else
    /* istanbul ignore next */
    {
      cov_2g4v1val53().b[27][1]++;
    }

    // Update review status
    cov_2g4v1val53().s[144]++;
    review.status = status;

    // Add admin response if provided
    /* istanbul ignore next */
    cov_2g4v1val53().s[145]++;
    if (adminResponse) {
      /* istanbul ignore next */
      cov_2g4v1val53().b[28][0]++;
      cov_2g4v1val53().s[146]++;
      review.adminResponse = {
        content: adminResponse,
        respondedBy: req.user.id,
        respondedAt: new Date()
      };
    } else
    /* istanbul ignore next */
    {
      cov_2g4v1val53().b[28][1]++;
    }
    cov_2g4v1val53().s[147]++;
    await review.save();

    // Populate the review
    /* istanbul ignore next */
    cov_2g4v1val53().s[148]++;
    await review.populate([{
      path: 'user',
      select: 'name email'
    }, {
      path: 'destination',
      select: 'title location'
    }]);
    /* istanbul ignore next */
    cov_2g4v1val53().s[149]++;
    info('Review status updated', {
      reviewId,
      newStatus: status,
      adminId: req.user.id
    });
    /* istanbul ignore next */
    cov_2g4v1val53().s[150]++;
    res.json(successResponse({
      review
    }, 'Review status updated successfully'));
  } catch (err) {
    /* istanbul ignore next */
    cov_2g4v1val53().s[151]++;
    error('Error updating review status', {
      error: err.message,
      reviewId: req.params.reviewId
    });
    /* istanbul ignore next */
    cov_2g4v1val53().s[152]++;
    next(err);
  }
};
/* istanbul ignore next */
cov_2g4v1val53().s[153]++;
module.exports = {
  createReview,
  getDestinationReviews,
  getUserReviews,
  updateReview,
  deleteReview,
  markReviewHelpful,
  getAllReviews,
  updateReviewStatus
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmc0djF2YWw1MyIsImFjdHVhbENvdmVyYWdlIiwiUmV2aWV3IiwicyIsInJlcXVpcmUiLCJEZXN0aW5hdGlvbiIsIkJvb2tpbmciLCJWYWxpZGF0aW9uRXJyb3IiLCJOb3RGb3VuZEVycm9yIiwiQ29uZmxpY3RFcnJvciIsInN1Y2Nlc3NSZXNwb25zZSIsImluZm8iLCJlcnJvciIsImNyZWF0ZVJldmlldyIsInJlcSIsInJlcyIsIm5leHQiLCJmIiwiZGVzdGluYXRpb25JZCIsImJvb2tpbmdJZCIsInRpdGxlIiwiY29udGVudCIsInJhdGluZyIsInJhdGluZ3MiLCJib2R5IiwidXNlcklkIiwidXNlciIsImlkIiwiYiIsImRlc3RpbmF0aW9uIiwiZmluZEJ5SWQiLCJleGlzdGluZ1JldmlldyIsImZpbmRPbmUiLCJib29raW5nIiwiX2lkIiwicmV2aWV3Iiwic2F2ZSIsInBvcHVsYXRlIiwicmV2aWV3SWQiLCJzdGF0dXMiLCJqc29uIiwiZXJyIiwibWVzc2FnZSIsImdldERlc3RpbmF0aW9uUmV2aWV3cyIsInBhcmFtcyIsInBhZ2UiLCJsaW1pdCIsInNvcnQiLCJxdWVyeSIsInNvcnRPYmoiLCJjcmVhdGVkQXQiLCJoZWxwZnVsVm90ZXMiLCJza2lwIiwicGFyc2VJbnQiLCJyZXZpZXdzIiwiZmluZCIsInRvdGFsIiwiY291bnREb2N1bWVudHMiLCJzdGF0cyIsImFnZ3JlZ2F0ZSIsIiRtYXRjaCIsIiRncm91cCIsImF2ZXJhZ2VSYXRpbmciLCIkYXZnIiwidG90YWxSZXZpZXdzIiwiJHN1bSIsInJhdGluZ0Rpc3RyaWJ1dGlvbiIsIiRwdXNoIiwicmF0aW5nU3RhdHMiLCJkaXN0cmlidXRpb24iLCJsZW5ndGgiLCJzdGF0IiwiTWF0aCIsInJvdW5kIiwiZm9yRWFjaCIsInBhZ2luYXRpb24iLCJjdXJyZW50IiwicGFnZXMiLCJjZWlsIiwiZ2V0VXNlclJldmlld3MiLCJ1cGRhdGVSZXZpZXciLCJ0b1N0cmluZyIsInVwZGF0ZWRSZXZpZXciLCJmaW5kQnlJZEFuZFVwZGF0ZSIsIm5ldyIsInJ1blZhbGlkYXRvcnMiLCJkZWxldGVSZXZpZXciLCJyb2xlIiwiZmluZEJ5SWRBbmREZWxldGUiLCJkZWxldGVkQnkiLCJtYXJrUmV2aWV3SGVscGZ1bCIsImlzQWxyZWFkeUhlbHBmdWwiLCJoZWxwZnVsVXNlcnMiLCJpbmNsdWRlcyIsImZpbHRlciIsIm1heCIsInB1c2giLCJoZWxwZnVsIiwiZ2V0QWxsUmV2aWV3cyIsInVwZGF0ZVJldmlld1N0YXR1cyIsImFkbWluUmVzcG9uc2UiLCJ2YWxpZFN0YXR1c2VzIiwicmVzcG9uZGVkQnkiLCJyZXNwb25kZWRBdCIsIkRhdGUiLCJwYXRoIiwic2VsZWN0IiwibmV3U3RhdHVzIiwiYWRtaW5JZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJyZXZpZXcuY29udHJvbGxlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBSZXZpZXcgPSByZXF1aXJlKCcuLi9tb2RlbHMvcmV2aWV3Lm1vZGVsJyk7XG5jb25zdCBEZXN0aW5hdGlvbiA9IHJlcXVpcmUoJy4uL21vZGVscy9kZXN0aW5hdGlvbi5tb2RlbCcpO1xuY29uc3QgQm9va2luZyA9IHJlcXVpcmUoJy4uL21vZGVscy9ib29raW5nLm1vZGVsJyk7XG5jb25zdCB7IFZhbGlkYXRpb25FcnJvciwgTm90Rm91bmRFcnJvciwgQ29uZmxpY3RFcnJvciB9ID0gcmVxdWlyZSgnLi4vdXRpbHMvZXJyb3JzJyk7XG5jb25zdCB7IHN1Y2Nlc3NSZXNwb25zZSB9ID0gcmVxdWlyZSgnLi4vdXRpbHMvcmVzcG9uc2UnKTtcbmNvbnN0IHsgaW5mbywgZXJyb3IgfSA9IHJlcXVpcmUoJy4uL3V0aWxzL2xvZ2dlcicpO1xuXG4vLyBDcmVhdGUgYSBuZXcgcmV2aWV3XG5jb25zdCBjcmVhdGVSZXZpZXcgPSBhc3luYyhyZXEsIHJlcywgbmV4dCkgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHtcbiAgICAgIGRlc3RpbmF0aW9uSWQsXG4gICAgICBib29raW5nSWQsXG4gICAgICB0aXRsZSxcbiAgICAgIGNvbnRlbnQsXG4gICAgICByYXRpbmcsXG4gICAgICByYXRpbmdzXG4gICAgfSA9IHJlcS5ib2R5O1xuXG4gICAgY29uc3QgdXNlcklkID0gcmVxLnVzZXIuaWQ7XG5cbiAgICAvLyBWYWxpZGF0ZSByZXF1aXJlZCBmaWVsZHNcbiAgICBpZiAoIWRlc3RpbmF0aW9uSWQgfHwgIXRpdGxlIHx8ICFjb250ZW50IHx8ICFyYXRpbmcpIHtcbiAgICAgIHRocm93IG5ldyBWYWxpZGF0aW9uRXJyb3IoJ01pc3NpbmcgcmVxdWlyZWQgcmV2aWV3IGluZm9ybWF0aW9uJyk7XG4gICAgfVxuXG4gICAgLy8gQ2hlY2sgaWYgZGVzdGluYXRpb24gZXhpc3RzXG4gICAgY29uc3QgZGVzdGluYXRpb24gPSBhd2FpdCBEZXN0aW5hdGlvbi5maW5kQnlJZChkZXN0aW5hdGlvbklkKTtcbiAgICBpZiAoIWRlc3RpbmF0aW9uKSB7XG4gICAgICB0aHJvdyBuZXcgTm90Rm91bmRFcnJvcignRGVzdGluYXRpb24gbm90IGZvdW5kJyk7XG4gICAgfVxuXG4gICAgLy8gQ2hlY2sgaWYgdXNlciBhbHJlYWR5IHJldmlld2VkIHRoaXMgZGVzdGluYXRpb25cbiAgICBjb25zdCBleGlzdGluZ1JldmlldyA9IGF3YWl0IFJldmlldy5maW5kT25lKHtcbiAgICAgIHVzZXI6IHVzZXJJZCxcbiAgICAgIGRlc3RpbmF0aW9uOiBkZXN0aW5hdGlvbklkXG4gICAgfSk7XG5cbiAgICBpZiAoZXhpc3RpbmdSZXZpZXcpIHtcbiAgICAgIHRocm93IG5ldyBDb25mbGljdEVycm9yKCdZb3UgaGF2ZSBhbHJlYWR5IHJldmlld2VkIHRoaXMgZGVzdGluYXRpb24nKTtcbiAgICB9XG5cbiAgICAvLyBJZiBib29raW5nSWQgaXMgcHJvdmlkZWQsIHZlcmlmeSB0aGUgYm9va2luZyBiZWxvbmdzIHRvIHRoZSB1c2VyXG4gICAgaWYgKGJvb2tpbmdJZCkge1xuICAgICAgY29uc3QgYm9va2luZyA9IGF3YWl0IEJvb2tpbmcuZmluZE9uZSh7XG4gICAgICAgIF9pZDogYm9va2luZ0lkLFxuICAgICAgICB1c2VyOiB1c2VySWQsXG4gICAgICAgIGRlc3RpbmF0aW9uOiBkZXN0aW5hdGlvbklkXG4gICAgICB9KTtcblxuICAgICAgaWYgKCFib29raW5nKSB7XG4gICAgICAgIHRocm93IG5ldyBWYWxpZGF0aW9uRXJyb3IoJ0ludmFsaWQgYm9va2luZyByZWZlcmVuY2UnKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBDcmVhdGUgcmV2aWV3XG4gICAgY29uc3QgcmV2aWV3ID0gbmV3IFJldmlldyh7XG4gICAgICB1c2VyOiB1c2VySWQsXG4gICAgICBkZXN0aW5hdGlvbjogZGVzdGluYXRpb25JZCxcbiAgICAgIGJvb2tpbmc6IGJvb2tpbmdJZCxcbiAgICAgIHRpdGxlLFxuICAgICAgY29udGVudCxcbiAgICAgIHJhdGluZyxcbiAgICAgIHJhdGluZ3NcbiAgICB9KTtcblxuICAgIGF3YWl0IHJldmlldy5zYXZlKCk7XG5cbiAgICAvLyBQb3B1bGF0ZSB0aGUgcmV2aWV3IHdpdGggdXNlciBkZXRhaWxzXG4gICAgYXdhaXQgcmV2aWV3LnBvcHVsYXRlKCd1c2VyJywgJ25hbWUgZW1haWwnKTtcblxuICAgIGluZm8oJ05ldyByZXZpZXcgY3JlYXRlZCcsIHtcbiAgICAgIHJldmlld0lkOiByZXZpZXcuX2lkLFxuICAgICAgdXNlcklkLFxuICAgICAgZGVzdGluYXRpb25JZCxcbiAgICAgIHJhdGluZ1xuICAgIH0pO1xuXG4gICAgcmVzLnN0YXR1cygyMDEpLmpzb24oXG4gICAgICBzdWNjZXNzUmVzcG9uc2UoXG4gICAgICAgIHsgcmV2aWV3IH0sXG4gICAgICAgICdSZXZpZXcgY3JlYXRlZCBzdWNjZXNzZnVsbHknXG4gICAgICApXG4gICAgKTtcblxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBlcnJvcignRXJyb3IgY3JlYXRpbmcgcmV2aWV3JywgeyBlcnJvcjogZXJyLm1lc3NhZ2UsIHVzZXJJZDogcmVxLnVzZXI/LmlkIH0pO1xuICAgIG5leHQoZXJyKTtcbiAgfVxufTtcblxuLy8gR2V0IHJldmlld3MgZm9yIGEgZGVzdGluYXRpb25cbmNvbnN0IGdldERlc3RpbmF0aW9uUmV2aWV3cyA9IGFzeW5jKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBkZXN0aW5hdGlvbklkIH0gPSByZXEucGFyYW1zO1xuICAgIGNvbnN0IHsgcGFnZSA9IDEsIGxpbWl0ID0gMTAsIHNvcnQgPSAnbmV3ZXN0JyB9ID0gcmVxLnF1ZXJ5O1xuXG4gICAgLy8gQ2hlY2sgaWYgZGVzdGluYXRpb24gZXhpc3RzXG4gICAgY29uc3QgZGVzdGluYXRpb24gPSBhd2FpdCBEZXN0aW5hdGlvbi5maW5kQnlJZChkZXN0aW5hdGlvbklkKTtcbiAgICBpZiAoIWRlc3RpbmF0aW9uKSB7XG4gICAgICB0aHJvdyBuZXcgTm90Rm91bmRFcnJvcignRGVzdGluYXRpb24gbm90IGZvdW5kJyk7XG4gICAgfVxuXG4gICAgLy8gQnVpbGQgc29ydCBvYmplY3RcbiAgICBsZXQgc29ydE9iaiA9IHt9O1xuICAgIHN3aXRjaCAoc29ydCkge1xuICAgIGNhc2UgJ25ld2VzdCc6XG4gICAgICBzb3J0T2JqID0geyBjcmVhdGVkQXQ6IC0xIH07XG4gICAgICBicmVhaztcbiAgICBjYXNlICdvbGRlc3QnOlxuICAgICAgc29ydE9iaiA9IHsgY3JlYXRlZEF0OiAxIH07XG4gICAgICBicmVhaztcbiAgICBjYXNlICdoaWdoZXN0JzpcbiAgICAgIHNvcnRPYmogPSB7IHJhdGluZzogLTEgfTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ2xvd2VzdCc6XG4gICAgICBzb3J0T2JqID0geyByYXRpbmc6IDEgfTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ21vc3RfaGVscGZ1bCc6XG4gICAgICBzb3J0T2JqID0geyBoZWxwZnVsVm90ZXM6IC0xIH07XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgc29ydE9iaiA9IHsgY3JlYXRlZEF0OiAtMSB9O1xuICAgIH1cblxuICAgIC8vIENhbGN1bGF0ZSBwYWdpbmF0aW9uXG4gICAgY29uc3Qgc2tpcCA9IChwYXJzZUludChwYWdlLCAxMCkgLSAxKSAqIHBhcnNlSW50KGxpbWl0LCAxMCk7XG5cbiAgICAvLyBHZXQgcmV2aWV3cyB3aXRoIHBhZ2luYXRpb25cbiAgICBjb25zdCByZXZpZXdzID0gYXdhaXQgUmV2aWV3LmZpbmQoe1xuICAgICAgZGVzdGluYXRpb246IGRlc3RpbmF0aW9uSWQsXG4gICAgICBzdGF0dXM6ICdhcHByb3ZlZCdcbiAgICB9KVxuICAgICAgLnBvcHVsYXRlKCd1c2VyJywgJ25hbWUgZW1haWwnKVxuICAgICAgLnNvcnQoc29ydE9iailcbiAgICAgIC5za2lwKHNraXApXG4gICAgICAubGltaXQocGFyc2VJbnQobGltaXQsIDEwKSk7XG5cbiAgICAvLyBHZXQgdG90YWwgY291bnRcbiAgICBjb25zdCB0b3RhbCA9IGF3YWl0IFJldmlldy5jb3VudERvY3VtZW50cyh7XG4gICAgICBkZXN0aW5hdGlvbjogZGVzdGluYXRpb25JZCxcbiAgICAgIHN0YXR1czogJ2FwcHJvdmVkJ1xuICAgIH0pO1xuXG4gICAgLy8gR2V0IHJhdGluZyBzdGF0aXN0aWNzXG4gICAgY29uc3Qgc3RhdHMgPSBhd2FpdCBSZXZpZXcuYWdncmVnYXRlKFtcbiAgICAgIHtcbiAgICAgICAgJG1hdGNoOiB7XG4gICAgICAgICAgZGVzdGluYXRpb246IGRlc3RpbmF0aW9uSWQsXG4gICAgICAgICAgc3RhdHVzOiAnYXBwcm92ZWQnXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICRncm91cDoge1xuICAgICAgICAgIF9pZDogbnVsbCxcbiAgICAgICAgICBhdmVyYWdlUmF0aW5nOiB7ICRhdmc6ICckcmF0aW5nJyB9LFxuICAgICAgICAgIHRvdGFsUmV2aWV3czogeyAkc3VtOiAxIH0sXG4gICAgICAgICAgcmF0aW5nRGlzdHJpYnV0aW9uOiB7XG4gICAgICAgICAgICAkcHVzaDogJyRyYXRpbmcnXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgXSk7XG5cbiAgICBsZXQgcmF0aW5nU3RhdHMgPSB7XG4gICAgICBhdmVyYWdlUmF0aW5nOiAwLFxuICAgICAgdG90YWxSZXZpZXdzOiAwLFxuICAgICAgZGlzdHJpYnV0aW9uOiB7IDU6IDAsIDQ6IDAsIDM6IDAsIDI6IDAsIDE6IDAgfVxuICAgIH07XG5cbiAgICBpZiAoc3RhdHMubGVuZ3RoID4gMCkge1xuICAgICAgY29uc3Qgc3RhdCA9IHN0YXRzWzBdO1xuICAgICAgcmF0aW5nU3RhdHMuYXZlcmFnZVJhdGluZyA9IE1hdGgucm91bmQoc3RhdC5hdmVyYWdlUmF0aW5nICogMTApIC8gMTA7XG4gICAgICByYXRpbmdTdGF0cy50b3RhbFJldmlld3MgPSBzdGF0LnRvdGFsUmV2aWV3cztcblxuICAgICAgLy8gQ2FsY3VsYXRlIGRpc3RyaWJ1dGlvblxuICAgICAgc3RhdC5yYXRpbmdEaXN0cmlidXRpb24uZm9yRWFjaChyYXRpbmcgPT4ge1xuICAgICAgICByYXRpbmdTdGF0cy5kaXN0cmlidXRpb25bcmF0aW5nXSsrO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmVzLmpzb24oXG4gICAgICBzdWNjZXNzUmVzcG9uc2UoXG4gICAgICAgIHtcbiAgICAgICAgICByZXZpZXdzLFxuICAgICAgICAgIHJhdGluZ1N0YXRzLFxuICAgICAgICAgIHBhZ2luYXRpb246IHtcbiAgICAgICAgICAgIGN1cnJlbnQ6IHBhcnNlSW50KHBhZ2UsIDEwKSxcbiAgICAgICAgICAgIHBhZ2VzOiBNYXRoLmNlaWwodG90YWwgLyBwYXJzZUludChsaW1pdCwgMTApKSxcbiAgICAgICAgICAgIHRvdGFsXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICAnUmV2aWV3cyByZXRyaWV2ZWQgc3VjY2Vzc2Z1bGx5J1xuICAgICAgKVxuICAgICk7XG5cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgZXJyb3IoJ0Vycm9yIGZldGNoaW5nIHJldmlld3MnLCB7IGVycm9yOiBlcnIubWVzc2FnZSwgZGVzdGluYXRpb25JZDogcmVxLnBhcmFtcy5kZXN0aW5hdGlvbklkIH0pO1xuICAgIG5leHQoZXJyKTtcbiAgfVxufTtcblxuLy8gR2V0IHVzZXIncyByZXZpZXdzXG5jb25zdCBnZXRVc2VyUmV2aWV3cyA9IGFzeW5jKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgdXNlcklkID0gcmVxLnVzZXIuaWQ7XG4gICAgY29uc3QgeyBwYWdlID0gMSwgbGltaXQgPSAxMCB9ID0gcmVxLnF1ZXJ5O1xuXG4gICAgLy8gQ2FsY3VsYXRlIHBhZ2luYXRpb25cbiAgICBjb25zdCBza2lwID0gKHBhcnNlSW50KHBhZ2UsIDEwKSAtIDEpICogcGFyc2VJbnQobGltaXQsIDEwKTtcblxuICAgIC8vIEdldCB1c2VyJ3MgcmV2aWV3c1xuICAgIGNvbnN0IHJldmlld3MgPSBhd2FpdCBSZXZpZXcuZmluZCh7IHVzZXI6IHVzZXJJZCB9KVxuICAgICAgLnBvcHVsYXRlKCdkZXN0aW5hdGlvbicsICd0aXRsZSBsb2NhdGlvbiBpbWFnZVVybCcpXG4gICAgICAuc29ydCh7IGNyZWF0ZWRBdDogLTEgfSlcbiAgICAgIC5za2lwKHNraXApXG4gICAgICAubGltaXQocGFyc2VJbnQobGltaXQsIDEwKSk7XG5cbiAgICAvLyBHZXQgdG90YWwgY291bnRcbiAgICBjb25zdCB0b3RhbCA9IGF3YWl0IFJldmlldy5jb3VudERvY3VtZW50cyh7IHVzZXI6IHVzZXJJZCB9KTtcblxuICAgIHJlcy5qc29uKFxuICAgICAgc3VjY2Vzc1Jlc3BvbnNlKFxuICAgICAgICB7XG4gICAgICAgICAgcmV2aWV3cyxcbiAgICAgICAgICBwYWdpbmF0aW9uOiB7XG4gICAgICAgICAgICBjdXJyZW50OiBwYXJzZUludChwYWdlLCAxMCksXG4gICAgICAgICAgICBwYWdlczogTWF0aC5jZWlsKHRvdGFsIC8gcGFyc2VJbnQobGltaXQsIDEwKSksXG4gICAgICAgICAgICB0b3RhbFxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgJ1VzZXIgcmV2aWV3cyByZXRyaWV2ZWQgc3VjY2Vzc2Z1bGx5J1xuICAgICAgKVxuICAgICk7XG5cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgZXJyb3IoJ0Vycm9yIGZldGNoaW5nIHVzZXIgcmV2aWV3cycsIHsgZXJyb3I6IGVyci5tZXNzYWdlLCB1c2VySWQ6IHJlcS51c2VyPy5pZCB9KTtcbiAgICBuZXh0KGVycik7XG4gIH1cbn07XG5cbi8vIFVwZGF0ZSBhIHJldmlld1xuY29uc3QgdXBkYXRlUmV2aWV3ID0gYXN5bmMocmVxLCByZXMsIG5leHQpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IHJldmlld0lkIH0gPSByZXEucGFyYW1zO1xuICAgIGNvbnN0IHsgdGl0bGUsIGNvbnRlbnQsIHJhdGluZywgcmF0aW5ncyB9ID0gcmVxLmJvZHk7XG4gICAgY29uc3QgdXNlcklkID0gcmVxLnVzZXIuaWQ7XG5cbiAgICBjb25zdCByZXZpZXcgPSBhd2FpdCBSZXZpZXcuZmluZEJ5SWQocmV2aWV3SWQpO1xuXG4gICAgaWYgKCFyZXZpZXcpIHtcbiAgICAgIHRocm93IG5ldyBOb3RGb3VuZEVycm9yKCdSZXZpZXcgbm90IGZvdW5kJyk7XG4gICAgfVxuXG4gICAgLy8gQ2hlY2sgaWYgdXNlciBvd25zIHRoaXMgcmV2aWV3XG4gICAgaWYgKHJldmlldy51c2VyLnRvU3RyaW5nKCkgIT09IHVzZXJJZCkge1xuICAgICAgdGhyb3cgbmV3IFZhbGlkYXRpb25FcnJvcignQWNjZXNzIGRlbmllZCcpO1xuICAgIH1cblxuICAgIC8vIFVwZGF0ZSByZXZpZXdcbiAgICBjb25zdCB1cGRhdGVkUmV2aWV3ID0gYXdhaXQgUmV2aWV3LmZpbmRCeUlkQW5kVXBkYXRlKFxuICAgICAgcmV2aWV3SWQsXG4gICAgICB7IHRpdGxlLCBjb250ZW50LCByYXRpbmcsIHJhdGluZ3MgfSxcbiAgICAgIHsgbmV3OiB0cnVlLCBydW5WYWxpZGF0b3JzOiB0cnVlIH1cbiAgICApLnBvcHVsYXRlKCd1c2VyJywgJ25hbWUgZW1haWwnKTtcblxuICAgIGluZm8oJ1JldmlldyB1cGRhdGVkJywge1xuICAgICAgcmV2aWV3SWQsXG4gICAgICB1c2VySWRcbiAgICB9KTtcblxuICAgIHJlcy5qc29uKFxuICAgICAgc3VjY2Vzc1Jlc3BvbnNlKFxuICAgICAgICB7IHJldmlldzogdXBkYXRlZFJldmlldyB9LFxuICAgICAgICAnUmV2aWV3IHVwZGF0ZWQgc3VjY2Vzc2Z1bGx5J1xuICAgICAgKVxuICAgICk7XG5cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgZXJyb3IoJ0Vycm9yIHVwZGF0aW5nIHJldmlldycsIHsgZXJyb3I6IGVyci5tZXNzYWdlLCByZXZpZXdJZDogcmVxLnBhcmFtcy5yZXZpZXdJZCB9KTtcbiAgICBuZXh0KGVycik7XG4gIH1cbn07XG5cbi8vIERlbGV0ZSBhIHJldmlld1xuY29uc3QgZGVsZXRlUmV2aWV3ID0gYXN5bmMocmVxLCByZXMsIG5leHQpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IHJldmlld0lkIH0gPSByZXEucGFyYW1zO1xuICAgIGNvbnN0IHVzZXJJZCA9IHJlcS51c2VyLmlkO1xuXG4gICAgY29uc3QgcmV2aWV3ID0gYXdhaXQgUmV2aWV3LmZpbmRCeUlkKHJldmlld0lkKTtcblxuICAgIGlmICghcmV2aWV3KSB7XG4gICAgICB0aHJvdyBuZXcgTm90Rm91bmRFcnJvcignUmV2aWV3IG5vdCBmb3VuZCcpO1xuICAgIH1cblxuICAgIC8vIENoZWNrIGlmIHVzZXIgb3ducyB0aGlzIHJldmlldyBvciBpcyBhZG1pblxuICAgIGlmIChyZXZpZXcudXNlci50b1N0cmluZygpICE9PSB1c2VySWQgJiYgcmVxLnVzZXIucm9sZSAhPT0gJ2FkbWluJykge1xuICAgICAgdGhyb3cgbmV3IFZhbGlkYXRpb25FcnJvcignQWNjZXNzIGRlbmllZCcpO1xuICAgIH1cblxuICAgIGF3YWl0IFJldmlldy5maW5kQnlJZEFuZERlbGV0ZShyZXZpZXdJZCk7XG5cbiAgICBpbmZvKCdSZXZpZXcgZGVsZXRlZCcsIHtcbiAgICAgIHJldmlld0lkLFxuICAgICAgdXNlcklkLFxuICAgICAgZGVsZXRlZEJ5OiByZXEudXNlci5yb2xlXG4gICAgfSk7XG5cbiAgICByZXMuanNvbihcbiAgICAgIHN1Y2Nlc3NSZXNwb25zZShcbiAgICAgICAgbnVsbCxcbiAgICAgICAgJ1JldmlldyBkZWxldGVkIHN1Y2Nlc3NmdWxseSdcbiAgICAgIClcbiAgICApO1xuXG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGVycm9yKCdFcnJvciBkZWxldGluZyByZXZpZXcnLCB7IGVycm9yOiBlcnIubWVzc2FnZSwgcmV2aWV3SWQ6IHJlcS5wYXJhbXMucmV2aWV3SWQgfSk7XG4gICAgbmV4dChlcnIpO1xuICB9XG59O1xuXG4vLyBNYXJrIHJldmlldyBhcyBoZWxwZnVsXG5jb25zdCBtYXJrUmV2aWV3SGVscGZ1bCA9IGFzeW5jKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyByZXZpZXdJZCB9ID0gcmVxLnBhcmFtcztcbiAgICBjb25zdCB1c2VySWQgPSByZXEudXNlci5pZDtcblxuICAgIGNvbnN0IHJldmlldyA9IGF3YWl0IFJldmlldy5maW5kQnlJZChyZXZpZXdJZCk7XG5cbiAgICBpZiAoIXJldmlldykge1xuICAgICAgdGhyb3cgbmV3IE5vdEZvdW5kRXJyb3IoJ1JldmlldyBub3QgZm91bmQnKTtcbiAgICB9XG5cbiAgICAvLyBDaGVjayBpZiB1c2VyIGFscmVhZHkgbWFya2VkIHRoaXMgcmV2aWV3IGFzIGhlbHBmdWxcbiAgICBjb25zdCBpc0FscmVhZHlIZWxwZnVsID0gcmV2aWV3LmhlbHBmdWxVc2Vycy5pbmNsdWRlcyh1c2VySWQpO1xuXG4gICAgaWYgKGlzQWxyZWFkeUhlbHBmdWwpIHtcbiAgICAgIC8vIFJlbW92ZSBoZWxwZnVsIHZvdGVcbiAgICAgIHJldmlldy5oZWxwZnVsVXNlcnMgPSByZXZpZXcuaGVscGZ1bFVzZXJzLmZpbHRlcihpZCA9PiBpZC50b1N0cmluZygpICE9PSB1c2VySWQpO1xuICAgICAgcmV2aWV3LmhlbHBmdWxWb3RlcyA9IE1hdGgubWF4KDAsIHJldmlldy5oZWxwZnVsVm90ZXMgLSAxKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gQWRkIGhlbHBmdWwgdm90ZVxuICAgICAgcmV2aWV3LmhlbHBmdWxVc2Vycy5wdXNoKHVzZXJJZCk7XG4gICAgICByZXZpZXcuaGVscGZ1bFZvdGVzICs9IDE7XG4gICAgfVxuXG4gICAgYXdhaXQgcmV2aWV3LnNhdmUoKTtcblxuICAgIHJlcy5qc29uKFxuICAgICAgc3VjY2Vzc1Jlc3BvbnNlKFxuICAgICAgICB7XG4gICAgICAgICAgaGVscGZ1bDogIWlzQWxyZWFkeUhlbHBmdWwsXG4gICAgICAgICAgaGVscGZ1bFZvdGVzOiByZXZpZXcuaGVscGZ1bFZvdGVzXG4gICAgICAgIH0sXG4gICAgICAgIGBSZXZpZXcgJHtpc0FscmVhZHlIZWxwZnVsID8gJ3VubWFya2VkJyA6ICdtYXJrZWQnfSBhcyBoZWxwZnVsYFxuICAgICAgKVxuICAgICk7XG5cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgZXJyb3IoJ0Vycm9yIG1hcmtpbmcgcmV2aWV3IGhlbHBmdWwnLCB7IGVycm9yOiBlcnIubWVzc2FnZSwgcmV2aWV3SWQ6IHJlcS5wYXJhbXMucmV2aWV3SWQgfSk7XG4gICAgbmV4dChlcnIpO1xuICB9XG59O1xuXG4vLyBHZXQgYWxsIHJldmlld3MgKGFkbWluIG9ubHkpXG5jb25zdCBnZXRBbGxSZXZpZXdzID0gYXN5bmMocmVxLCByZXMsIG5leHQpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IHN0YXR1cywgcGFnZSA9IDEsIGxpbWl0ID0gMjAsIGRlc3RpbmF0aW9uSWQgfSA9IHJlcS5xdWVyeTtcblxuICAgIC8vIEJ1aWxkIHF1ZXJ5XG4gICAgY29uc3QgcXVlcnkgPSB7fTtcbiAgICBpZiAoc3RhdHVzKSB7XG4gICAgICBxdWVyeS5zdGF0dXMgPSBzdGF0dXM7XG4gICAgfVxuICAgIGlmIChkZXN0aW5hdGlvbklkKSB7XG4gICAgICBxdWVyeS5kZXN0aW5hdGlvbiA9IGRlc3RpbmF0aW9uSWQ7XG4gICAgfVxuXG4gICAgLy8gQ2FsY3VsYXRlIHBhZ2luYXRpb25cbiAgICBjb25zdCBza2lwID0gKHBhcnNlSW50KHBhZ2UsIDEwKSAtIDEpICogcGFyc2VJbnQobGltaXQsIDEwKTtcblxuICAgIC8vIEdldCByZXZpZXdzIHdpdGggcGFnaW5hdGlvblxuICAgIGNvbnN0IHJldmlld3MgPSBhd2FpdCBSZXZpZXcuZmluZChxdWVyeSlcbiAgICAgIC5wb3B1bGF0ZSgnZGVzdGluYXRpb24nLCAndGl0bGUgbG9jYXRpb24nKVxuICAgICAgLnBvcHVsYXRlKCd1c2VyJywgJ25hbWUgZW1haWwnKVxuICAgICAgLnNvcnQoeyBjcmVhdGVkQXQ6IC0xIH0pXG4gICAgICAuc2tpcChza2lwKVxuICAgICAgLmxpbWl0KHBhcnNlSW50KGxpbWl0LCAxMCkpO1xuXG4gICAgLy8gR2V0IHRvdGFsIGNvdW50XG4gICAgY29uc3QgdG90YWwgPSBhd2FpdCBSZXZpZXcuY291bnREb2N1bWVudHMocXVlcnkpO1xuXG4gICAgcmVzLmpzb24oXG4gICAgICBzdWNjZXNzUmVzcG9uc2UoXG4gICAgICAgIHtcbiAgICAgICAgICByZXZpZXdzLFxuICAgICAgICAgIHBhZ2luYXRpb246IHtcbiAgICAgICAgICAgIGN1cnJlbnQ6IHBhcnNlSW50KHBhZ2UsIDEwKSxcbiAgICAgICAgICAgIHBhZ2VzOiBNYXRoLmNlaWwodG90YWwgLyBwYXJzZUludChsaW1pdCwgMTApKSxcbiAgICAgICAgICAgIHRvdGFsXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICAnQWxsIHJldmlld3MgcmV0cmlldmVkIHN1Y2Nlc3NmdWxseSdcbiAgICAgIClcbiAgICApO1xuXG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGVycm9yKCdFcnJvciBmZXRjaGluZyBhbGwgcmV2aWV3cycsIHsgZXJyb3I6IGVyci5tZXNzYWdlIH0pO1xuICAgIG5leHQoZXJyKTtcbiAgfVxufTtcblxuLy8gVXBkYXRlIHJldmlldyBzdGF0dXMgKGFkbWluIG9ubHkpXG5jb25zdCB1cGRhdGVSZXZpZXdTdGF0dXMgPSBhc3luYyhyZXEsIHJlcywgbmV4dCkgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHsgcmV2aWV3SWQgfSA9IHJlcS5wYXJhbXM7XG4gICAgY29uc3QgeyBzdGF0dXMsIGFkbWluUmVzcG9uc2UgfSA9IHJlcS5ib2R5O1xuXG4gICAgY29uc3QgdmFsaWRTdGF0dXNlcyA9IFsncGVuZGluZycsICdhcHByb3ZlZCcsICdyZWplY3RlZCddO1xuICAgIGlmICghdmFsaWRTdGF0dXNlcy5pbmNsdWRlcyhzdGF0dXMpKSB7XG4gICAgICB0aHJvdyBuZXcgVmFsaWRhdGlvbkVycm9yKCdJbnZhbGlkIHJldmlldyBzdGF0dXMnKTtcbiAgICB9XG5cbiAgICBjb25zdCByZXZpZXcgPSBhd2FpdCBSZXZpZXcuZmluZEJ5SWQocmV2aWV3SWQpO1xuICAgIGlmICghcmV2aWV3KSB7XG4gICAgICB0aHJvdyBuZXcgTm90Rm91bmRFcnJvcignUmV2aWV3IG5vdCBmb3VuZCcpO1xuICAgIH1cblxuICAgIC8vIFVwZGF0ZSByZXZpZXcgc3RhdHVzXG4gICAgcmV2aWV3LnN0YXR1cyA9IHN0YXR1cztcblxuICAgIC8vIEFkZCBhZG1pbiByZXNwb25zZSBpZiBwcm92aWRlZFxuICAgIGlmIChhZG1pblJlc3BvbnNlKSB7XG4gICAgICByZXZpZXcuYWRtaW5SZXNwb25zZSA9IHtcbiAgICAgICAgY29udGVudDogYWRtaW5SZXNwb25zZSxcbiAgICAgICAgcmVzcG9uZGVkQnk6IHJlcS51c2VyLmlkLFxuICAgICAgICByZXNwb25kZWRBdDogbmV3IERhdGUoKVxuICAgICAgfTtcbiAgICB9XG5cbiAgICBhd2FpdCByZXZpZXcuc2F2ZSgpO1xuXG4gICAgLy8gUG9wdWxhdGUgdGhlIHJldmlld1xuICAgIGF3YWl0IHJldmlldy5wb3B1bGF0ZShbXG4gICAgICB7IHBhdGg6ICd1c2VyJywgc2VsZWN0OiAnbmFtZSBlbWFpbCcgfSxcbiAgICAgIHsgcGF0aDogJ2Rlc3RpbmF0aW9uJywgc2VsZWN0OiAndGl0bGUgbG9jYXRpb24nIH1cbiAgICBdKTtcblxuICAgIGluZm8oJ1JldmlldyBzdGF0dXMgdXBkYXRlZCcsIHtcbiAgICAgIHJldmlld0lkLFxuICAgICAgbmV3U3RhdHVzOiBzdGF0dXMsXG4gICAgICBhZG1pbklkOiByZXEudXNlci5pZFxuICAgIH0pO1xuXG4gICAgcmVzLmpzb24oXG4gICAgICBzdWNjZXNzUmVzcG9uc2UoXG4gICAgICAgIHsgcmV2aWV3IH0sXG4gICAgICAgICdSZXZpZXcgc3RhdHVzIHVwZGF0ZWQgc3VjY2Vzc2Z1bGx5J1xuICAgICAgKVxuICAgICk7XG5cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgZXJyb3IoJ0Vycm9yIHVwZGF0aW5nIHJldmlldyBzdGF0dXMnLCB7IGVycm9yOiBlcnIubWVzc2FnZSwgcmV2aWV3SWQ6IHJlcS5wYXJhbXMucmV2aWV3SWQgfSk7XG4gICAgbmV4dChlcnIpO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgY3JlYXRlUmV2aWV3LFxuICBnZXREZXN0aW5hdGlvblJldmlld3MsXG4gIGdldFVzZXJSZXZpZXdzLFxuICB1cGRhdGVSZXZpZXcsXG4gIGRlbGV0ZVJldmlldyxcbiAgbWFya1Jldmlld0hlbHBmdWwsXG4gIGdldEFsbFJldmlld3MsXG4gIHVwZGF0ZVJldmlld1N0YXR1c1xufTsiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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