4f45fa74ddef0ef089f4d316e5b0f354
/* istanbul ignore next */
function cov_1b71vz16yc() {
  var path = "/Users/mfarsx/dev/tripvar/tripvar-server/src/container/serviceRegistry.js";
  var hash = "731a6c8c13cb7d1bc4dcd9aa9c755a0b04dedf02";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/mfarsx/dev/tripvar/tripvar-server/src/container/serviceRegistry.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 18
        },
        end: {
          line: 1,
          column: 36
        }
      },
      "1": {
        start: {
          line: 4,
          column: 13
        },
        end: {
          line: 4,
          column: 44
        }
      },
      "2": {
        start: {
          line: 5,
          column: 20
        },
        end: {
          line: 5,
          column: 58
        }
      },
      "3": {
        start: {
          line: 6,
          column: 16
        },
        end: {
          line: 6,
          column: 50
        }
      },
      "4": {
        start: {
          line: 7,
          column: 15
        },
        end: {
          line: 7,
          column: 48
        }
      },
      "5": {
        start: {
          line: 9,
          column: 21
        },
        end: {
          line: 9,
          column: 60
        }
      },
      "6": {
        start: {
          line: 12,
          column: 23
        },
        end: {
          line: 12,
          column: 65
        }
      },
      "7": {
        start: {
          line: 15,
          column: 20
        },
        end: {
          line: 15,
          column: 55
        }
      },
      "8": {
        start: {
          line: 18,
          column: 23
        },
        end: {
          line: 18,
          column: 64
        }
      },
      "9": {
        start: {
          line: 21,
          column: 23
        },
        end: {
          line: 21,
          column: 58
        }
      },
      "10": {
        start: {
          line: 28,
          column: 2
        },
        end: {
          line: 28,
          column: 43
        }
      },
      "11": {
        start: {
          line: 29,
          column: 2
        },
        end: {
          line: 29,
          column: 57
        }
      },
      "12": {
        start: {
          line: 30,
          column: 2
        },
        end: {
          line: 30,
          column: 49
        }
      },
      "13": {
        start: {
          line: 31,
          column: 2
        },
        end: {
          line: 31,
          column: 47
        }
      },
      "14": {
        start: {
          line: 33,
          column: 2
        },
        end: {
          line: 33,
          column: 59
        }
      },
      "15": {
        start: {
          line: 36,
          column: 2
        },
        end: {
          line: 36,
          column: 80
        }
      },
      "16": {
        start: {
          line: 39,
          column: 2
        },
        end: {
          line: 42,
          column: 22
        }
      },
      "17": {
        start: {
          line: 40,
          column: 34
        },
        end: {
          line: 40,
          column: 83
        }
      },
      "18": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 55
        }
      },
      "19": {
        start: {
          line: 44,
          column: 2
        },
        end: {
          line: 47,
          column: 18
        }
      },
      "20": {
        start: {
          line: 45,
          column: 30
        },
        end: {
          line: 45,
          column: 75
        }
      },
      "21": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 47
        }
      },
      "22": {
        start: {
          line: 49,
          column: 2
        },
        end: {
          line: 52,
          column: 17
        }
      },
      "23": {
        start: {
          line: 50,
          column: 29
        },
        end: {
          line: 50,
          column: 73
        }
      },
      "24": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 45
        }
      },
      "25": {
        start: {
          line: 59,
          column: 2
        },
        end: {
          line: 62,
          column: 23
        }
      },
      "26": {
        start: {
          line: 60,
          column: 35
        },
        end: {
          line: 60,
          column: 85
        }
      },
      "27": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 57
        }
      },
      "28": {
        start: {
          line: 65,
          column: 2
        },
        end: {
          line: 65,
          column: 90
        }
      },
      "29": {
        start: {
          line: 68,
          column: 2
        },
        end: {
          line: 71,
          column: 32
        }
      },
      "30": {
        start: {
          line: 69,
          column: 31
        },
        end: {
          line: 69,
          column: 73
        }
      },
      "31": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 57
        }
      },
      "32": {
        start: {
          line: 73,
          column: 2
        },
        end: {
          line: 76,
          column: 28
        }
      },
      "33": {
        start: {
          line: 74,
          column: 27
        },
        end: {
          line: 74,
          column: 65
        }
      },
      "34": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 75,
          column: 49
        }
      },
      "35": {
        start: {
          line: 78,
          column: 2
        },
        end: {
          line: 81,
          column: 27
        }
      },
      "36": {
        start: {
          line: 79,
          column: 26
        },
        end: {
          line: 79,
          column: 63
        }
      },
      "37": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 80,
          column: 47
        }
      },
      "38": {
        start: {
          line: 88,
          column: 2
        },
        end: {
          line: 91,
          column: 33
        }
      },
      "39": {
        start: {
          line: 89,
          column: 32
        },
        end: {
          line: 89,
          column: 75
        }
      },
      "40": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 90,
          column: 59
        }
      },
      "41": {
        start: {
          line: 94,
          column: 2
        },
        end: {
          line: 94,
          column: 93
        }
      },
      "42": {
        start: {
          line: 97,
          column: 2
        },
        end: {
          line: 100,
          column: 29
        }
      },
      "43": {
        start: {
          line: 98,
          column: 34
        },
        end: {
          line: 98,
          column: 82
        }
      },
      "44": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 99,
          column: 57
        }
      },
      "45": {
        start: {
          line: 102,
          column: 2
        },
        end: {
          line: 105,
          column: 25
        }
      },
      "46": {
        start: {
          line: 103,
          column: 30
        },
        end: {
          line: 103,
          column: 74
        }
      },
      "47": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 104,
          column: 49
        }
      },
      "48": {
        start: {
          line: 107,
          column: 2
        },
        end: {
          line: 110,
          column: 24
        }
      },
      "49": {
        start: {
          line: 108,
          column: 29
        },
        end: {
          line: 108,
          column: 72
        }
      },
      "50": {
        start: {
          line: 109,
          column: 4
        },
        end: {
          line: 109,
          column: 47
        }
      },
      "51": {
        start: {
          line: 117,
          column: 2
        },
        end: {
          line: 120,
          column: 30
        }
      },
      "52": {
        start: {
          line: 118,
          column: 35
        },
        end: {
          line: 118,
          column: 84
        }
      },
      "53": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 119,
          column: 59
        }
      },
      "54": {
        start: {
          line: 123,
          column: 2
        },
        end: {
          line: 123,
          column: 55
        }
      },
      "55": {
        start: {
          line: 130,
          column: 2
        },
        end: {
          line: 135,
          column: 3
        }
      },
      "56": {
        start: {
          line: 131,
          column: 4
        },
        end: {
          line: 131,
          column: 23
        }
      },
      "57": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 134,
          column: 79
        }
      },
      "58": {
        start: {
          line: 144,
          column: 2
        },
        end: {
          line: 144,
          column: 36
        }
      },
      "59": {
        start: {
          line: 153,
          column: 2
        },
        end: {
          line: 153,
          column: 36
        }
      },
      "60": {
        start: {
          line: 156,
          column: 0
        },
        end: {
          line: 161,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "registerServices",
        decl: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 25
          }
        },
        loc: {
          start: {
            line: 26,
            column: 28
          },
          end: {
            line: 124,
            column: 1
          }
        },
        line: 26
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 39,
            column: 53
          },
          end: {
            line: 39,
            column: 54
          }
        },
        loc: {
          start: {
            line: 39,
            column: 75
          },
          end: {
            line: 42,
            column: 3
          }
        },
        line: 39
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 44,
            column: 49
          },
          end: {
            line: 44,
            column: 50
          }
        },
        loc: {
          start: {
            line: 44,
            column: 67
          },
          end: {
            line: 47,
            column: 3
          }
        },
        line: 44
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 49,
            column: 48
          },
          end: {
            line: 49,
            column: 49
          }
        },
        loc: {
          start: {
            line: 49,
            column: 65
          },
          end: {
            line: 52,
            column: 3
          }
        },
        line: 49
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 59,
            column: 54
          },
          end: {
            line: 59,
            column: 55
          }
        },
        loc: {
          start: {
            line: 59,
            column: 77
          },
          end: {
            line: 62,
            column: 3
          }
        },
        line: 59
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 68,
            column: 50
          },
          end: {
            line: 68,
            column: 51
          }
        },
        loc: {
          start: {
            line: 68,
            column: 77
          },
          end: {
            line: 71,
            column: 3
          }
        },
        line: 68
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 73,
            column: 46
          },
          end: {
            line: 73,
            column: 47
          }
        },
        loc: {
          start: {
            line: 73,
            column: 69
          },
          end: {
            line: 76,
            column: 3
          }
        },
        line: 73
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 78,
            column: 45
          },
          end: {
            line: 78,
            column: 46
          }
        },
        loc: {
          start: {
            line: 78,
            column: 67
          },
          end: {
            line: 81,
            column: 3
          }
        },
        line: 78
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 88,
            column: 51
          },
          end: {
            line: 88,
            column: 52
          }
        },
        loc: {
          start: {
            line: 88,
            column: 79
          },
          end: {
            line: 91,
            column: 3
          }
        },
        line: 88
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 97,
            column: 53
          },
          end: {
            line: 97,
            column: 54
          }
        },
        loc: {
          start: {
            line: 97,
            column: 77
          },
          end: {
            line: 100,
            column: 3
          }
        },
        line: 97
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 102,
            column: 49
          },
          end: {
            line: 102,
            column: 50
          }
        },
        loc: {
          start: {
            line: 102,
            column: 69
          },
          end: {
            line: 105,
            column: 3
          }
        },
        line: 102
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 107,
            column: 48
          },
          end: {
            line: 107,
            column: 49
          }
        },
        loc: {
          start: {
            line: 107,
            column: 67
          },
          end: {
            line: 110,
            column: 3
          }
        },
        line: 107
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 117,
            column: 54
          },
          end: {
            line: 117,
            column: 55
          }
        },
        loc: {
          start: {
            line: 117,
            column: 79
          },
          end: {
            line: 120,
            column: 3
          }
        },
        line: 117
      },
      "13": {
        name: "initialize",
        decl: {
          start: {
            line: 129,
            column: 9
          },
          end: {
            line: 129,
            column: 19
          }
        },
        loc: {
          start: {
            line: 129,
            column: 22
          },
          end: {
            line: 136,
            column: 1
          }
        },
        line: 129
      },
      "14": {
        name: "get",
        decl: {
          start: {
            line: 143,
            column: 9
          },
          end: {
            line: 143,
            column: 12
          }
        },
        loc: {
          start: {
            line: 143,
            column: 26
          },
          end: {
            line: 145,
            column: 1
          }
        },
        line: 143
      },
      "15": {
        name: "has",
        decl: {
          start: {
            line: 152,
            column: 9
          },
          end: {
            line: 152,
            column: 12
          }
        },
        loc: {
          start: {
            line: 152,
            column: 26
          },
          end: {
            line: 154,
            column: 1
          }
        },
        line: 152
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "731a6c8c13cb7d1bc4dcd9aa9c755a0b04dedf02"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1b71vz16yc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1b71vz16yc();
const container =
/* istanbul ignore next */
(cov_1b71vz16yc().s[0]++, require('./index'));

// Models
const User =
/* istanbul ignore next */
(cov_1b71vz16yc().s[1]++, require('../models/user.model'));
const Destination =
/* istanbul ignore next */
(cov_1b71vz16yc().s[2]++, require('../models/destination.model'));
const Booking =
/* istanbul ignore next */
(cov_1b71vz16yc().s[3]++, require('../models/booking.model'));
const Review =
/* istanbul ignore next */
(cov_1b71vz16yc().s[4]++, require('../models/review.model'));
// const Payment = require('../models/payment.model'); // Payment model not implemented yet
const Notification =
/* istanbul ignore next */
(cov_1b71vz16yc().s[5]++, require('../models/notification.model'));

// Repositories
const UserRepository =
/* istanbul ignore next */
(cov_1b71vz16yc().s[6]++, require('../repositories/user.repository'));

// Services
const UserService =
/* istanbul ignore next */
(cov_1b71vz16yc().s[7]++, require('../services/user.service'));

// Controllers
const AuthController =
/* istanbul ignore next */
(cov_1b71vz16yc().s[8]++, require('../controllers/auth.controller'));

// Utils
const {
  redisUtils
} =
/* istanbul ignore next */
(cov_1b71vz16yc().s[9]++, require('../middleware/redisCache'));

/**
 * Register all services in the container
 */
function registerServices() {
  /* istanbul ignore next */
  cov_1b71vz16yc().f[0]++;
  cov_1b71vz16yc().s[10]++;
  // Register models as singletons
  container.registerInstance('User', User);
  /* istanbul ignore next */
  cov_1b71vz16yc().s[11]++;
  container.registerInstance('Destination', Destination);
  /* istanbul ignore next */
  cov_1b71vz16yc().s[12]++;
  container.registerInstance('Booking', Booking);
  /* istanbul ignore next */
  cov_1b71vz16yc().s[13]++;
  container.registerInstance('Review', Review);
  // container.registerInstance('Payment', Payment); // Payment model not implemented yet
  /* istanbul ignore next */
  cov_1b71vz16yc().s[14]++;
  container.registerInstance('Notification', Notification);

  // Register repositories
  /* istanbul ignore next */
  cov_1b71vz16yc().s[15]++;
  container.register('UserRepository', UserRepository, [], {
    singleton: true
  });

  // Register other repositories as factories
  /* istanbul ignore next */
  cov_1b71vz16yc().s[16]++;
  container.registerFactory('DestinationRepository', DestinationModel => {
    /* istanbul ignore next */
    cov_1b71vz16yc().f[1]++;
    const DestinationRepository =
    /* istanbul ignore next */
    (cov_1b71vz16yc().s[17]++, require('../repositories/destination.repository'));
    /* istanbul ignore next */
    cov_1b71vz16yc().s[18]++;
    return new DestinationRepository(DestinationModel);
  }, ['Destination']);
  /* istanbul ignore next */
  cov_1b71vz16yc().s[19]++;
  container.registerFactory('BookingRepository', BookingModel => {
    /* istanbul ignore next */
    cov_1b71vz16yc().f[2]++;
    const BookingRepository =
    /* istanbul ignore next */
    (cov_1b71vz16yc().s[20]++, require('../repositories/booking.repository'));
    /* istanbul ignore next */
    cov_1b71vz16yc().s[21]++;
    return new BookingRepository(BookingModel);
  }, ['Booking']);
  /* istanbul ignore next */
  cov_1b71vz16yc().s[22]++;
  container.registerFactory('ReviewRepository', ReviewModel => {
    /* istanbul ignore next */
    cov_1b71vz16yc().f[3]++;
    const ReviewRepository =
    /* istanbul ignore next */
    (cov_1b71vz16yc().s[23]++, require('../repositories/review.repository'));
    /* istanbul ignore next */
    cov_1b71vz16yc().s[24]++;
    return new ReviewRepository(ReviewModel);
  }, ['Review']);

  // container.registerFactory('PaymentRepository', (Payment) => {
  //   const PaymentRepository = require('../repositories/payment.repository');
  //   return new PaymentRepository(Payment);
  // }, ['Payment']); // Payment repository not implemented yet
  /* istanbul ignore next */
  cov_1b71vz16yc().s[25]++;
  container.registerFactory('NotificationRepository', NotificationModel => {
    /* istanbul ignore next */
    cov_1b71vz16yc().f[4]++;
    const NotificationRepository =
    /* istanbul ignore next */
    (cov_1b71vz16yc().s[26]++, require('../repositories/notification.repository'));
    /* istanbul ignore next */
    cov_1b71vz16yc().s[27]++;
    return new NotificationRepository(NotificationModel);
  }, ['Notification']);

  // Register services
  /* istanbul ignore next */
  cov_1b71vz16yc().s[28]++;
  container.register('UserService', UserService, ['UserRepository'], {
    singleton: true
  });

  // Register other services as factories
  /* istanbul ignore next */
  cov_1b71vz16yc().s[29]++;
  container.registerFactory('DestinationService', DestinationRepository => {
    /* istanbul ignore next */
    cov_1b71vz16yc().f[5]++;
    const DestinationService =
    /* istanbul ignore next */
    (cov_1b71vz16yc().s[30]++, require('../services/destination.service'));
    /* istanbul ignore next */
    cov_1b71vz16yc().s[31]++;
    return new DestinationService(DestinationRepository);
  }, ['DestinationRepository']);
  /* istanbul ignore next */
  cov_1b71vz16yc().s[32]++;
  container.registerFactory('BookingService', BookingRepository => {
    /* istanbul ignore next */
    cov_1b71vz16yc().f[6]++;
    const BookingService =
    /* istanbul ignore next */
    (cov_1b71vz16yc().s[33]++, require('../services/booking.service'));
    /* istanbul ignore next */
    cov_1b71vz16yc().s[34]++;
    return new BookingService(BookingRepository);
  }, ['BookingRepository']);
  /* istanbul ignore next */
  cov_1b71vz16yc().s[35]++;
  container.registerFactory('ReviewService', ReviewRepository => {
    /* istanbul ignore next */
    cov_1b71vz16yc().f[7]++;
    const ReviewService =
    /* istanbul ignore next */
    (cov_1b71vz16yc().s[36]++, require('../services/review.service'));
    /* istanbul ignore next */
    cov_1b71vz16yc().s[37]++;
    return new ReviewService(ReviewRepository);
  }, ['ReviewRepository']);

  // container.registerFactory('PaymentService', (PaymentRepository) => {
  //   const PaymentService = require('../services/payment.service');
  //   return new PaymentService(PaymentRepository);
  // }, ['PaymentRepository']); // Payment service not implemented yet
  /* istanbul ignore next */
  cov_1b71vz16yc().s[38]++;
  container.registerFactory('NotificationService', NotificationRepository => {
    /* istanbul ignore next */
    cov_1b71vz16yc().f[8]++;
    const NotificationService =
    /* istanbul ignore next */
    (cov_1b71vz16yc().s[39]++, require('../services/notification.service'));
    /* istanbul ignore next */
    cov_1b71vz16yc().s[40]++;
    return new NotificationService(NotificationRepository);
  }, ['NotificationRepository']);

  // Register controllers
  /* istanbul ignore next */
  cov_1b71vz16yc().s[41]++;
  container.register('AuthController', AuthController, ['UserService'], {
    singleton: true
  });

  // Register other controllers as factories
  /* istanbul ignore next */
  cov_1b71vz16yc().s[42]++;
  container.registerFactory('DestinationController', DestinationService => {
    /* istanbul ignore next */
    cov_1b71vz16yc().f[9]++;
    const DestinationController =
    /* istanbul ignore next */
    (cov_1b71vz16yc().s[43]++, require('../controllers/destination.controller'));
    /* istanbul ignore next */
    cov_1b71vz16yc().s[44]++;
    return new DestinationController(DestinationService);
  }, ['DestinationService']);
  /* istanbul ignore next */
  cov_1b71vz16yc().s[45]++;
  container.registerFactory('BookingController', BookingService => {
    /* istanbul ignore next */
    cov_1b71vz16yc().f[10]++;
    const BookingController =
    /* istanbul ignore next */
    (cov_1b71vz16yc().s[46]++, require('../controllers/booking.controller'));
    /* istanbul ignore next */
    cov_1b71vz16yc().s[47]++;
    return new BookingController(BookingService);
  }, ['BookingService']);
  /* istanbul ignore next */
  cov_1b71vz16yc().s[48]++;
  container.registerFactory('ReviewController', ReviewService => {
    /* istanbul ignore next */
    cov_1b71vz16yc().f[11]++;
    const ReviewController =
    /* istanbul ignore next */
    (cov_1b71vz16yc().s[49]++, require('../controllers/review.controller'));
    /* istanbul ignore next */
    cov_1b71vz16yc().s[50]++;
    return new ReviewController(ReviewService);
  }, ['ReviewService']);

  // container.registerFactory('PaymentController', (PaymentService) => {
  //   const PaymentController = require('../controllers/payment.controller');
  //   return new PaymentController(PaymentService);
  // }, ['PaymentService']); // Payment controller not implemented yet
  /* istanbul ignore next */
  cov_1b71vz16yc().s[51]++;
  container.registerFactory('NotificationController', NotificationService => {
    /* istanbul ignore next */
    cov_1b71vz16yc().f[12]++;
    const NotificationController =
    /* istanbul ignore next */
    (cov_1b71vz16yc().s[52]++, require('../controllers/notification.controller'));
    /* istanbul ignore next */
    cov_1b71vz16yc().s[53]++;
    return new NotificationController(NotificationService);
  }, ['NotificationService']);

  // Register utilities
  /* istanbul ignore next */
  cov_1b71vz16yc().s[54]++;
  container.registerInstance('redisUtils', redisUtils);
}

/**
 * Initialize the service registry
 */
function initialize() {
  /* istanbul ignore next */
  cov_1b71vz16yc().f[13]++;
  cov_1b71vz16yc().s[55]++;
  try {
    /* istanbul ignore next */
    cov_1b71vz16yc().s[56]++;
    registerServices();
    // Service registry initialized successfully
  } catch (error) {
    /* istanbul ignore next */
    cov_1b71vz16yc().s[57]++;
    throw new Error(`Failed to initialize service registry: ${error.message}`);
  }
}

/**
 * Get a service from the container
 * @param {string} serviceName - Name of the service
 * @returns {*} Service instance
 */
function get(serviceName) {
  /* istanbul ignore next */
  cov_1b71vz16yc().f[14]++;
  cov_1b71vz16yc().s[58]++;
  return container.get(serviceName);
}

/**
 * Check if a service is registered
 * @param {string} serviceName - Name of the service
 * @returns {boolean} Registration status
 */
function has(serviceName) {
  /* istanbul ignore next */
  cov_1b71vz16yc().f[15]++;
  cov_1b71vz16yc().s[59]++;
  return container.has(serviceName);
}
/* istanbul ignore next */
cov_1b71vz16yc().s[60]++;
module.exports = {
  initialize,
  get,
  has,
  container
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,