{"version":3,"names":["request","require","app","setupTestEnvironment","cleanupTestEnvironment","clearDatabase","createTestUser","generateTestToken","expectAuthError","expectValidationError","describe","beforeAll","afterAll","beforeEach","user","token","it","response","get","set","expect","body","status","toBe","data","email","expiredToken","admin","userToken","adminToken","role","message","toContain","requests","Array","fill","map","responses","Promise","allSettled","rateLimitedResponses","filter","value","length","headers","toHaveProperty","options","post","send","largeData","repeat","password","name"],"sources":["middleware.test.js"],"sourcesContent":["const request = require('supertest');\nconst app = require('./app.test');\nconst {\n  setupTestEnvironment,\n  cleanupTestEnvironment,\n  clearDatabase,\n  createTestUser,\n  generateTestToken,\n  expectAuthError,\n  expectValidationError\n} = require('./setup');\n\ndescribe('Middleware Tests', () => {\n  beforeAll(async () => {\n    await setupTestEnvironment();\n  });\n\n  afterAll(async () => {\n    await cleanupTestEnvironment();\n  });\n\n  beforeEach(async () => {\n    await clearDatabase();\n  });\n\n  describe('Authentication Middleware', () => {\n    let user, token;\n\n    beforeEach(async () => {\n      user = await createTestUser();\n      token = generateTestToken(user);\n    });\n\n    it('should allow access with valid token', async () => {\n      const response = await request(app)\n        .get('/api/v1/auth/profile')\n        .set('Authorization', `Bearer ${token}`)\n        .expect(200);\n\n      expect(response.body.status).toBe('success');\n      expect(response.body.data.user.email).toBe(user.email);\n    });\n\n    it('should reject access without token', async () => {\n      const response = await request(app)\n        .get('/api/v1/auth/profile')\n        .expect(401);\n\n      expectAuthError(response, 401);\n    });\n\n    it('should reject access with invalid token', async () => {\n      const response = await request(app)\n        .get('/api/v1/auth/profile')\n        .set('Authorization', 'Bearer invalid-token')\n        .expect(401);\n\n      expectAuthError(response, 401);\n    });\n\n    it('should reject access with malformed authorization header', async () => {\n      const response = await request(app)\n        .get('/api/v1/auth/profile')\n        .set('Authorization', 'InvalidFormat token')\n        .expect(401);\n\n      expectAuthError(response, 401);\n    });\n\n    it('should reject access with expired token', async () => {\n      // Create an expired token (this would require mocking JWT)\n      const expiredToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2OGI3YzA2NzdjOWVjNjE0MDFiOTZkMGQiLCJlbWFpbCI6InRlc3RAZXhhbXBsZS5jb20iLCJpYXQiOjE2MzQ1Njc2MDAsImV4cCI6MTYzNDU3MTIwMH0.invalid';\n\n      const response = await request(app)\n        .get('/api/v1/auth/profile')\n        .set('Authorization', `Bearer ${expiredToken}`)\n        .expect(401);\n\n      expectAuthError(response, 401);\n    });\n  });\n\n  describe('Admin Authorization Middleware', () => {\n    let user, admin, userToken, adminToken;\n\n    beforeEach(async () => {\n      user = await createTestUser();\n      admin = await createTestUser({ \n        email: 'admin@example.com', \n        role: 'admin' \n      });\n      userToken = generateTestToken(user);\n      adminToken = generateTestToken(admin);\n    });\n\n    it('should allow admin access to admin routes', async () => {\n      const response = await request(app)\n        .get('/api/v1/bookings/admin/all')\n        .set('Authorization', `Bearer ${adminToken}`)\n        .expect(200);\n\n      expect(response.body.status).toBe('success');\n    });\n\n    it('should reject regular user access to admin routes', async () => {\n      const response = await request(app)\n        .get('/api/v1/bookings/admin/all')\n        .set('Authorization', `Bearer ${userToken}`)\n        .expect(403);\n\n      expect(response.body.status).toBe('fail');\n      expect(response.body.message).toContain('Access denied');\n    });\n\n    it('should reject access without authentication to admin routes', async () => {\n      const response = await request(app)\n        .get('/api/v1/bookings/admin/all')\n        .expect(401);\n\n      expectAuthError(response, 401);\n    });\n  });\n\n  describe('Rate Limiting Middleware', () => {\n    it('should apply rate limiting to API endpoints', async () => {\n      const requests = Array(10).fill().map(() =>\n        request(app).get('/api/v1/destinations')\n      );\n\n      const responses = await Promise.allSettled(requests);\n      \n      // Some requests should be rate limited (status 429)\n      const rateLimitedResponses = responses.filter(\n        response => response.status === 'fulfilled' && response.value.status === 429\n      );\n\n      // Note: This test might not always trigger rate limiting depending on configuration\n      // The important thing is that the middleware is applied\n      expect(responses.length).toBe(10);\n    });\n\n    it('should allow requests within rate limit', async () => {\n      const response = await request(app)\n        .get('/api/v1/destinations')\n        .expect(200);\n\n      expect(response.body.status).toBe('success');\n    });\n  });\n\n  describe('CORS Middleware', () => {\n    it('should include CORS headers in response', async () => {\n      const response = await request(app)\n        .get('/api/v1/destinations')\n        .expect(200);\n\n      expect(response.headers).toHaveProperty('access-control-allow-origin');\n      expect(response.headers).toHaveProperty('access-control-allow-credentials');\n    });\n\n    it('should handle preflight requests', async () => {\n      const response = await request(app)\n        .options('/api/v1/destinations')\n        .set('Access-Control-Request-Method', 'POST')\n        .set('Access-Control-Request-Headers', 'Content-Type, Authorization')\n        .expect(204);\n\n      expect(response.headers).toHaveProperty('access-control-allow-methods');\n      expect(response.headers).toHaveProperty('access-control-allow-headers');\n    });\n  });\n\n  describe('Security Middleware', () => {\n    it('should include security headers', async () => {\n      const response = await request(app)\n        .get('/api/v1/destinations')\n        .expect(200);\n\n      // Check for common security headers\n      expect(response.headers).toHaveProperty('x-content-type-options');\n      expect(response.headers).toHaveProperty('x-frame-options');\n      expect(response.headers).toHaveProperty('x-xss-protection');\n    });\n\n    it('should handle malformed JSON gracefully', async () => {\n      const response = await request(app)\n        .post('/api/v1/auth/register')\n        .set('Content-Type', 'application/json')\n        .send('invalid json')\n        .expect(400);\n\n      expect(response.body.status).toBe('fail');\n    });\n\n    it('should limit request body size', async () => {\n      const largeData = 'x'.repeat(11 * 1024 * 1024); // 11MB\n\n      const response = await request(app)\n        .post('/api/v1/auth/register')\n        .set('Content-Type', 'application/json')\n        .send({ data: largeData })\n        .expect(413); // Payload too large\n\n      expect(response.body.status).toBe('fail');\n    });\n  });\n\n  describe('Request Logging Middleware', () => {\n    it('should add request ID to requests', async () => {\n      const response = await request(app)\n        .get('/api/v1/destinations')\n        .expect(200);\n\n      // Request ID should be added to response headers\n      expect(response.headers).toHaveProperty('x-request-id');\n    });\n\n    it('should log request information', async () => {\n      // This test would require capturing console output\n      // For now, we'll just ensure the endpoint responds\n      const response = await request(app)\n        .get('/api/v1/destinations')\n        .expect(200);\n\n      expect(response.body.status).toBe('success');\n    });\n  });\n\n  describe('Error Handling Middleware', () => {\n    it('should handle 404 errors for undefined routes', async () => {\n      const response = await request(app)\n        .get('/api/v1/nonexistent-route')\n        .expect(404);\n\n      expect(response.body.status).toBe('fail');\n      expect(response.body.message).toContain('not found');\n    });\n\n    it('should handle validation errors', async () => {\n      const response = await request(app)\n        .post('/api/v1/auth/register')\n        .send({\n          email: 'invalid-email',\n          password: 'weak'\n        })\n        .expect(400);\n\n      expect(response.body.status).toBe('fail');\n      expect(response.body.message).toContain('validation');\n    });\n\n    it('should handle server errors gracefully', async () => {\n      // This would require mocking a server error\n      // For now, we'll test that the error handler is in place\n      const response = await request(app)\n        .get('/api/v1/destinations')\n        .expect(200);\n\n      expect(response.body.status).toBe('success');\n    });\n  });\n\n  describe('Validation Middleware', () => {\n    it('should validate required fields', async () => {\n      const response = await request(app)\n        .post('/api/v1/auth/register')\n        .send({\n          email: 'test@example.com'\n          // Missing password and name\n        })\n        .expect(400);\n\n      expectValidationError(response, 400, ['password', 'name']);\n    });\n\n    it('should validate email format', async () => {\n      const response = await request(app)\n        .post('/api/v1/auth/register')\n        .send({\n          email: 'invalid-email',\n          password: 'ValidPassword123!',\n          name: 'Test User'\n        })\n        .expect(400);\n\n      expectValidationError(response, 400, ['email']);\n    });\n\n    it('should validate password strength', async () => {\n      const response = await request(app)\n        .post('/api/v1/auth/register')\n        .send({\n          email: 'test@example.com',\n          password: 'weak',\n          name: 'Test User'\n        })\n        .expect(400);\n\n      expectValidationError(response, 400, ['password']);\n    });\n  });\n\n  describe('Compression Middleware', () => {\n    it('should compress response when Accept-Encoding includes gzip', async () => {\n      const response = await request(app)\n        .get('/api/v1/destinations')\n        .set('Accept-Encoding', 'gzip, deflate')\n        .expect(200);\n\n      // Response should be compressed\n      expect(response.headers).toHaveProperty('content-encoding');\n    });\n  });\n\n  describe('Session Middleware', () => {\n    it('should handle session creation', async () => {\n      const response = await request(app)\n        .get('/api/v1/destinations')\n        .expect(200);\n\n      // Session middleware should be applied\n      expect(response.body.status).toBe('success');\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}