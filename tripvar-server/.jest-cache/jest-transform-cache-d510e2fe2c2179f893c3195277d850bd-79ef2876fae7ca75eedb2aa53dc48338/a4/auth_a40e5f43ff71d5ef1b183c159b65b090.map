{"version":3,"names":["jwt","require","promisify","User","UnauthorizedError","ForbiddenError","exports","authenticate","req","res","next","token","headers","authorization","startsWith","split","cookies","status","json","message","code","decoded","verify","process","env","JWT_SECRET","algorithms","user","findById","id","changedPasswordAfter","iat","err","name","error","authorize","roles","includes","role","protect","restrictTo"],"sources":["auth.js"],"sourcesContent":["const jwt = require('jsonwebtoken');\nconst { promisify } = require('util');\nconst User = require('../models/user.model');\nconst { UnauthorizedError, ForbiddenError } = require('../utils/errors');\n\nexports.authenticate = async(req, res, next) => {\n  try {\n    // 1) Get token and check if it exists\n    let token;\n    if (\n      req.headers.authorization &&\n      req.headers.authorization.startsWith('Bearer')\n    ) {\n      token = req.headers.authorization.split(' ')[1];\n    }\n\n    // Additional security: Check for token in cookies as fallback\n    if (!token && req.cookies && req.cookies.token) {\n      token = req.cookies.token;\n    }\n\n    if (!token) {\n      return res.status(401).json({\n        status: 'fail',\n        message: 'You are not logged in! Please log in to get access.',\n        code: 'UNAUTHORIZED'\n      });\n    }\n\n    // 2) Verify token\n    try {\n      const decoded = await promisify(jwt.verify)(token, process.env.JWT_SECRET, {\n        algorithms: ['HS256'] // Explicitly specify algorithm for security\n      });\n\n      // 3) Check if user still exists\n      const user = await User.findById(decoded.id);\n      if (!user) {\n        return res.status(401).json({\n          status: 'fail',\n          message: 'The user belonging to this token no longer exists.',\n          code: 'UNAUTHORIZED'\n        });\n      }\n\n      // 4) Check if user changed password after the token was issued\n      if (user.changedPasswordAfter(decoded.iat)) {\n        return res.status(401).json({\n          status: 'fail',\n          message: 'User recently changed password! Please log in again.',\n          code: 'UNAUTHORIZED'\n        });\n      }\n\n      // Grant access to protected route\n      req.user = user;\n      next();\n    } catch (err) {\n      // Handle JWT specific errors with clear messages\n      if (err.name === 'TokenExpiredError') {\n        return res.status(401).json({\n          status: 'fail',\n          message: 'Your token has expired. Please log in again.',\n          code: 'TOKEN_EXPIRED'\n        });\n      } else if (err.name === 'JsonWebTokenError') {\n        return res.status(401).json({\n          status: 'fail',\n          message: 'Invalid token. Please log in again.',\n          code: 'INVALID_TOKEN'\n        });\n      }\n      // For other errors, pass to error handler\n      next(err);\n    }\n  } catch (error) {\n    next(error);\n  }\n};\n\nexports.authorize = (...roles) => {\n  return (req, res, next) => {\n    if (!roles.includes(req.user.role)) {\n      return next(\n        new ForbiddenError('You do not have permission to perform this action')\n      );\n    }\n    next();\n  };\n};\n\n// Keep the old exports for backward compatibility\nexports.protect = exports.authenticate;\nexports.restrictTo = exports.authorize;\n"],"mappings":"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","ignoreList":[]}