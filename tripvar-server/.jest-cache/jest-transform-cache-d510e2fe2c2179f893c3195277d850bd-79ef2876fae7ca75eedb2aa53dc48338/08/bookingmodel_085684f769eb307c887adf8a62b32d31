613404e3c0158965a0287cd03b706892
/* istanbul ignore next */
function cov_6fapnpyte() {
  var path = "/Users/mfarsx/dev/tripvar/tripvar-server/src/models/booking.model.js";
  var hash = "59004dbcf59ace4b10abfdd392eb11a320242998";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/mfarsx/dev/tripvar/tripvar-server/src/models/booking.model.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 17
        },
        end: {
          line: 1,
          column: 36
        }
      },
      "1": {
        start: {
          line: 3,
          column: 22
        },
        end: {
          line: 163,
          column: 1
        }
      },
      "2": {
        start: {
          line: 26,
          column: 10
        },
        end: {
          line: 26,
          column: 32
        }
      },
      "3": {
        start: {
          line: 38,
          column: 10
        },
        end: {
          line: 38,
          column: 38
        }
      },
      "4": {
        start: {
          line: 122,
          column: 10
        },
        end: {
          line: 122,
          column: 71
        }
      },
      "5": {
        start: {
          line: 166,
          column: 0
        },
        end: {
          line: 172,
          column: 3
        }
      },
      "6": {
        start: {
          line: 167,
          column: 2
        },
        end: {
          line: 170,
          column: 3
        }
      },
      "7": {
        start: {
          line: 168,
          column: 21
        },
        end: {
          line: 168,
          column: 77
        }
      },
      "8": {
        start: {
          line: 169,
          column: 4
        },
        end: {
          line: 169,
          column: 52
        }
      },
      "9": {
        start: {
          line: 171,
          column: 2
        },
        end: {
          line: 171,
          column: 11
        }
      },
      "10": {
        start: {
          line: 175,
          column: 0
        },
        end: {
          line: 177,
          column: 3
        }
      },
      "11": {
        start: {
          line: 176,
          column: 2
        },
        end: {
          line: 176,
          column: 62
        }
      },
      "12": {
        start: {
          line: 180,
          column: 0
        },
        end: {
          line: 187,
          column: 3
        }
      },
      "13": {
        start: {
          line: 181,
          column: 2
        },
        end: {
          line: 185,
          column: 3
        }
      },
      "14": {
        start: {
          line: 182,
          column: 21
        },
        end: {
          line: 182,
          column: 77
        }
      },
      "15": {
        start: {
          line: 183,
          column: 4
        },
        end: {
          line: 183,
          column: 64
        }
      },
      "16": {
        start: {
          line: 184,
          column: 4
        },
        end: {
          line: 184,
          column: 83
        }
      },
      "17": {
        start: {
          line: 186,
          column: 2
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "18": {
        start: {
          line: 190,
          column: 0
        },
        end: {
          line: 190,
          column: 48
        }
      },
      "19": {
        start: {
          line: 191,
          column: 0
        },
        end: {
          line: 191,
          column: 73
        }
      },
      "20": {
        start: {
          line: 192,
          column: 0
        },
        end: {
          line: 192,
          column: 35
        }
      },
      "21": {
        start: {
          line: 193,
          column: 0
        },
        end: {
          line: 193,
          column: 42
        }
      },
      "22": {
        start: {
          line: 196,
          column: 0
        },
        end: {
          line: 209,
          column: 2
        }
      },
      "23": {
        start: {
          line: 197,
          column: 27
        },
        end: {
          line: 206,
          column: 4
        }
      },
      "24": {
        start: {
          line: 208,
          column: 2
        },
        end: {
          line: 208,
          column: 39
        }
      },
      "25": {
        start: {
          line: 212,
          column: 0
        },
        end: {
          line: 228,
          column: 2
        }
      },
      "26": {
        start: {
          line: 213,
          column: 2
        },
        end: {
          line: 215,
          column: 3
        }
      },
      "27": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 214,
          column: 13
        }
      },
      "28": {
        start: {
          line: 217,
          column: 14
        },
        end: {
          line: 217,
          column: 24
        }
      },
      "29": {
        start: {
          line: 218,
          column: 27
        },
        end: {
          line: 218,
          column: 83
        }
      },
      "30": {
        start: {
          line: 221,
          column: 2
        },
        end: {
          line: 227,
          column: 3
        }
      },
      "31": {
        start: {
          line: 222,
          column: 4
        },
        end: {
          line: 222,
          column: 28
        }
      },
      "32": {
        start: {
          line: 223,
          column: 9
        },
        end: {
          line: 227,
          column: 3
        }
      },
      "33": {
        start: {
          line: 224,
          column: 4
        },
        end: {
          line: 224,
          column: 34
        }
      },
      "34": {
        start: {
          line: 226,
          column: 4
        },
        end: {
          line: 226,
          column: 13
        }
      },
      "35": {
        start: {
          line: 230,
          column: 16
        },
        end: {
          line: 230,
          column: 56
        }
      },
      "36": {
        start: {
          line: 232,
          column: 0
        },
        end: {
          line: 232,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 24,
            column: 19
          },
          end: {
            line: 24,
            column: 20
          }
        },
        loc: {
          start: {
            line: 24,
            column: 31
          },
          end: {
            line: 27,
            column: 9
          }
        },
        line: 24
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 36,
            column: 19
          },
          end: {
            line: 36,
            column: 20
          }
        },
        loc: {
          start: {
            line: 36,
            column: 31
          },
          end: {
            line: 39,
            column: 9
          }
        },
        line: 36
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 121,
            column: 19
          },
          end: {
            line: 121,
            column: 20
          }
        },
        loc: {
          start: {
            line: 121,
            column: 31
          },
          end: {
            line: 123,
            column: 9
          }
        },
        line: 121
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 166,
            column: 38
          },
          end: {
            line: 166,
            column: 39
          }
        },
        loc: {
          start: {
            line: 166,
            column: 49
          },
          end: {
            line: 172,
            column: 1
          }
        },
        line: 166
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 175,
            column: 46
          },
          end: {
            line: 175,
            column: 47
          }
        },
        loc: {
          start: {
            line: 175,
            column: 57
          },
          end: {
            line: 177,
            column: 1
          }
        },
        line: 175
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 180,
            column: 26
          },
          end: {
            line: 180,
            column: 27
          }
        },
        loc: {
          start: {
            line: 180,
            column: 41
          },
          end: {
            line: 187,
            column: 1
          }
        },
        line: 180
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 196,
            column: 42
          },
          end: {
            line: 196,
            column: 43
          }
        },
        loc: {
          start: {
            line: 196,
            column: 99
          },
          end: {
            line: 209,
            column: 1
          }
        },
        line: 196
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 212,
            column: 40
          },
          end: {
            line: 212,
            column: 41
          }
        },
        loc: {
          start: {
            line: 212,
            column: 51
          },
          end: {
            line: 228,
            column: 1
          }
        },
        line: 212
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 167,
            column: 2
          },
          end: {
            line: 170,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 2
          },
          end: {
            line: 170,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "1": {
        loc: {
          start: {
            line: 167,
            column: 6
          },
          end: {
            line: 167,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 167,
            column: 6
          },
          end: {
            line: 167,
            column: 22
          }
        }, {
          start: {
            line: 167,
            column: 26
          },
          end: {
            line: 167,
            column: 43
          }
        }],
        line: 167
      },
      "2": {
        loc: {
          start: {
            line: 181,
            column: 2
          },
          end: {
            line: 185,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 2
          },
          end: {
            line: 185,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "3": {
        loc: {
          start: {
            line: 181,
            column: 6
          },
          end: {
            line: 181,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 181,
            column: 6
          },
          end: {
            line: 181,
            column: 22
          }
        }, {
          start: {
            line: 181,
            column: 26
          },
          end: {
            line: 181,
            column: 43
          }
        }, {
          start: {
            line: 181,
            column: 47
          },
          end: {
            line: 181,
            column: 65
          }
        }],
        line: 181
      },
      "4": {
        loc: {
          start: {
            line: 213,
            column: 2
          },
          end: {
            line: 215,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 2
          },
          end: {
            line: 215,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "5": {
        loc: {
          start: {
            line: 221,
            column: 2
          },
          end: {
            line: 227,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 2
          },
          end: {
            line: 227,
            column: 3
          }
        }, {
          start: {
            line: 223,
            column: 9
          },
          end: {
            line: 227,
            column: 3
          }
        }],
        line: 221
      },
      "6": {
        loc: {
          start: {
            line: 223,
            column: 9
          },
          end: {
            line: 227,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 223,
            column: 9
          },
          end: {
            line: 227,
            column: 3
          }
        }, {
          start: {
            line: 225,
            column: 9
          },
          end: {
            line: 227,
            column: 3
          }
        }],
        line: 223
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "59004dbcf59ace4b10abfdd392eb11a320242998"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_6fapnpyte = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_6fapnpyte();
const mongoose =
/* istanbul ignore next */
(cov_6fapnpyte().s[0]++, require('mongoose'));
const bookingSchema =
/* istanbul ignore next */
(cov_6fapnpyte().s[1]++, new mongoose.Schema({
  // User who made the booking
  user: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User',
    required: [true, 'Booking must belong to a user']
  },
  // Destination being booked
  destination: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Destination',
    required: [true, 'Booking must be for a destination']
  },
  // Booking dates
  checkInDate: {
    type: Date,
    required: [true, 'Check-in date is required'],
    validate: {
      validator: function (v) {
        /* istanbul ignore next */
        cov_6fapnpyte().f[0]++;
        cov_6fapnpyte().s[2]++;
        // Check-in date must be in the future
        return v > new Date();
      },
      message: 'Check-in date must be in the future'
    }
  },
  checkOutDate: {
    type: Date,
    required: [true, 'Check-out date is required'],
    validate: {
      validator: function (v) {
        /* istanbul ignore next */
        cov_6fapnpyte().f[1]++;
        cov_6fapnpyte().s[3]++;
        // Check-out date must be after check-in date
        return v > this.checkInDate;
      },
      message: 'Check-out date must be after check-in date'
    }
  },
  // Number of guests
  numberOfGuests: {
    type: Number,
    required: [true, 'Number of guests is required'],
    min: [1, 'At least 1 guest is required'],
    max: [10, 'Maximum 10 guests allowed']
  },
  // Pricing information
  pricePerNight: {
    type: Number,
    required: [true, 'Price per night is required'],
    min: [0, 'Price cannot be negative']
  },
  totalNights: {
    type: Number,
    required: true,
    min: [1, 'At least 1 night is required']
  },
  totalAmount: {
    type: Number,
    required: [true, 'Total amount is required'],
    min: [0, 'Total amount cannot be negative']
  },
  // Payment information
  paymentMethod: {
    type: String,
    required: [true, 'Payment method is required'],
    enum: {
      values: ['credit-card', 'paypal', 'bank-transfer'],
      message: 'Payment method must be credit-card, paypal, or bank-transfer'
    }
  },
  paymentStatus: {
    type: String,
    required: true,
    enum: {
      values: ['pending', 'paid', 'failed', 'refunded'],
      message: 'Payment status must be pending, paid, failed, or refunded'
    },
    default: 'pending'
  },
  paymentIntentId: {
    type: String,
    required: false // Will be set when payment is processed
  },
  // Booking status
  status: {
    type: String,
    required: true,
    enum: {
      values: ['confirmed', 'cancelled', 'completed', 'no-show'],
      message: 'Status must be confirmed, cancelled, completed, or no-show'
    },
    default: 'confirmed'
  },
  // Additional information
  specialRequests: {
    type: String,
    maxlength: [500, 'Special requests cannot exceed 500 characters'],
    required: false
  },
  // Contact information for the booking
  contactEmail: {
    type: String,
    required: [true, 'Contact email is required'],
    lowercase: true,
    trim: true,
    validate: {
      validator: function (v) {
        /* istanbul ignore next */
        cov_6fapnpyte().f[2]++;
        cov_6fapnpyte().s[4]++;
        return /^\w+([.-]?\w+)*@\w+([.-]?\w+)*(\.\w{2,3})+$/.test(v);
      },
      message: 'Please provide a valid email address'
    }
  },
  contactPhone: {
    type: String,
    required: false,
    trim: true
  },
  // Cancellation information
  cancelledAt: {
    type: Date,
    required: false
  },
  cancellationReason: {
    type: String,
    required: false,
    maxlength: [200, 'Cancellation reason cannot exceed 200 characters']
  },
  // Refund information
  refundAmount: {
    type: Number,
    required: false,
    min: [0, 'Refund amount cannot be negative']
  },
  refundedAt: {
    type: Date,
    required: false
  }
}, {
  timestamps: true,
  toJSON: {
    virtuals: true
  },
  toObject: {
    virtuals: true
  }
}));

// Virtual field for booking duration in days
/* istanbul ignore next */
cov_6fapnpyte().s[5]++;
bookingSchema.virtual('duration').get(function () {
  /* istanbul ignore next */
  cov_6fapnpyte().f[3]++;
  cov_6fapnpyte().s[6]++;
  if (
  /* istanbul ignore next */
  (cov_6fapnpyte().b[1][0]++, this.checkInDate) &&
  /* istanbul ignore next */
  (cov_6fapnpyte().b[1][1]++, this.checkOutDate)) {
    /* istanbul ignore next */
    cov_6fapnpyte().b[0][0]++;
    const timeDiff =
    /* istanbul ignore next */
    (cov_6fapnpyte().s[7]++, this.checkOutDate.getTime() - this.checkInDate.getTime());
    /* istanbul ignore next */
    cov_6fapnpyte().s[8]++;
    return Math.ceil(timeDiff / (1000 * 3600 * 24));
  } else
  /* istanbul ignore next */
  {
    cov_6fapnpyte().b[0][1]++;
  }
  cov_6fapnpyte().s[9]++;
  return 0;
});

// Virtual field for booking reference number
/* istanbul ignore next */
cov_6fapnpyte().s[10]++;
bookingSchema.virtual('bookingReference').get(function () {
  /* istanbul ignore next */
  cov_6fapnpyte().f[4]++;
  cov_6fapnpyte().s[11]++;
  return `TRV-${this._id.toString().slice(-8).toUpperCase()}`;
});

// Pre-save middleware to calculate total nights and amount
/* istanbul ignore next */
cov_6fapnpyte().s[12]++;
bookingSchema.pre('save', function (next) {
  /* istanbul ignore next */
  cov_6fapnpyte().f[5]++;
  cov_6fapnpyte().s[13]++;
  if (
  /* istanbul ignore next */
  (cov_6fapnpyte().b[3][0]++, this.checkInDate) &&
  /* istanbul ignore next */
  (cov_6fapnpyte().b[3][1]++, this.checkOutDate) &&
  /* istanbul ignore next */
  (cov_6fapnpyte().b[3][2]++, this.pricePerNight)) {
    /* istanbul ignore next */
    cov_6fapnpyte().b[2][0]++;
    const timeDiff =
    /* istanbul ignore next */
    (cov_6fapnpyte().s[14]++, this.checkOutDate.getTime() - this.checkInDate.getTime());
    /* istanbul ignore next */
    cov_6fapnpyte().s[15]++;
    this.totalNights = Math.ceil(timeDiff / (1000 * 3600 * 24));
    /* istanbul ignore next */
    cov_6fapnpyte().s[16]++;
    this.totalAmount = this.totalNights * this.pricePerNight * this.numberOfGuests;
  } else
  /* istanbul ignore next */
  {
    cov_6fapnpyte().b[2][1]++;
  }
  cov_6fapnpyte().s[17]++;
  next();
});

// Index for better query performance
/* istanbul ignore next */
cov_6fapnpyte().s[18]++;
bookingSchema.index({
  user: 1,
  createdAt: -1
});
/* istanbul ignore next */
cov_6fapnpyte().s[19]++;
bookingSchema.index({
  destination: 1,
  checkInDate: 1,
  checkOutDate: 1
});
/* istanbul ignore next */
cov_6fapnpyte().s[20]++;
bookingSchema.index({
  status: 1
});
/* istanbul ignore next */
cov_6fapnpyte().s[21]++;
bookingSchema.index({
  paymentStatus: 1
});

// Static method to check availability
/* istanbul ignore next */
cov_6fapnpyte().s[22]++;
bookingSchema.statics.checkAvailability = async function (destinationId, checkInDate, checkOutDate) {
  /* istanbul ignore next */
  cov_6fapnpyte().f[6]++;
  const existingBookings =
  /* istanbul ignore next */
  (cov_6fapnpyte().s[23]++, await this.find({
    destination: destinationId,
    status: {
      $in: ['confirmed', 'completed']
    },
    $or: [{
      checkInDate: {
        $lt: checkOutDate
      },
      checkOutDate: {
        $gt: checkInDate
      }
    }]
  }));
  /* istanbul ignore next */
  cov_6fapnpyte().s[24]++;
  return existingBookings.length === 0;
};

// Instance method to calculate refund amount
/* istanbul ignore next */
cov_6fapnpyte().s[25]++;
bookingSchema.methods.calculateRefund = function () {
  /* istanbul ignore next */
  cov_6fapnpyte().f[7]++;
  cov_6fapnpyte().s[26]++;
  if (this.status !== 'cancelled') {
    /* istanbul ignore next */
    cov_6fapnpyte().b[4][0]++;
    cov_6fapnpyte().s[27]++;
    return 0;
  } else
  /* istanbul ignore next */
  {
    cov_6fapnpyte().b[4][1]++;
  }
  const now =
  /* istanbul ignore next */
  (cov_6fapnpyte().s[28]++, new Date());
  const daysUntilCheckIn =
  /* istanbul ignore next */
  (cov_6fapnpyte().s[29]++, Math.ceil((this.checkInDate - now) / (1000 * 3600 * 24)));

  // Refund policy: 100% if cancelled 7+ days before, 50% if 3-6 days, 0% if less than 3 days
  /* istanbul ignore next */
  cov_6fapnpyte().s[30]++;
  if (daysUntilCheckIn >= 7) {
    /* istanbul ignore next */
    cov_6fapnpyte().b[5][0]++;
    cov_6fapnpyte().s[31]++;
    return this.totalAmount;
  } else {
    /* istanbul ignore next */
    cov_6fapnpyte().b[5][1]++;
    cov_6fapnpyte().s[32]++;
    if (daysUntilCheckIn >= 3) {
      /* istanbul ignore next */
      cov_6fapnpyte().b[6][0]++;
      cov_6fapnpyte().s[33]++;
      return this.totalAmount * 0.5;
    } else {
      /* istanbul ignore next */
      cov_6fapnpyte().b[6][1]++;
      cov_6fapnpyte().s[34]++;
      return 0;
    }
  }
};
const Booking =
/* istanbul ignore next */
(cov_6fapnpyte().s[35]++, mongoose.model('Booking', bookingSchema));
/* istanbul ignore next */
cov_6fapnpyte().s[36]++;
module.exports = Booking;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,