76d28049123240182ea65c5d102fbb13
/* istanbul ignore next */
function cov_v304x8zb0() {
  var path = "/Users/mfarsx/dev/tripvar/tripvar-server/src/repositories/booking.repository.js";
  var hash = "7570ec8b0d49609ab166c03dc90826c066e0c0ac";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/mfarsx/dev/tripvar/tripvar-server/src/repositories/booking.repository.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 23
        },
        end: {
          line: 1,
          column: 51
        }
      },
      "1": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 5,
          column: 17
        }
      },
      "2": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 14,
          column: 5
        }
      },
      "3": {
        start: {
          line: 11,
          column: 6
        },
        end: {
          line: 11,
          column: 77
        }
      },
      "4": {
        start: {
          line: 13,
          column: 6
        },
        end: {
          line: 13,
          column: 18
        }
      },
      "5": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 23,
          column: 5
        }
      },
      "6": {
        start: {
          line: 20,
          column: 6
        },
        end: {
          line: 20,
          column: 84
        }
      },
      "7": {
        start: {
          line: 22,
          column: 6
        },
        end: {
          line: 22,
          column: 18
        }
      },
      "8": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "9": {
        start: {
          line: 29,
          column: 6
        },
        end: {
          line: 29,
          column: 76
        }
      },
      "10": {
        start: {
          line: 31,
          column: 6
        },
        end: {
          line: 31,
          column: 18
        }
      },
      "11": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "12": {
        start: {
          line: 38,
          column: 6
        },
        end: {
          line: 41,
          column: 38
        }
      },
      "13": {
        start: {
          line: 43,
          column: 6
        },
        end: {
          line: 43,
          column: 18
        }
      },
      "14": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "15": {
        start: {
          line: 50,
          column: 18
        },
        end: {
          line: 50,
          column: 28
        }
      },
      "16": {
        start: {
          line: 51,
          column: 6
        },
        end: {
          line: 54,
          column: 38
        }
      },
      "17": {
        start: {
          line: 56,
          column: 6
        },
        end: {
          line: 56,
          column: 18
        }
      },
      "18": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 66,
          column: 5
        }
      },
      "19": {
        start: {
          line: 63,
          column: 6
        },
        end: {
          line: 63,
          column: 83
        }
      },
      "20": {
        start: {
          line: 65,
          column: 6
        },
        end: {
          line: 65,
          column: 18
        }
      },
      "21": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 84,
          column: 5
        }
      },
      "22": {
        start: {
          line: 72,
          column: 20
        },
        end: {
          line: 80,
          column: 8
        }
      },
      "23": {
        start: {
          line: 81,
          column: 6
        },
        end: {
          line: 81,
          column: 19
        }
      },
      "24": {
        start: {
          line: 83,
          column: 6
        },
        end: {
          line: 83,
          column: 18
        }
      },
      "25": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 108,
          column: 5
        }
      },
      "26": {
        start: {
          line: 90,
          column: 20
        },
        end: {
          line: 99,
          column: 7
        }
      },
      "27": {
        start: {
          line: 101,
          column: 6
        },
        end: {
          line: 103,
          column: 7
        }
      },
      "28": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 46
        }
      },
      "29": {
        start: {
          line: 105,
          column: 6
        },
        end: {
          line: 105,
          column: 42
        }
      },
      "30": {
        start: {
          line: 107,
          column: 6
        },
        end: {
          line: 107,
          column: 18
        }
      },
      "31": {
        start: {
          line: 113,
          column: 4
        },
        end: {
          line: 121,
          column: 5
        }
      },
      "32": {
        start: {
          line: 114,
          column: 6
        },
        end: {
          line: 118,
          column: 8
        }
      },
      "33": {
        start: {
          line: 120,
          column: 6
        },
        end: {
          line: 120,
          column: 18
        }
      },
      "34": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 145,
          column: 5
        }
      },
      "35": {
        start: {
          line: 127,
          column: 21
        },
        end: {
          line: 141,
          column: 8
        }
      },
      "36": {
        start: {
          line: 142,
          column: 6
        },
        end: {
          line: 142,
          column: 63
        }
      },
      "37": {
        start: {
          line: 144,
          column: 6
        },
        end: {
          line: 144,
          column: 18
        }
      },
      "38": {
        start: {
          line: 149,
          column: 0
        },
        end: {
          line: 149,
          column: 35
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 4,
            column: 2
          },
          end: {
            line: 4,
            column: 3
          }
        },
        loc: {
          start: {
            line: 4,
            column: 21
          },
          end: {
            line: 6,
            column: 3
          }
        },
        line: 4
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 2
          },
          end: {
            line: 9,
            column: 3
          }
        },
        loc: {
          start: {
            line: 9,
            column: 27
          },
          end: {
            line: 15,
            column: 3
          }
        },
        line: 9
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 2
          },
          end: {
            line: 18,
            column: 3
          }
        },
        loc: {
          start: {
            line: 18,
            column: 41
          },
          end: {
            line: 24,
            column: 3
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 27,
            column: 2
          },
          end: {
            line: 27,
            column: 3
          }
        },
        loc: {
          start: {
            line: 27,
            column: 29
          },
          end: {
            line: 33,
            column: 3
          }
        },
        line: 27
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 36,
            column: 2
          },
          end: {
            line: 36,
            column: 3
          }
        },
        loc: {
          start: {
            line: 36,
            column: 44
          },
          end: {
            line: 45,
            column: 3
          }
        },
        line: 36
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 48,
            column: 2
          },
          end: {
            line: 48,
            column: 3
          }
        },
        loc: {
          start: {
            line: 48,
            column: 21
          },
          end: {
            line: 58,
            column: 3
          }
        },
        line: 48
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 61,
            column: 2
          },
          end: {
            line: 61,
            column: 3
          }
        },
        loc: {
          start: {
            line: 61,
            column: 43
          },
          end: {
            line: 67,
            column: 3
          }
        },
        line: 61
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 70,
            column: 2
          },
          end: {
            line: 70,
            column: 3
          }
        },
        loc: {
          start: {
            line: 70,
            column: 24
          },
          end: {
            line: 85,
            column: 3
          }
        },
        line: 70
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 88,
            column: 2
          },
          end: {
            line: 88,
            column: 3
          }
        },
        loc: {
          start: {
            line: 88,
            column: 91
          },
          end: {
            line: 109,
            column: 3
          }
        },
        line: 88
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 112,
            column: 2
          },
          end: {
            line: 112,
            column: 3
          }
        },
        loc: {
          start: {
            line: 112,
            column: 40
          },
          end: {
            line: 122,
            column: 3
          }
        },
        line: 112
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 125,
            column: 2
          },
          end: {
            line: 125,
            column: 3
          }
        },
        loc: {
          start: {
            line: 125,
            column: 50
          },
          end: {
            line: 146,
            column: 3
          }
        },
        line: 125
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 88,
            column: 66
          },
          end: {
            line: 88,
            column: 89
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 88,
            column: 85
          },
          end: {
            line: 88,
            column: 89
          }
        }],
        line: 88
      },
      "1": {
        loc: {
          start: {
            line: 101,
            column: 6
          },
          end: {
            line: 103,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 6
          },
          end: {
            line: 103,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "2": {
        loc: {
          start: {
            line: 142,
            column: 13
          },
          end: {
            line: 142,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 142,
            column: 13
          },
          end: {
            line: 142,
            column: 22
          }
        }, {
          start: {
            line: 142,
            column: 26
          },
          end: {
            line: 142,
            column: 62
          }
        }],
        line: 142
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7570ec8b0d49609ab166c03dc90826c066e0c0ac"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_v304x8zb0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_v304x8zb0();
const BaseRepository =
/* istanbul ignore next */
(cov_v304x8zb0().s[0]++, require('./base.repository'));
class BookingRepository extends BaseRepository {
  constructor(model) {
    /* istanbul ignore next */
    cov_v304x8zb0().f[0]++;
    cov_v304x8zb0().s[1]++;
    super(model);
  }

  // Find bookings by user
  async findByUser(userId) {
    /* istanbul ignore next */
    cov_v304x8zb0().f[1]++;
    cov_v304x8zb0().s[2]++;
    try {
      /* istanbul ignore next */
      cov_v304x8zb0().s[3]++;
      return await this.model.find({
        user: userId
      }).populate('destination');
    } catch (error) {
      /* istanbul ignore next */
      cov_v304x8zb0().s[4]++;
      throw error;
    }
  }

  // Find bookings by destination
  async findByDestination(destinationId) {
    /* istanbul ignore next */
    cov_v304x8zb0().f[2]++;
    cov_v304x8zb0().s[5]++;
    try {
      /* istanbul ignore next */
      cov_v304x8zb0().s[6]++;
      return await this.model.find({
        destination: destinationId
      }).populate('user');
    } catch (error) {
      /* istanbul ignore next */
      cov_v304x8zb0().s[7]++;
      throw error;
    }
  }

  // Find bookings by status
  async findByStatus(status) {
    /* istanbul ignore next */
    cov_v304x8zb0().f[3]++;
    cov_v304x8zb0().s[8]++;
    try {
      /* istanbul ignore next */
      cov_v304x8zb0().s[9]++;
      return await this.model.find({
        status
      }).populate('user destination');
    } catch (error) {
      /* istanbul ignore next */
      cov_v304x8zb0().s[10]++;
      throw error;
    }
  }

  // Find bookings by date range
  async findByDateRange(startDate, endDate) {
    /* istanbul ignore next */
    cov_v304x8zb0().f[4]++;
    cov_v304x8zb0().s[11]++;
    try {
      /* istanbul ignore next */
      cov_v304x8zb0().s[12]++;
      return await this.model.find({
        checkIn: {
          $gte: startDate
        },
        checkOut: {
          $lte: endDate
        }
      }).populate('user destination');
    } catch (error) {
      /* istanbul ignore next */
      cov_v304x8zb0().s[13]++;
      throw error;
    }
  }

  // Find active bookings
  async findActive() {
    /* istanbul ignore next */
    cov_v304x8zb0().f[5]++;
    cov_v304x8zb0().s[14]++;
    try {
      const now =
      /* istanbul ignore next */
      (cov_v304x8zb0().s[15]++, new Date());
      /* istanbul ignore next */
      cov_v304x8zb0().s[16]++;
      return await this.model.find({
        status: {
          $in: ['confirmed', 'pending']
        },
        checkOut: {
          $gte: now
        }
      }).populate('user destination');
    } catch (error) {
      /* istanbul ignore next */
      cov_v304x8zb0().s[17]++;
      throw error;
    }
  }

  // Find bookings by payment status
  async findByPaymentStatus(paymentStatus) {
    /* istanbul ignore next */
    cov_v304x8zb0().f[6]++;
    cov_v304x8zb0().s[18]++;
    try {
      /* istanbul ignore next */
      cov_v304x8zb0().s[19]++;
      return await this.model.find({
        paymentStatus
      }).populate('user destination');
    } catch (error) {
      /* istanbul ignore next */
      cov_v304x8zb0().s[20]++;
      throw error;
    }
  }

  // Get booking statistics
  async getStatistics() {
    /* istanbul ignore next */
    cov_v304x8zb0().f[7]++;
    cov_v304x8zb0().s[21]++;
    try {
      const stats =
      /* istanbul ignore next */
      (cov_v304x8zb0().s[22]++, await this.model.aggregate([{
        $group: {
          _id: '$status',
          count: {
            $sum: 1
          },
          totalRevenue: {
            $sum: '$totalAmount'
          }
        }
      }]));
      /* istanbul ignore next */
      cov_v304x8zb0().s[23]++;
      return stats;
    } catch (error) {
      /* istanbul ignore next */
      cov_v304x8zb0().s[24]++;
      throw error;
    }
  }

  // Find overlapping bookings for a destination
  async findOverlappingBookings(destinationId, checkIn, checkOut, excludeBookingId =
  /* istanbul ignore next */
  (cov_v304x8zb0().b[0][0]++, null)) {
    /* istanbul ignore next */
    cov_v304x8zb0().f[8]++;
    cov_v304x8zb0().s[25]++;
    try {
      const query =
      /* istanbul ignore next */
      (cov_v304x8zb0().s[26]++, {
        destination: destinationId,
        status: {
          $in: ['confirmed', 'pending']
        },
        $or: [{
          checkIn: {
            $lt: checkOut
          },
          checkOut: {
            $gt: checkIn
          }
        }]
      });
      /* istanbul ignore next */
      cov_v304x8zb0().s[27]++;
      if (excludeBookingId) {
        /* istanbul ignore next */
        cov_v304x8zb0().b[1][0]++;
        cov_v304x8zb0().s[28]++;
        query._id = {
          $ne: excludeBookingId
        };
      } else
      /* istanbul ignore next */
      {
        cov_v304x8zb0().b[1][1]++;
      }
      cov_v304x8zb0().s[29]++;
      return await this.model.find(query);
    } catch (error) {
      /* istanbul ignore next */
      cov_v304x8zb0().s[30]++;
      throw error;
    }
  }

  // Update booking status
  async updateStatus(bookingId, status) {
    /* istanbul ignore next */
    cov_v304x8zb0().f[9]++;
    cov_v304x8zb0().s[31]++;
    try {
      /* istanbul ignore next */
      cov_v304x8zb0().s[32]++;
      return await this.model.findByIdAndUpdate(bookingId, {
        $set: {
          status
        }
      }, {
        new: true
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_v304x8zb0().s[33]++;
      throw error;
    }
  }

  // Get revenue by date range
  async getRevenueByDateRange(startDate, endDate) {
    /* istanbul ignore next */
    cov_v304x8zb0().f[10]++;
    cov_v304x8zb0().s[34]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_v304x8zb0().s[35]++, await this.model.aggregate([{
        $match: {
          createdAt: {
            $gte: startDate,
            $lte: endDate
          },
          status: 'confirmed'
        }
      }, {
        $group: {
          _id: null,
          totalRevenue: {
            $sum: '$totalAmount'
          },
          bookingCount: {
            $sum: 1
          }
        }
      }]));
      /* istanbul ignore next */
      cov_v304x8zb0().s[36]++;
      return /* istanbul ignore next */(cov_v304x8zb0().b[2][0]++, result[0]) ||
      /* istanbul ignore next */
      (cov_v304x8zb0().b[2][1]++, {
        totalRevenue: 0,
        bookingCount: 0
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_v304x8zb0().s[37]++;
      throw error;
    }
  }
}
/* istanbul ignore next */
cov_v304x8zb0().s[38]++;
module.exports = BookingRepository;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,