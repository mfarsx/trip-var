6051a10910fc851738b8c9a8beedc79c
/* istanbul ignore next */
function cov_18smrsmg8w() {
  var path = "/Users/mfarsx/dev/tripvar/tripvar-server/src/controllers/payment.controller.js";
  var hash = "78d1a29631de6d7b3d7ce44c612214f340125c69";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/mfarsx/dev/tripvar/tripvar-server/src/controllers/payment.controller.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 16
        },
        end: {
          line: 1,
          column: 50
        }
      },
      "1": {
        start: {
          line: 2,
          column: 58
        },
        end: {
          line: 2,
          column: 84
        }
      },
      "2": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 56
        }
      },
      "3": {
        start: {
          line: 4,
          column: 24
        },
        end: {
          line: 4,
          column: 50
        }
      },
      "4": {
        start: {
          line: 7,
          column: 34
        },
        end: {
          line: 30,
          column: 1
        }
      },
      "5": {
        start: {
          line: 9,
          column: 2
        },
        end: {
          line: 9,
          column: 58
        }
      },
      "6": {
        start: {
          line: 9,
          column: 31
        },
        end: {
          line: 9,
          column: 56
        }
      },
      "7": {
        start: {
          line: 12,
          column: 18
        },
        end: {
          line: 12,
          column: 38
        }
      },
      "8": {
        start: {
          line: 14,
          column: 2
        },
        end: {
          line: 29,
          column: 3
        }
      },
      "9": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 22,
          column: 6
        }
      },
      "10": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 28,
          column: 6
        }
      },
      "11": {
        start: {
          line: 33,
          column: 33
        },
        end: {
          line: 55,
          column: 1
        }
      },
      "12": {
        start: {
          line: 35,
          column: 2
        },
        end: {
          line: 35,
          column: 58
        }
      },
      "13": {
        start: {
          line: 35,
          column: 31
        },
        end: {
          line: 35,
          column: 56
        }
      },
      "14": {
        start: {
          line: 38,
          column: 18
        },
        end: {
          line: 38,
          column: 38
        }
      },
      "15": {
        start: {
          line: 40,
          column: 2
        },
        end: {
          line: 54,
          column: 3
        }
      },
      "16": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 47,
          column: 6
        }
      },
      "17": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 53,
          column: 6
        }
      },
      "18": {
        start: {
          line: 58,
          column: 23
        },
        end: {
          line: 131,
          column: 1
        }
      },
      "19": {
        start: {
          line: 59,
          column: 2
        },
        end: {
          line: 130,
          column: 3
        }
      },
      "20": {
        start: {
          line: 60,
          column: 26
        },
        end: {
          line: 60,
          column: 36
        }
      },
      "21": {
        start: {
          line: 61,
          column: 46
        },
        end: {
          line: 61,
          column: 54
        }
      },
      "22": {
        start: {
          line: 62,
          column: 19
        },
        end: {
          line: 62,
          column: 30
        }
      },
      "23": {
        start: {
          line: 65,
          column: 20
        },
        end: {
          line: 65,
          column: 77
        }
      },
      "24": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 69,
          column: 5
        }
      },
      "25": {
        start: {
          line: 68,
          column: 6
        },
        end: {
          line: 68,
          column: 51
        }
      },
      "26": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 74,
          column: 5
        }
      },
      "27": {
        start: {
          line: 73,
          column: 6
        },
        end: {
          line: 73,
          column: 49
        }
      },
      "28": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "29": {
        start: {
          line: 78,
          column: 6
        },
        end: {
          line: 78,
          column: 57
        }
      },
      "30": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 84,
          column: 5
        }
      },
      "31": {
        start: {
          line: 83,
          column: 6
        },
        end: {
          line: 83,
          column: 78
        }
      },
      "32": {
        start: {
          line: 88,
          column: 26
        },
        end: {
          line: 93,
          column: 6
        }
      },
      "33": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 125,
          column: 5
        }
      },
      "34": {
        start: {
          line: 97,
          column: 6
        },
        end: {
          line: 97,
          column: 37
        }
      },
      "35": {
        start: {
          line: 98,
          column: 6
        },
        end: {
          line: 98,
          column: 62
        }
      },
      "36": {
        start: {
          line: 99,
          column: 6
        },
        end: {
          line: 99,
          column: 44
        }
      },
      "37": {
        start: {
          line: 101,
          column: 6
        },
        end: {
          line: 101,
          column: 27
        }
      },
      "38": {
        start: {
          line: 103,
          column: 6
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "39": {
        start: {
          line: 110,
          column: 6
        },
        end: {
          line: 118,
          column: 8
        }
      },
      "40": {
        start: {
          line: 121,
          column: 6
        },
        end: {
          line: 121,
          column: 39
        }
      },
      "41": {
        start: {
          line: 122,
          column: 6
        },
        end: {
          line: 122,
          column: 27
        }
      },
      "42": {
        start: {
          line: 124,
          column: 6
        },
        end: {
          line: 124,
          column: 84
        }
      },
      "43": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 128,
          column: 95
        }
      },
      "44": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 129,
          column: 14
        }
      },
      "45": {
        start: {
          line: 134,
          column: 25
        },
        end: {
          line: 173,
          column: 1
        }
      },
      "46": {
        start: {
          line: 135,
          column: 2
        },
        end: {
          line: 172,
          column: 3
        }
      },
      "47": {
        start: {
          line: 136,
          column: 26
        },
        end: {
          line: 136,
          column: 36
        }
      },
      "48": {
        start: {
          line: 137,
          column: 19
        },
        end: {
          line: 137,
          column: 30
        }
      },
      "49": {
        start: {
          line: 139,
          column: 20
        },
        end: {
          line: 141,
          column: 39
        }
      },
      "50": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 145,
          column: 5
        }
      },
      "51": {
        start: {
          line: 144,
          column: 6
        },
        end: {
          line: 144,
          column: 51
        }
      },
      "52": {
        start: {
          line: 148,
          column: 4
        },
        end: {
          line: 150,
          column: 5
        }
      },
      "53": {
        start: {
          line: 149,
          column: 6
        },
        end: {
          line: 149,
          column: 49
        }
      },
      "54": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 167,
          column: 6
        }
      },
      "55": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 170,
          column: 100
        }
      },
      "56": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 171,
          column: 14
        }
      },
      "57": {
        start: {
          line: 176,
          column: 22
        },
        end: {
          line: 250,
          column: 1
        }
      },
      "58": {
        start: {
          line: 177,
          column: 2
        },
        end: {
          line: 249,
          column: 3
        }
      },
      "59": {
        start: {
          line: 178,
          column: 26
        },
        end: {
          line: 178,
          column: 36
        }
      },
      "60": {
        start: {
          line: 179,
          column: 23
        },
        end: {
          line: 179,
          column: 31
        }
      },
      "61": {
        start: {
          line: 180,
          column: 19
        },
        end: {
          line: 180,
          column: 30
        }
      },
      "62": {
        start: {
          line: 182,
          column: 20
        },
        end: {
          line: 182,
          column: 53
        }
      },
      "63": {
        start: {
          line: 184,
          column: 4
        },
        end: {
          line: 186,
          column: 5
        }
      },
      "64": {
        start: {
          line: 185,
          column: 6
        },
        end: {
          line: 185,
          column: 51
        }
      },
      "65": {
        start: {
          line: 189,
          column: 4
        },
        end: {
          line: 191,
          column: 5
        }
      },
      "66": {
        start: {
          line: 190,
          column: 6
        },
        end: {
          line: 190,
          column: 49
        }
      },
      "67": {
        start: {
          line: 194,
          column: 4
        },
        end: {
          line: 196,
          column: 5
        }
      },
      "68": {
        start: {
          line: 195,
          column: 6
        },
        end: {
          line: 195,
          column: 62
        }
      },
      "69": {
        start: {
          line: 199,
          column: 4
        },
        end: {
          line: 201,
          column: 5
        }
      },
      "70": {
        start: {
          line: 200,
          column: 6
        },
        end: {
          line: 200,
          column: 61
        }
      },
      "71": {
        start: {
          line: 204,
          column: 25
        },
        end: {
          line: 204,
          column: 50
        }
      },
      "72": {
        start: {
          line: 206,
          column: 4
        },
        end: {
          line: 208,
          column: 5
        }
      },
      "73": {
        start: {
          line: 207,
          column: 6
        },
        end: {
          line: 207,
          column: 72
        }
      },
      "74": {
        start: {
          line: 211,
          column: 25
        },
        end: {
          line: 215,
          column: 6
        }
      },
      "75": {
        start: {
          line: 217,
          column: 4
        },
        end: {
          line: 244,
          column: 5
        }
      },
      "76": {
        start: {
          line: 219,
          column: 6
        },
        end: {
          line: 219,
          column: 41
        }
      },
      "77": {
        start: {
          line: 220,
          column: 6
        },
        end: {
          line: 220,
          column: 42
        }
      },
      "78": {
        start: {
          line: 221,
          column: 6
        },
        end: {
          line: 221,
          column: 38
        }
      },
      "79": {
        start: {
          line: 222,
          column: 6
        },
        end: {
          line: 222,
          column: 42
        }
      },
      "80": {
        start: {
          line: 224,
          column: 6
        },
        end: {
          line: 224,
          column: 27
        }
      },
      "81": {
        start: {
          line: 226,
          column: 6
        },
        end: {
          line: 231,
          column: 9
        }
      },
      "82": {
        start: {
          line: 233,
          column: 6
        },
        end: {
          line: 241,
          column: 8
        }
      },
      "83": {
        start: {
          line: 243,
          column: 6
        },
        end: {
          line: 243,
          column: 82
        }
      },
      "84": {
        start: {
          line: 247,
          column: 4
        },
        end: {
          line: 247,
          column: 94
        }
      },
      "85": {
        start: {
          line: 248,
          column: 4
        },
        end: {
          line: 248,
          column: 14
        }
      },
      "86": {
        start: {
          line: 253,
          column: 26
        },
        end: {
          line: 322,
          column: 1
        }
      },
      "87": {
        start: {
          line: 254,
          column: 2
        },
        end: {
          line: 321,
          column: 3
        }
      },
      "88": {
        start: {
          line: 255,
          column: 19
        },
        end: {
          line: 255,
          column: 30
        }
      },
      "89": {
        start: {
          line: 256,
          column: 45
        },
        end: {
          line: 256,
          column: 54
        }
      },
      "90": {
        start: {
          line: 259,
          column: 18
        },
        end: {
          line: 259,
          column: 34
        }
      },
      "91": {
        start: {
          line: 260,
          column: 4
        },
        end: {
          line: 262,
          column: 5
        }
      },
      "92": {
        start: {
          line: 261,
          column: 6
        },
        end: {
          line: 261,
          column: 35
        }
      },
      "93": {
        start: {
          line: 265,
          column: 17
        },
        end: {
          line: 265,
          column: 63
        }
      },
      "94": {
        start: {
          line: 268,
          column: 21
        },
        end: {
          line: 273,
          column: 33
        }
      },
      "95": {
        start: {
          line: 276,
          column: 18
        },
        end: {
          line: 276,
          column: 53
        }
      },
      "96": {
        start: {
          line: 279,
          column: 18
        },
        end: {
          line: 294,
          column: 6
        }
      },
      "97": {
        start: {
          line: 296,
          column: 25
        },
        end: {
          line: 301,
          column: 5
        }
      },
      "98": {
        start: {
          line: 303,
          column: 4
        },
        end: {
          line: 316,
          column: 6
        }
      },
      "99": {
        start: {
          line: 319,
          column: 4
        },
        end: {
          line: 319,
          column: 90
        }
      },
      "100": {
        start: {
          line: 320,
          column: 4
        },
        end: {
          line: 320,
          column: 14
        }
      },
      "101": {
        start: {
          line: 324,
          column: 0
        },
        end: {
          line: 329,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 34
          },
          end: {
            line: 7,
            column: 35
          }
        },
        loc: {
          start: {
            line: 7,
            column: 56
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 20
          },
          end: {
            line: 9,
            column: 21
          }
        },
        loc: {
          start: {
            line: 9,
            column: 31
          },
          end: {
            line: 9,
            column: 56
          }
        },
        line: 9
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 33,
            column: 33
          },
          end: {
            line: 33,
            column: 34
          }
        },
        loc: {
          start: {
            line: 33,
            column: 54
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 33
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 35,
            column: 20
          },
          end: {
            line: 35,
            column: 21
          }
        },
        loc: {
          start: {
            line: 35,
            column: 31
          },
          end: {
            line: 35,
            column: 56
          }
        },
        line: 35
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 58,
            column: 23
          },
          end: {
            line: 58,
            column: 24
          }
        },
        loc: {
          start: {
            line: 58,
            column: 48
          },
          end: {
            line: 131,
            column: 1
          }
        },
        line: 58
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 134,
            column: 25
          },
          end: {
            line: 134,
            column: 26
          }
        },
        loc: {
          start: {
            line: 134,
            column: 50
          },
          end: {
            line: 173,
            column: 1
          }
        },
        line: 134
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 176,
            column: 22
          },
          end: {
            line: 176,
            column: 23
          }
        },
        loc: {
          start: {
            line: 176,
            column: 47
          },
          end: {
            line: 250,
            column: 1
          }
        },
        line: 176
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 253,
            column: 26
          },
          end: {
            line: 253,
            column: 27
          }
        },
        loc: {
          start: {
            line: 253,
            column: 51
          },
          end: {
            line: 322,
            column: 1
          }
        },
        line: 253
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 2
          },
          end: {
            line: 29,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 2
          },
          end: {
            line: 29,
            column: 3
          }
        }, {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 29,
            column: 3
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 40,
            column: 2
          },
          end: {
            line: 54,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 2
          },
          end: {
            line: 54,
            column: 3
          }
        }, {
          start: {
            line: 48,
            column: 9
          },
          end: {
            line: 54,
            column: 3
          }
        }],
        line: 40
      },
      "2": {
        loc: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "3": {
        loc: {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "4": {
        loc: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "5": {
        loc: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "6": {
        loc: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        }, {
          start: {
            line: 119,
            column: 11
          },
          end: {
            line: 125,
            column: 5
          }
        }],
        line: 95
      },
      "7": {
        loc: {
          start: {
            line: 124,
            column: 32
          },
          end: {
            line: 124,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 32
          },
          end: {
            line: 124,
            column: 51
          }
        }, {
          start: {
            line: 124,
            column: 55
          },
          end: {
            line: 124,
            column: 82
          }
        }],
        line: 124
      },
      "8": {
        loc: {
          start: {
            line: 143,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "9": {
        loc: {
          start: {
            line: 148,
            column: 4
          },
          end: {
            line: 150,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 4
          },
          end: {
            line: 150,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "10": {
        loc: {
          start: {
            line: 184,
            column: 4
          },
          end: {
            line: 186,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 4
          },
          end: {
            line: 186,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "11": {
        loc: {
          start: {
            line: 189,
            column: 4
          },
          end: {
            line: 191,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 4
          },
          end: {
            line: 191,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "12": {
        loc: {
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 189,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 189,
            column: 42
          }
        }, {
          start: {
            line: 189,
            column: 46
          },
          end: {
            line: 189,
            column: 71
          }
        }],
        line: 189
      },
      "13": {
        loc: {
          start: {
            line: 194,
            column: 4
          },
          end: {
            line: 196,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 4
          },
          end: {
            line: 196,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "14": {
        loc: {
          start: {
            line: 199,
            column: 4
          },
          end: {
            line: 201,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 4
          },
          end: {
            line: 201,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      },
      "15": {
        loc: {
          start: {
            line: 206,
            column: 4
          },
          end: {
            line: 208,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 4
          },
          end: {
            line: 208,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "16": {
        loc: {
          start: {
            line: 217,
            column: 4
          },
          end: {
            line: 244,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 4
          },
          end: {
            line: 244,
            column: 5
          }
        }, {
          start: {
            line: 242,
            column: 11
          },
          end: {
            line: 244,
            column: 5
          }
        }],
        line: 217
      },
      "17": {
        loc: {
          start: {
            line: 243,
            column: 32
          },
          end: {
            line: 243,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 243,
            column: 32
          },
          end: {
            line: 243,
            column: 50
          }
        }, {
          start: {
            line: 243,
            column: 54
          },
          end: {
            line: 243,
            column: 80
          }
        }],
        line: 243
      },
      "18": {
        loc: {
          start: {
            line: 256,
            column: 12
          },
          end: {
            line: 256,
            column: 20
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 256,
            column: 19
          },
          end: {
            line: 256,
            column: 20
          }
        }],
        line: 256
      },
      "19": {
        loc: {
          start: {
            line: 256,
            column: 22
          },
          end: {
            line: 256,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 256,
            column: 30
          },
          end: {
            line: 256,
            column: 32
          }
        }],
        line: 256
      },
      "20": {
        loc: {
          start: {
            line: 260,
            column: 4
          },
          end: {
            line: 262,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 4
          },
          end: {
            line: 262,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 260
      },
      "21": {
        loc: {
          start: {
            line: 296,
            column: 25
          },
          end: {
            line: 301,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 296,
            column: 44
          },
          end: {
            line: 296,
            column: 52
          }
        }, {
          start: {
            line: 296,
            column: 55
          },
          end: {
            line: 301,
            column: 5
          }
        }],
        line: 296
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0],
      "19": [0],
      "20": [0, 0],
      "21": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "78d1a29631de6d7b3d7ce44c612214f340125c69"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_18smrsmg8w = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_18smrsmg8w();
const Booking =
/* istanbul ignore next */
(cov_18smrsmg8w().s[0]++, require('../models/booking.model'));
const {
  ValidationError,
  NotFoundError,
  ConflictError
} =
/* istanbul ignore next */
(cov_18smrsmg8w().s[1]++, require('../utils/errors'));
const {
  successResponse
} =
/* istanbul ignore next */
(cov_18smrsmg8w().s[2]++, require('../utils/response'));
const {
  info,
  error
} =
/* istanbul ignore next */
(cov_18smrsmg8w().s[3]++, require('../utils/logger'));

// Simulate payment processing (replace with real payment provider integration)
/* istanbul ignore next */
cov_18smrsmg8w().s[4]++;
const simulatePaymentProcessing = async paymentData => {
  /* istanbul ignore next */
  cov_18smrsmg8w().f[0]++;
  cov_18smrsmg8w().s[5]++;
  // Simulate processing delay
  await new Promise(resolve => {
    /* istanbul ignore next */
    cov_18smrsmg8w().f[1]++;
    cov_18smrsmg8w().s[6]++;
    return setTimeout(resolve, 1000);
  });

  // Simulate 95% success rate
  const success =
  /* istanbul ignore next */
  (cov_18smrsmg8w().s[7]++, Math.random() > 0.05);
  /* istanbul ignore next */
  cov_18smrsmg8w().s[8]++;
  if (success) {
    /* istanbul ignore next */
    cov_18smrsmg8w().b[0][0]++;
    cov_18smrsmg8w().s[9]++;
    return {
      success: true,
      paymentIntentId: `pi_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
      transactionId: `txn_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
      amount: paymentData.amount,
      currency: 'USD',
      status: 'succeeded'
    };
  } else {
    /* istanbul ignore next */
    cov_18smrsmg8w().b[0][1]++;
    cov_18smrsmg8w().s[10]++;
    return {
      success: false,
      error: 'Payment processing failed',
      errorCode: 'PAYMENT_FAILED'
    };
  }
};

// Simulate refund processing (replace with real payment provider integration)
/* istanbul ignore next */
cov_18smrsmg8w().s[11]++;
const simulateRefundProcessing = async refundData => {
  /* istanbul ignore next */
  cov_18smrsmg8w().f[2]++;
  cov_18smrsmg8w().s[12]++;
  // Simulate processing delay
  await new Promise(resolve => {
    /* istanbul ignore next */
    cov_18smrsmg8w().f[3]++;
    cov_18smrsmg8w().s[13]++;
    return setTimeout(resolve, 1000);
  });

  // Simulate 98% success rate for refunds
  const success =
  /* istanbul ignore next */
  (cov_18smrsmg8w().s[14]++, Math.random() > 0.02);
  /* istanbul ignore next */
  cov_18smrsmg8w().s[15]++;
  if (success) {
    /* istanbul ignore next */
    cov_18smrsmg8w().b[1][0]++;
    cov_18smrsmg8w().s[16]++;
    return {
      success: true,
      refundId: `re_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
      amount: refundData.amount,
      currency: 'USD',
      status: 'succeeded'
    };
  } else {
    /* istanbul ignore next */
    cov_18smrsmg8w().b[1][1]++;
    cov_18smrsmg8w().s[17]++;
    return {
      success: false,
      error: 'Refund processing failed',
      errorCode: 'REFUND_FAILED'
    };
  }
};

// Process payment for a booking
/* istanbul ignore next */
cov_18smrsmg8w().s[18]++;
const processPayment = async (req, res, next) => {
  /* istanbul ignore next */
  cov_18smrsmg8w().f[4]++;
  cov_18smrsmg8w().s[19]++;
  try {
    const {
      bookingId
    } =
    /* istanbul ignore next */
    (cov_18smrsmg8w().s[20]++, req.params);
    const {
      paymentMethod,
      paymentDetails
    } =
    /* istanbul ignore next */
    (cov_18smrsmg8w().s[21]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_18smrsmg8w().s[22]++, req.user.id);

    // Find the booking
    const booking =
    /* istanbul ignore next */
    (cov_18smrsmg8w().s[23]++, await Booking.findById(bookingId).populate('destination'));
    /* istanbul ignore next */
    cov_18smrsmg8w().s[24]++;
    if (!booking) {
      /* istanbul ignore next */
      cov_18smrsmg8w().b[2][0]++;
      cov_18smrsmg8w().s[25]++;
      throw new NotFoundError('Booking not found');
    } else
    /* istanbul ignore next */
    {
      cov_18smrsmg8w().b[2][1]++;
    }

    // Check if user owns this booking
    cov_18smrsmg8w().s[26]++;
    if (booking.user.toString() !== userId) {
      /* istanbul ignore next */
      cov_18smrsmg8w().b[3][0]++;
      cov_18smrsmg8w().s[27]++;
      throw new ValidationError('Access denied');
    } else
    /* istanbul ignore next */
    {
      cov_18smrsmg8w().b[3][1]++;
    }

    // Check if booking is already paid
    cov_18smrsmg8w().s[28]++;
    if (booking.paymentStatus === 'paid') {
      /* istanbul ignore next */
      cov_18smrsmg8w().b[4][0]++;
      cov_18smrsmg8w().s[29]++;
      throw new ConflictError('Booking is already paid');
    } else
    /* istanbul ignore next */
    {
      cov_18smrsmg8w().b[4][1]++;
    }

    // Check if booking is cancelled
    cov_18smrsmg8w().s[30]++;
    if (booking.status === 'cancelled') {
      /* istanbul ignore next */
      cov_18smrsmg8w().b[5][0]++;
      cov_18smrsmg8w().s[31]++;
      throw new ConflictError('Cannot process payment for cancelled booking');
    } else
    /* istanbul ignore next */
    {
      cov_18smrsmg8w().b[5][1]++;
    }

    // Simulate payment processing
    // In a real application, you would integrate with payment providers like Stripe, PayPal, etc.
    const paymentResult =
    /* istanbul ignore next */
    (cov_18smrsmg8w().s[32]++, await simulatePaymentProcessing({
      amount: booking.totalAmount,
      paymentMethod,
      paymentDetails,
      bookingId
    }));
    /* istanbul ignore next */
    cov_18smrsmg8w().s[33]++;
    if (paymentResult.success) {
      /* istanbul ignore next */
      cov_18smrsmg8w().b[6][0]++;
      cov_18smrsmg8w().s[34]++;
      // Update booking with payment information
      booking.paymentStatus = 'paid';
      /* istanbul ignore next */
      cov_18smrsmg8w().s[35]++;
      booking.paymentIntentId = paymentResult.paymentIntentId;
      /* istanbul ignore next */
      cov_18smrsmg8w().s[36]++;
      booking.paymentMethod = paymentMethod;
      /* istanbul ignore next */
      cov_18smrsmg8w().s[37]++;
      await booking.save();
      /* istanbul ignore next */
      cov_18smrsmg8w().s[38]++;
      info('Payment processed successfully', {
        bookingId,
        userId,
        amount: booking.totalAmount,
        paymentMethod
      });
      /* istanbul ignore next */
      cov_18smrsmg8w().s[39]++;
      res.json(successResponse({
        booking,
        paymentResult
      }, 'Payment processed successfully'));
    } else {
      /* istanbul ignore next */
      cov_18smrsmg8w().b[6][1]++;
      cov_18smrsmg8w().s[40]++;
      // Payment failed
      booking.paymentStatus = 'failed';
      /* istanbul ignore next */
      cov_18smrsmg8w().s[41]++;
      await booking.save();
      /* istanbul ignore next */
      cov_18smrsmg8w().s[42]++;
      throw new ValidationError(
      /* istanbul ignore next */
      (cov_18smrsmg8w().b[7][0]++, paymentResult.error) ||
      /* istanbul ignore next */
      (cov_18smrsmg8w().b[7][1]++, 'Payment processing failed'));
    }
  } catch (err) {
    /* istanbul ignore next */
    cov_18smrsmg8w().s[43]++;
    error('Error processing payment', {
      error: err.message,
      bookingId: req.params.bookingId
    });
    /* istanbul ignore next */
    cov_18smrsmg8w().s[44]++;
    next(err);
  }
};

// Get payment status for a booking
/* istanbul ignore next */
cov_18smrsmg8w().s[45]++;
const getPaymentStatus = async (req, res, next) => {
  /* istanbul ignore next */
  cov_18smrsmg8w().f[5]++;
  cov_18smrsmg8w().s[46]++;
  try {
    const {
      bookingId
    } =
    /* istanbul ignore next */
    (cov_18smrsmg8w().s[47]++, req.params);
    const userId =
    /* istanbul ignore next */
    (cov_18smrsmg8w().s[48]++, req.user.id);
    const booking =
    /* istanbul ignore next */
    (cov_18smrsmg8w().s[49]++, await Booking.findById(bookingId).select('paymentStatus paymentMethod totalAmount paymentIntentId createdAt').populate('destination', 'title'));
    /* istanbul ignore next */
    cov_18smrsmg8w().s[50]++;
    if (!booking) {
      /* istanbul ignore next */
      cov_18smrsmg8w().b[8][0]++;
      cov_18smrsmg8w().s[51]++;
      throw new NotFoundError('Booking not found');
    } else
    /* istanbul ignore next */
    {
      cov_18smrsmg8w().b[8][1]++;
    }

    // Check if user owns this booking
    cov_18smrsmg8w().s[52]++;
    if (booking.user.toString() !== userId) {
      /* istanbul ignore next */
      cov_18smrsmg8w().b[9][0]++;
      cov_18smrsmg8w().s[53]++;
      throw new ValidationError('Access denied');
    } else
    /* istanbul ignore next */
    {
      cov_18smrsmg8w().b[9][1]++;
    }
    cov_18smrsmg8w().s[54]++;
    res.json(successResponse({
      booking: {
        id: booking._id,
        destination: booking.destination,
        paymentStatus: booking.paymentStatus,
        paymentMethod: booking.paymentMethod,
        totalAmount: booking.totalAmount,
        paymentIntentId: booking.paymentIntentId,
        createdAt: booking.createdAt
      }
    }, 'Payment status retrieved successfully'));
  } catch (err) {
    /* istanbul ignore next */
    cov_18smrsmg8w().s[55]++;
    error('Error fetching payment status', {
      error: err.message,
      bookingId: req.params.bookingId
    });
    /* istanbul ignore next */
    cov_18smrsmg8w().s[56]++;
    next(err);
  }
};

// Refund a booking
/* istanbul ignore next */
cov_18smrsmg8w().s[57]++;
const processRefund = async (req, res, next) => {
  /* istanbul ignore next */
  cov_18smrsmg8w().f[6]++;
  cov_18smrsmg8w().s[58]++;
  try {
    const {
      bookingId
    } =
    /* istanbul ignore next */
    (cov_18smrsmg8w().s[59]++, req.params);
    const {
      reason
    } =
    /* istanbul ignore next */
    (cov_18smrsmg8w().s[60]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_18smrsmg8w().s[61]++, req.user.id);
    const booking =
    /* istanbul ignore next */
    (cov_18smrsmg8w().s[62]++, await Booking.findById(bookingId));
    /* istanbul ignore next */
    cov_18smrsmg8w().s[63]++;
    if (!booking) {
      /* istanbul ignore next */
      cov_18smrsmg8w().b[10][0]++;
      cov_18smrsmg8w().s[64]++;
      throw new NotFoundError('Booking not found');
    } else
    /* istanbul ignore next */
    {
      cov_18smrsmg8w().b[10][1]++;
    }

    // Check if user owns this booking or is admin
    cov_18smrsmg8w().s[65]++;
    if (
    /* istanbul ignore next */
    (cov_18smrsmg8w().b[12][0]++, booking.user.toString() !== userId) &&
    /* istanbul ignore next */
    (cov_18smrsmg8w().b[12][1]++, req.user.role !== 'admin')) {
      /* istanbul ignore next */
      cov_18smrsmg8w().b[11][0]++;
      cov_18smrsmg8w().s[66]++;
      throw new ValidationError('Access denied');
    } else
    /* istanbul ignore next */
    {
      cov_18smrsmg8w().b[11][1]++;
    }

    // Check if booking is paid
    cov_18smrsmg8w().s[67]++;
    if (booking.paymentStatus !== 'paid') {
      /* istanbul ignore next */
      cov_18smrsmg8w().b[13][0]++;
      cov_18smrsmg8w().s[68]++;
      throw new ConflictError('Cannot refund unpaid booking');
    } else
    /* istanbul ignore next */
    {
      cov_18smrsmg8w().b[13][1]++;
    }

    // Check if booking is already refunded
    cov_18smrsmg8w().s[69]++;
    if (booking.paymentStatus === 'refunded') {
      /* istanbul ignore next */
      cov_18smrsmg8w().b[14][0]++;
      cov_18smrsmg8w().s[70]++;
      throw new ConflictError('Booking is already refunded');
    } else
    /* istanbul ignore next */
    {
      cov_18smrsmg8w().b[14][1]++;
    }

    // Calculate refund amount
    const refundAmount =
    /* istanbul ignore next */
    (cov_18smrsmg8w().s[71]++, booking.calculateRefund());
    /* istanbul ignore next */
    cov_18smrsmg8w().s[72]++;
    if (refundAmount === 0) {
      /* istanbul ignore next */
      cov_18smrsmg8w().b[15][0]++;
      cov_18smrsmg8w().s[73]++;
      throw new ValidationError('No refund available for this booking');
    } else
    /* istanbul ignore next */
    {
      cov_18smrsmg8w().b[15][1]++;
    }

    // Simulate refund processing
    const refundResult =
    /* istanbul ignore next */
    (cov_18smrsmg8w().s[74]++, await simulateRefundProcessing({
      paymentIntentId: booking.paymentIntentId,
      amount: refundAmount,
      reason
    }));
    /* istanbul ignore next */
    cov_18smrsmg8w().s[75]++;
    if (refundResult.success) {
      /* istanbul ignore next */
      cov_18smrsmg8w().b[16][0]++;
      cov_18smrsmg8w().s[76]++;
      // Update booking with refund information
      booking.paymentStatus = 'refunded';
      /* istanbul ignore next */
      cov_18smrsmg8w().s[77]++;
      booking.refundAmount = refundAmount;
      /* istanbul ignore next */
      cov_18smrsmg8w().s[78]++;
      booking.refundedAt = new Date();
      /* istanbul ignore next */
      cov_18smrsmg8w().s[79]++;
      booking.cancellationReason = reason;
      /* istanbul ignore next */
      cov_18smrsmg8w().s[80]++;
      await booking.save();
      /* istanbul ignore next */
      cov_18smrsmg8w().s[81]++;
      info('Refund processed successfully', {
        bookingId,
        userId,
        refundAmount,
        reason
      });
      /* istanbul ignore next */
      cov_18smrsmg8w().s[82]++;
      res.json(successResponse({
        booking,
        refundResult
      }, 'Refund processed successfully'));
    } else {
      /* istanbul ignore next */
      cov_18smrsmg8w().b[16][1]++;
      cov_18smrsmg8w().s[83]++;
      throw new ValidationError(
      /* istanbul ignore next */
      (cov_18smrsmg8w().b[17][0]++, refundResult.error) ||
      /* istanbul ignore next */
      (cov_18smrsmg8w().b[17][1]++, 'Refund processing failed'));
    }
  } catch (err) {
    /* istanbul ignore next */
    cov_18smrsmg8w().s[84]++;
    error('Error processing refund', {
      error: err.message,
      bookingId: req.params.bookingId
    });
    /* istanbul ignore next */
    cov_18smrsmg8w().s[85]++;
    next(err);
  }
};

// Get payment history for a user
/* istanbul ignore next */
cov_18smrsmg8w().s[86]++;
const getPaymentHistory = async (req, res, next) => {
  /* istanbul ignore next */
  cov_18smrsmg8w().f[7]++;
  cov_18smrsmg8w().s[87]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_18smrsmg8w().s[88]++, req.user.id);
    const {
      page =
      /* istanbul ignore next */
      (cov_18smrsmg8w().b[18][0]++, 1),
      limit =
      /* istanbul ignore next */
      (cov_18smrsmg8w().b[19][0]++, 10),
      status
    } =
    /* istanbul ignore next */
    (cov_18smrsmg8w().s[89]++, req.query);

    // Build query
    const query =
    /* istanbul ignore next */
    (cov_18smrsmg8w().s[90]++, {
      user: userId
    });
    /* istanbul ignore next */
    cov_18smrsmg8w().s[91]++;
    if (status) {
      /* istanbul ignore next */
      cov_18smrsmg8w().b[20][0]++;
      cov_18smrsmg8w().s[92]++;
      query.paymentStatus = status;
    } else
    /* istanbul ignore next */
    {
      cov_18smrsmg8w().b[20][1]++;
    }

    // Calculate pagination
    const skip =
    /* istanbul ignore next */
    (cov_18smrsmg8w().s[93]++, (parseInt(page, 10) - 1) * parseInt(limit, 10));

    // Get bookings with payment information
    const bookings =
    /* istanbul ignore next */
    (cov_18smrsmg8w().s[94]++, await Booking.find(query).select('paymentStatus paymentMethod totalAmount paymentIntentId createdAt refundAmount refundedAt').populate('destination', 'title location imageUrl').sort({
      createdAt: -1
    }).skip(skip).limit(parseInt(limit, 10)));

    // Get total count
    const total =
    /* istanbul ignore next */
    (cov_18smrsmg8w().s[95]++, await Booking.countDocuments(query));

    // Calculate payment statistics
    const stats =
    /* istanbul ignore next */
    (cov_18smrsmg8w().s[96]++, await Booking.aggregate([{
      $match: {
        user: userId
      }
    }, {
      $group: {
        _id: null,
        totalSpent: {
          $sum: '$totalAmount'
        },
        totalRefunded: {
          $sum: {
            $ifNull: ['$refundAmount', 0]
          }
        },
        paidBookings: {
          $sum: {
            $cond: [{
              $eq: ['$paymentStatus', 'paid']
            }, 1, 0]
          }
        },
        refundedBookings: {
          $sum: {
            $cond: [{
              $eq: ['$paymentStatus', 'refunded']
            }, 1, 0]
          }
        }
      }
    }]));
    const paymentStats =
    /* istanbul ignore next */
    (cov_18smrsmg8w().s[97]++, stats.length > 0 ?
    /* istanbul ignore next */
    (cov_18smrsmg8w().b[21][0]++, stats[0]) :
    /* istanbul ignore next */
    (cov_18smrsmg8w().b[21][1]++, {
      totalSpent: 0,
      totalRefunded: 0,
      paidBookings: 0,
      refundedBookings: 0
    }));
    /* istanbul ignore next */
    cov_18smrsmg8w().s[98]++;
    res.json(successResponse({
      bookings,
      paymentStats,
      pagination: {
        current: parseInt(page, 10),
        pages: Math.ceil(total / parseInt(limit, 10)),
        total
      }
    }, 'Payment history retrieved successfully'));
  } catch (err) {
    /* istanbul ignore next */
    cov_18smrsmg8w().s[99]++;
    error('Error fetching payment history', {
      error: err.message,
      userId: req.user?.id
    });
    /* istanbul ignore next */
    cov_18smrsmg8w().s[100]++;
    next(err);
  }
};
/* istanbul ignore next */
cov_18smrsmg8w().s[101]++;
module.exports = {
  processPayment,
  getPaymentStatus,
  processRefund,
  getPaymentHistory
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,