{"version":3,"names":["request","require","app","setupTestEnvironment","cleanupTestEnvironment","expectSuccessResponse","describe","beforeAll","afterAll","it","response","get","expect","body","toHaveProperty","status","toBe","system","database","redis","services","metrics","ready","checks","alive","startTime","Date","now","endTime","responseTime","toBeLessThan","promises","Array","fill","map","responses","Promise","all","forEach"],"sources":["health.test.js"],"sourcesContent":["const request = require('supertest');\nconst app = require('./app.test');\nconst {\n  setupTestEnvironment,\n  cleanupTestEnvironment,\n  expectSuccessResponse\n} = require('./setup');\n\ndescribe('Health Check API', () => {\n  beforeAll(async () => {\n    await setupTestEnvironment();\n  });\n\n  afterAll(async () => {\n    await cleanupTestEnvironment();\n  });\n\n  describe('GET /health', () => {\n    it('should return health status successfully', async () => {\n      const response = await request(app)\n        .get('/health')\n        .expect(200);\n\n      expect(response.body).toHaveProperty('status');\n      expect(response.body).toHaveProperty('timestamp');\n      expect(response.body).toHaveProperty('uptime');\n      expect(response.body).toHaveProperty('environment');\n      expect(response.body.status).toBe('healthy');\n    });\n\n    it('should include system information', async () => {\n      const response = await request(app)\n        .get('/health')\n        .expect(200);\n\n      expect(response.body).toHaveProperty('system');\n      expect(response.body.system).toHaveProperty('platform');\n      expect(response.body.system).toHaveProperty('nodeVersion');\n      expect(response.body.system).toHaveProperty('memory');\n    });\n\n    it('should include database status', async () => {\n      const response = await request(app)\n        .get('/health')\n        .expect(200);\n\n      expect(response.body).toHaveProperty('database');\n      expect(response.body.database).toHaveProperty('status');\n      expect(response.body.database).toHaveProperty('connection');\n    });\n\n    it('should include Redis status', async () => {\n      const response = await request(app)\n        .get('/health')\n        .expect(200);\n\n      expect(response.body).toHaveProperty('redis');\n      expect(response.body.redis).toHaveProperty('status');\n    });\n\n    it('should include service status', async () => {\n      const response = await request(app)\n        .get('/health')\n        .expect(200);\n\n      expect(response.body).toHaveProperty('services');\n      expect(response.body.services).toHaveProperty('api');\n      expect(response.body.services).toHaveProperty('websocket');\n    });\n  });\n\n  describe('GET /health/detailed', () => {\n    it('should return detailed health information', async () => {\n      const response = await request(app)\n        .get('/health/detailed')\n        .expect(200);\n\n      expect(response.body).toHaveProperty('status');\n      expect(response.body).toHaveProperty('timestamp');\n      expect(response.body).toHaveProperty('uptime');\n      expect(response.body).toHaveProperty('environment');\n      expect(response.body).toHaveProperty('version');\n      expect(response.body).toHaveProperty('build');\n    });\n\n    it('should include detailed system metrics', async () => {\n      const response = await request(app)\n        .get('/health/detailed')\n        .expect(200);\n\n      expect(response.body).toHaveProperty('metrics');\n      expect(response.body.metrics).toHaveProperty('memory');\n      expect(response.body.metrics).toHaveProperty('cpu');\n      expect(response.body.metrics).toHaveProperty('disk');\n    });\n\n    it('should include database metrics', async () => {\n      const response = await request(app)\n        .get('/health/detailed')\n        .expect(200);\n\n      expect(response.body).toHaveProperty('database');\n      expect(response.body.database).toHaveProperty('status');\n      expect(response.body.database).toHaveProperty('connection');\n      expect(response.body.database).toHaveProperty('metrics');\n    });\n\n    it('should include Redis metrics', async () => {\n      const response = await request(app)\n        .get('/health/detailed')\n        .expect(200);\n\n      expect(response.body).toHaveProperty('redis');\n      expect(response.body.redis).toHaveProperty('status');\n      expect(response.body.redis).toHaveProperty('metrics');\n    });\n  });\n\n  describe('GET /health/ready', () => {\n    it('should return ready status', async () => {\n      const response = await request(app)\n        .get('/health/ready')\n        .expect(200);\n\n      expect(response.body).toHaveProperty('status');\n      expect(response.body).toHaveProperty('ready');\n      expect(response.body.ready).toBe(true);\n    });\n\n    it('should include readiness checks', async () => {\n      const response = await request(app)\n        .get('/health/ready')\n        .expect(200);\n\n      expect(response.body).toHaveProperty('checks');\n      expect(response.body.checks).toHaveProperty('database');\n      expect(response.body.checks).toHaveProperty('redis');\n      expect(response.body.checks).toHaveProperty('services');\n    });\n  });\n\n  describe('GET /health/live', () => {\n    it('should return liveness status', async () => {\n      const response = await request(app)\n        .get('/health/live')\n        .expect(200);\n\n      expect(response.body).toHaveProperty('status');\n      expect(response.body).toHaveProperty('alive');\n      expect(response.body.alive).toBe(true);\n    });\n\n    it('should include basic system information', async () => {\n      const response = await request(app)\n        .get('/health/live')\n        .expect(200);\n\n      expect(response.body).toHaveProperty('timestamp');\n      expect(response.body).toHaveProperty('uptime');\n    });\n  });\n\n  describe('Health Check Error Handling', () => {\n    it('should handle database connection errors gracefully', async () => {\n      // This test would require mocking the database connection\n      // For now, we'll test that the health endpoint responds\n      const response = await request(app)\n        .get('/health')\n        .expect(200);\n\n      expect(response.body).toHaveProperty('status');\n    });\n\n    it('should handle Redis connection errors gracefully', async () => {\n      // This test would require mocking the Redis connection\n      // For now, we'll test that the health endpoint responds\n      const response = await request(app)\n        .get('/health')\n        .expect(200);\n\n      expect(response.body).toHaveProperty('status');\n    });\n  });\n\n  describe('Health Check Performance', () => {\n    it('should respond quickly to health checks', async () => {\n      const startTime = Date.now();\n      \n      const response = await request(app)\n        .get('/health')\n        .expect(200);\n\n      const endTime = Date.now();\n      const responseTime = endTime - startTime;\n\n      // Health checks should respond within 100ms\n      expect(responseTime).toBeLessThan(100);\n      expect(response.body.status).toBe('healthy');\n    });\n\n    it('should handle multiple concurrent health checks', async () => {\n      const promises = Array(10).fill().map(() =>\n        request(app).get('/health')\n      );\n\n      const responses = await Promise.all(promises);\n\n      responses.forEach(response => {\n        expect(response.status).toBe(200);\n        expect(response.body.status).toBe('healthy');\n      });\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}