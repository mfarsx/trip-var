{"version":3,"names":["cov_u9q5zu4ud","actualCoverage","BaseRepository","s","require","DestinationRepository","constructor","model","f","findByLocation","location","find","$or","city","$regex","$options","country","region","findByCategory","category","findByPriceRange","minPrice","maxPrice","pricePerNight","$gte","$lte","findFeatured","isFeatured","searchDestinations","query","filters","b","searchQuery","name","description","rating","averageRating","updateRating","destinationId","newRating","findByIdAndUpdate","$set","new","getPopular","limit","isActive","sort","reviewCount","module","exports"],"sources":["destination.repository.js"],"sourcesContent":["const BaseRepository = require('./base.repository');\n\nclass DestinationRepository extends BaseRepository {\n  constructor(model) {\n    super(model);\n  }\n\n  // Find destinations by location\n  async findByLocation(location) {\n    return await this.model.find({\n      $or: [\n        { city: { $regex: location, $options: 'i' } },\n        { country: { $regex: location, $options: 'i' } },\n        { region: { $regex: location, $options: 'i' } }\n      ]\n    });\n  }\n\n  // Find destinations by category\n  async findByCategory(category) {\n    return await this.model.find({ category });\n  }\n\n  // Find destinations by price range\n  async findByPriceRange(minPrice, maxPrice) {\n    return await this.model.find({\n      pricePerNight: {\n        $gte: minPrice,\n        $lte: maxPrice\n      }\n    });\n  }\n\n  // Find featured destinations\n  async findFeatured() {\n    return await this.model.find({ isFeatured: true });\n  }\n\n  // Search destinations\n  async searchDestinations(query, filters = {}) {\n    const searchQuery = {\n      $or: [\n        { name: { $regex: query, $options: 'i' } },\n        { description: { $regex: query, $options: 'i' } },\n        { city: { $regex: query, $options: 'i' } },\n        { country: { $regex: query, $options: 'i' } }\n      ]\n    };\n\n    // Apply additional filters\n    if (filters.category) {\n      searchQuery.category = filters.category;\n    }\n    if (filters.minPrice || filters.maxPrice) {\n      searchQuery.pricePerNight = {};\n      if (filters.minPrice) {\n        searchQuery.pricePerNight.$gte = filters.minPrice;\n      }\n      if (filters.maxPrice) {\n        searchQuery.pricePerNight.$lte = filters.maxPrice;\n      }\n    }\n    if (filters.rating) {\n      searchQuery.averageRating = { $gte: filters.rating };\n    }\n\n    return await this.model.find(searchQuery);\n  }\n\n  // Update destination rating\n  async updateRating(destinationId, newRating) {\n    return await this.model.findByIdAndUpdate(\n      destinationId,\n      { $set: { averageRating: newRating } },\n      { new: true }\n    );\n  }\n\n  // Get popular destinations\n  async getPopular(limit = 10) {\n    return await this.model\n      .find({ isActive: true })\n      .sort({ averageRating: -1, reviewCount: -1 })\n      .limit(limit);\n  }\n}\n\nmodule.exports = DestinationRepository;"],"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","ignoreList":[]}