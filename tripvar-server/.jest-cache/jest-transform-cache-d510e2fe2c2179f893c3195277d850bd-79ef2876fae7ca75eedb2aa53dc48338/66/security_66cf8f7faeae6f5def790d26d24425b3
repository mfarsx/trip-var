24cfd16de2e827cf57a5fceeac629535
/* istanbul ignore next */
function cov_2p20qnx491() {
  var path = "/Users/mfarsx/dev/tripvar/tripvar-server/src/config/security.js";
  var hash = "97e46caadbe8cd9ebf32eacbccf4db1535799189";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/mfarsx/dev/tripvar/tripvar-server/src/config/security.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 15
        },
        end: {
          line: 1,
          column: 32
        }
      },
      "1": {
        start: {
          line: 2,
          column: 18
        },
        end: {
          line: 2,
          column: 47
        }
      },
      "2": {
        start: {
          line: 3,
          column: 35
        },
        end: {
          line: 3,
          column: 63
        }
      },
      "3": {
        start: {
          line: 6,
          column: 23
        },
        end: {
          line: 90,
          column: 1
        }
      },
      "4": {
        start: {
          line: 41,
          column: 6
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "5": {
        start: {
          line: 60,
          column: 6
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "6": {
        start: {
          line: 71,
          column: 6
        },
        end: {
          line: 73,
          column: 7
        }
      },
      "7": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 36
        }
      },
      "8": {
        start: {
          line: 75,
          column: 29
        },
        end: {
          line: 77,
          column: 60
        }
      },
      "9": {
        start: {
          line: 79,
          column: 6
        },
        end: {
          line: 83,
          column: 7
        }
      },
      "10": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 29
        }
      },
      "11": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 51
        }
      },
      "12": {
        start: {
          line: 93,
          column: 24
        },
        end: {
          line: 102,
          column: 1
        }
      },
      "13": {
        start: {
          line: 94,
          column: 17
        },
        end: {
          line: 94,
          column: 38
        }
      },
      "14": {
        start: {
          line: 95,
          column: 2
        },
        end: {
          line: 100,
          column: 3
        }
      },
      "15": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 99,
          column: 7
        }
      },
      "16": {
        start: {
          line: 101,
          column: 2
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "17": {
        start: {
          line: 105,
          column: 24
        },
        end: {
          line: 225,
          column: 1
        }
      },
      "18": {
        start: {
          line: 227,
          column: 0
        },
        end: {
          line: 231,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 40,
            column: 13
          },
          end: {
            line: 40,
            column: 14
          }
        },
        loc: {
          start: {
            line: 40,
            column: 27
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 40
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 59,
            column: 13
          },
          end: {
            line: 59,
            column: 14
          }
        },
        loc: {
          start: {
            line: 59,
            column: 27
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 59
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 69,
            column: 13
          }
        },
        loc: {
          start: {
            line: 69,
            column: 39
          },
          end: {
            line: 84,
            column: 5
          }
        },
        line: 69
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 93,
            column: 24
          },
          end: {
            line: 93,
            column: 25
          }
        },
        loc: {
          start: {
            line: 93,
            column: 44
          },
          end: {
            line: 102,
            column: 1
          }
        },
        line: 93
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 33,
            column: 9
          },
          end: {
            line: 33,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 33,
            column: 50
          },
          end: {
            line: 33,
            column: 55
          }
        }, {
          start: {
            line: 33,
            column: 58
          },
          end: {
            line: 33,
            column: 61
          }
        }],
        line: 33
      },
      "1": {
        loc: {
          start: {
            line: 51,
            column: 9
          },
          end: {
            line: 51,
            column: 57
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 51,
            column: 50
          },
          end: {
            line: 51,
            column: 53
          }
        }, {
          start: {
            line: 51,
            column: 56
          },
          end: {
            line: 51,
            column: 57
          }
        }],
        line: 51
      },
      "2": {
        loc: {
          start: {
            line: 71,
            column: 6
          },
          end: {
            line: 73,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 6
          },
          end: {
            line: 73,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "3": {
        loc: {
          start: {
            line: 75,
            column: 29
          },
          end: {
            line: 77,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 76,
            column: 10
          },
          end: {
            line: 76,
            column: 48
          }
        }, {
          start: {
            line: 77,
            column: 10
          },
          end: {
            line: 77,
            column: 60
          }
        }],
        line: 75
      },
      "4": {
        loc: {
          start: {
            line: 79,
            column: 6
          },
          end: {
            line: 83,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 6
          },
          end: {
            line: 83,
            column: 7
          }
        }, {
          start: {
            line: 81,
            column: 13
          },
          end: {
            line: 83,
            column: 7
          }
        }],
        line: 79
      },
      "5": {
        loc: {
          start: {
            line: 95,
            column: 2
          },
          end: {
            line: 100,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 2
          },
          end: {
            line: 100,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "97e46caadbe8cd9ebf32eacbccf4db1535799189"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2p20qnx491 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2p20qnx491();
const helmet =
/* istanbul ignore next */
(cov_2p20qnx491().s[0]++, require('helmet'));
const rateLimit =
/* istanbul ignore next */
(cov_2p20qnx491().s[1]++, require('express-rate-limit'));
const {
  body,
  validationResult
} =
/* istanbul ignore next */
(cov_2p20qnx491().s[2]++, require('express-validator'));

// Security middleware configuration
const securityConfig =
/* istanbul ignore next */
(cov_2p20qnx491().s[3]++, {
  // Helmet configuration for security headers
  helmet: helmet({
    contentSecurityPolicy: {
      directives: {
        defaultSrc: ['\'self\''],
        styleSrc: ['\'self\'', '\'unsafe-inline\'', 'https://fonts.googleapis.com'],
        fontSrc: ['\'self\'', 'https://fonts.gstatic.com'],
        imgSrc: ['\'self\'', 'data:', 'https:'],
        scriptSrc: ['\'self\''],
        connectSrc: ['\'self\''],
        frameSrc: ['\'none\''],
        objectSrc: ['\'none\''],
        upgradeInsecureRequests: []
      }
    },
    crossOriginEmbedderPolicy: false,
    hsts: {
      maxAge: 31536000,
      includeSubDomains: true,
      preload: true
    }
  }),
  // Rate limiting configuration
  generalLimiter: rateLimit({
    windowMs: 15 * 60 * 1000,
    // 15 minutes
    max: process.env.NODE_ENV === 'development' ?
    /* istanbul ignore next */
    (cov_2p20qnx491().b[0][0]++, 10000) :
    /* istanbul ignore next */
    (cov_2p20qnx491().b[0][1]++, 100),
    // Much higher limit for development
    message: {
      error: 'Too many requests from this IP, please try again later.',
      retryAfter: '15 minutes'
    },
    standardHeaders: true,
    legacyHeaders: false,
    handler: (req, res) => {
      /* istanbul ignore next */
      cov_2p20qnx491().f[0]++;
      cov_2p20qnx491().s[4]++;
      res.status(429).json({
        error: 'Too many requests from this IP, please try again later.',
        retryAfter: '15 minutes'
      });
    }
  }),
  // Strict rate limiting for auth endpoints
  authLimiter: rateLimit({
    windowMs: 15 * 60 * 1000,
    // 15 minutes
    max: process.env.NODE_ENV === 'development' ?
    /* istanbul ignore next */
    (cov_2p20qnx491().b[1][0]++, 100) :
    /* istanbul ignore next */
    (cov_2p20qnx491().b[1][1]++, 5),
    // Higher limit for development
    message: {
      error: 'Too many authentication attempts, please try again later.',
      retryAfter: '15 minutes'
    },
    standardHeaders: true,
    legacyHeaders: false,
    skipSuccessfulRequests: true,
    handler: (req, res) => {
      /* istanbul ignore next */
      cov_2p20qnx491().f[1]++;
      cov_2p20qnx491().s[5]++;
      res.status(429).json({
        error: 'Too many authentication attempts, please try again later.',
        retryAfter: '15 minutes'
      });
    }
  }),
  // CORS configuration
  corsOptions: {
    origin: function (origin, callback) {
      /* istanbul ignore next */
      cov_2p20qnx491().f[2]++;
      cov_2p20qnx491().s[6]++;
      // Allow requests with no origin (mobile apps, curl, etc.)
      if (!origin) {
        /* istanbul ignore next */
        cov_2p20qnx491().b[2][0]++;
        cov_2p20qnx491().s[7]++;
        return callback(null, true);
      } else
      /* istanbul ignore next */
      {
        cov_2p20qnx491().b[2][1]++;
      }
      const allowedOrigins =
      /* istanbul ignore next */
      (cov_2p20qnx491().s[8]++, process.env.ALLOWED_ORIGINS ?
      /* istanbul ignore next */
      (cov_2p20qnx491().b[3][0]++, process.env.ALLOWED_ORIGINS.split(',')) :
      /* istanbul ignore next */
      (cov_2p20qnx491().b[3][1]++, ['http://localhost:5173', 'http://localhost:3000']));
      /* istanbul ignore next */
      cov_2p20qnx491().s[9]++;
      if (allowedOrigins.indexOf(origin) !== -1) {
        /* istanbul ignore next */
        cov_2p20qnx491().b[4][0]++;
        cov_2p20qnx491().s[10]++;
        callback(null, true);
      } else {
        /* istanbul ignore next */
        cov_2p20qnx491().b[4][1]++;
        cov_2p20qnx491().s[11]++;
        callback(new Error('Not allowed by CORS'));
      }
    },
    credentials: true,
    methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],
    allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With'],
    exposedHeaders: ['X-Total-Count', 'X-Page-Count']
  }
});

// Input validation middleware
/* istanbul ignore next */
cov_2p20qnx491().s[12]++;
const validateRequest = (req, res, next) => {
  /* istanbul ignore next */
  cov_2p20qnx491().f[3]++;
  const errors =
  /* istanbul ignore next */
  (cov_2p20qnx491().s[13]++, validationResult(req));
  /* istanbul ignore next */
  cov_2p20qnx491().s[14]++;
  if (!errors.isEmpty()) {
    /* istanbul ignore next */
    cov_2p20qnx491().b[5][0]++;
    cov_2p20qnx491().s[15]++;
    return res.status(400).json({
      error: 'Validation failed',
      details: errors.array()
    });
  } else
  /* istanbul ignore next */
  {
    cov_2p20qnx491().b[5][1]++;
  }
  cov_2p20qnx491().s[16]++;
  next();
};

// Common validation rules
const validationRules =
/* istanbul ignore next */
(cov_2p20qnx491().s[17]++, {
  email: body('email').isEmail().normalizeEmail().withMessage('Please provide a valid email address'),
  password: body('password').isLength({
    min: 8
  }).withMessage('Password must be at least 8 characters long').matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]/).withMessage('Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character'),
  name: body('name').trim().isLength({
    min: 2,
    max: 50
  }).withMessage('Name must be between 2 and 50 characters').matches(/^[a-zA-Z\s]+$/).withMessage('Name can only contain letters and spaces'),
  // Destination validation rules
  destinationTitle: body('title').trim().isLength({
    min: 3,
    max: 100
  }).withMessage('Title must be between 3 and 100 characters'),
  destinationDescription: body('description').trim().isLength({
    min: 10,
    max: 1000
  }).withMessage('Description must be between 10 and 1000 characters'),
  destinationImageUrl: body('imageUrl').isURL().withMessage('Please provide a valid image URL'),
  destinationRating: body('rating').isFloat({
    min: 0,
    max: 5
  }).withMessage('Rating must be between 0 and 5'),
  destinationPrice: body('price').isFloat({
    min: 0
  }).withMessage('Price must be a positive number'),
  destinationLocation: body('location').trim().isLength({
    min: 2,
    max: 100
  }).withMessage('Location must be between 2 and 100 characters'),
  destinationCategory: body('category').isIn(['Beach', 'Mountain', 'City', 'Cultural', 'Adventure']).withMessage('Category must be one of: Beach, Mountain, City, Cultural, Adventure'),
  // Review validation rules
  destinationId: body('destinationId').isMongoId().withMessage('Please provide a valid destination ID'),
  reviewTitle: body('title').trim().isLength({
    min: 3,
    max: 100
  }).withMessage('Review title must be between 3 and 100 characters'),
  reviewContent: body('content').trim().isLength({
    min: 10,
    max: 1000
  }).withMessage('Review content must be between 10 and 1000 characters'),
  reviewRating: body('rating').isInt({
    min: 1,
    max: 5
  }).withMessage('Rating must be between 1 and 5'),
  // Payment validation rules
  paymentMethod: body('paymentMethod').isIn(['credit-card', 'paypal', 'bank-transfer']).withMessage('Payment method must be credit-card, paypal, or bank-transfer'),
  paymentDetails: body('paymentDetails').isObject().withMessage('Payment details must be provided'),
  refundReason: body('reason').trim().isLength({
    min: 5,
    max: 200
  }).withMessage('Refund reason must be between 5 and 200 characters'),
  // Notification validation rules
  notificationIds: body('notificationIds').isArray({
    min: 1
  }).withMessage('Notification IDs must be provided as an array'),
  notificationUserId: body('userId').isMongoId().withMessage('Please provide a valid user ID'),
  notificationTitle: body('title').trim().isLength({
    min: 3,
    max: 100
  }).withMessage('Notification title must be between 3 and 100 characters'),
  notificationMessage: body('message').trim().isLength({
    min: 5,
    max: 500
  }).withMessage('Notification message must be between 5 and 500 characters'),
  notificationType: body('type').isIn(['booking_confirmed', 'booking_cancelled', 'booking_reminder', 'payment_success', 'payment_failed', 'review_request', 'destination_update', 'promotion', 'system']).withMessage('Invalid notification type'),
  notificationPriority: body('priority').isIn(['low', 'medium', 'high', 'urgent']).withMessage('Priority must be low, medium, high, or urgent')
});
/* istanbul ignore next */
cov_2p20qnx491().s[18]++;
module.exports = {
  securityConfig,
  validateRequest,
  validationRules
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,