{"version":3,"names":["mongoose","require","destinationSchema","Schema","title","type","String","required","trim","description","imageUrl","rating","Number","min","max","default","ratingCount","price","location","category","enum","featured","Boolean","duration","groupSize","difficulty","bestTimeToVisit","highlights","originalPrice","Math","round","timestamps","Destination","model","module","exports"],"sources":["destination.model.js"],"sourcesContent":["const mongoose = require('mongoose');\n\nconst destinationSchema = new mongoose.Schema(\n  {\n    title: {\n      type: String,\n      required: true,\n      trim: true\n    },\n    description: {\n      type: String,\n      required: true\n    },\n    imageUrl: {\n      type: String,\n      required: true\n    },\n    rating: {\n      type: Number,\n      required: true,\n      min: 0,\n      max: 5,\n      default: 0\n    },\n    ratingCount: {\n      type: Number,\n      default: 0\n    },\n    price: {\n      type: Number,\n      required: true,\n      min: 0\n    },\n    location: {\n      type: String,\n      required: true\n    },\n    category: {\n      type: String,\n      required: true,\n      enum: ['Beach', 'Mountain', 'City', 'Cultural', 'Adventure', 'Popular', 'Relaxation']\n    },\n    featured: {\n      type: Boolean,\n      default: false\n    },\n    duration: {\n      type: String,\n      default: '3-5 days'\n    },\n    groupSize: {\n      type: String,\n      default: '2-8 people'\n    },\n    difficulty: {\n      type: String,\n      enum: ['Easy', 'Moderate', 'Challenging', 'Expert'],\n      default: 'Moderate'\n    },\n    bestTimeToVisit: {\n      type: String,\n      default: 'Year-round'\n    },\n    highlights: [{\n      type: String\n    }],\n    originalPrice: {\n      type: Number,\n      default: function() {\n        return Math.round(this.price * 1.2);\n      }\n    }\n  },\n  {\n    timestamps: true\n  }\n);\n\nconst Destination = mongoose.model('Destination', destinationSchema);\n\nmodule.exports = Destination;\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AAEpC,MAAMC,iBAAiB,GAAG,IAAIF,QAAQ,CAACG,MAAM,CAC3C;EACEC,KAAK,EAAE;IACLC,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE,IAAI;IACdC,IAAI,EAAE;EACR,CAAC;EACDC,WAAW,EAAE;IACXJ,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE;EACZ,CAAC;EACDG,QAAQ,EAAE;IACRL,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE;EACZ,CAAC;EACDI,MAAM,EAAE;IACNN,IAAI,EAAEO,MAAM;IACZL,QAAQ,EAAE,IAAI;IACdM,GAAG,EAAE,CAAC;IACNC,GAAG,EAAE,CAAC;IACNC,OAAO,EAAE;EACX,CAAC;EACDC,WAAW,EAAE;IACXX,IAAI,EAAEO,MAAM;IACZG,OAAO,EAAE;EACX,CAAC;EACDE,KAAK,EAAE;IACLZ,IAAI,EAAEO,MAAM;IACZL,QAAQ,EAAE,IAAI;IACdM,GAAG,EAAE;EACP,CAAC;EACDK,QAAQ,EAAE;IACRb,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE;EACZ,CAAC;EACDY,QAAQ,EAAE;IACRd,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE,IAAI;IACda,IAAI,EAAE,CAAC,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,YAAY;EACtF,CAAC;EACDC,QAAQ,EAAE;IACRhB,IAAI,EAAEiB,OAAO;IACbP,OAAO,EAAE;EACX,CAAC;EACDQ,QAAQ,EAAE;IACRlB,IAAI,EAAEC,MAAM;IACZS,OAAO,EAAE;EACX,CAAC;EACDS,SAAS,EAAE;IACTnB,IAAI,EAAEC,MAAM;IACZS,OAAO,EAAE;EACX,CAAC;EACDU,UAAU,EAAE;IACVpB,IAAI,EAAEC,MAAM;IACZc,IAAI,EAAE,CAAC,MAAM,EAAE,UAAU,EAAE,aAAa,EAAE,QAAQ,CAAC;IACnDL,OAAO,EAAE;EACX,CAAC;EACDW,eAAe,EAAE;IACfrB,IAAI,EAAEC,MAAM;IACZS,OAAO,EAAE;EACX,CAAC;EACDY,UAAU,EAAE,CAAC;IACXtB,IAAI,EAAEC;EACR,CAAC,CAAC;EACFsB,aAAa,EAAE;IACbvB,IAAI,EAAEO,MAAM;IACZG,OAAO,EAAE,SAAAA,CAAA,EAAW;MAClB,OAAOc,IAAI,CAACC,KAAK,CAAC,IAAI,CAACb,KAAK,GAAG,GAAG,CAAC;IACrC;EACF;AACF,CAAC,EACD;EACEc,UAAU,EAAE;AACd,CACF,CAAC;AAED,MAAMC,WAAW,GAAGhC,QAAQ,CAACiC,KAAK,CAAC,aAAa,EAAE/B,iBAAiB,CAAC;AAEpEgC,MAAM,CAACC,OAAO,GAAGH,WAAW","ignoreList":[]}