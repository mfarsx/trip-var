e5ebe2ea94d201501726f7c124d20c4a
/* istanbul ignore next */
function cov_8ubi9qwn4() {
  var path = "/Users/mfarsx/dev/tripvar/tripvar-server/src/controllers/base.controller.js";
  var hash = "559f68f819280ef85acf4a4bd2e7da98fed353aa";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/mfarsx/dev/tripvar/tripvar-server/src/controllers/base.controller.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 47
        },
        end: {
          line: 1,
          column: 75
        }
      },
      "1": {
        start: {
          line: 2,
          column: 25
        },
        end: {
          line: 2,
          column: 57
        }
      },
      "2": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 54
        }
      },
      "3": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 64
        }
      },
      "4": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 70
        }
      },
      "5": {
        start: {
          line: 40,
          column: 26
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "6": {
        start: {
          line: 41,
          column: 6
        },
        end: {
          line: 41,
          column: 77
        }
      },
      "7": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "8": {
        start: {
          line: 45,
          column: 6
        },
        end: {
          line: 48,
          column: 8
        }
      },
      "9": {
        start: {
          line: 59,
          column: 26
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "10": {
        start: {
          line: 60,
          column: 6
        },
        end: {
          line: 60,
          column: 44
        }
      },
      "11": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "12": {
        start: {
          line: 64,
          column: 6
        },
        end: {
          line: 67,
          column: 8
        }
      },
      "13": {
        start: {
          line: 78,
          column: 22
        },
        end: {
          line: 78,
          column: 24
        }
      },
      "14": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 89,
          column: 7
        }
      },
      "15": {
        start: {
          line: 81,
          column: 6
        },
        end: {
          line: 88,
          column: 7
        }
      },
      "16": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "17": {
        start: {
          line: 84,
          column: 10
        },
        end: {
          line: 84,
          column: 44
        }
      },
      "18": {
        start: {
          line: 86,
          column: 10
        },
        end: {
          line: 86,
          column: 37
        }
      },
      "19": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 91,
          column: 21
        }
      },
      "20": {
        start: {
          line: 100,
          column: 17
        },
        end: {
          line: 100,
          column: 59
        }
      },
      "21": {
        start: {
          line: 101,
          column: 18
        },
        end: {
          line: 101,
          column: 77
        }
      },
      "22": {
        start: {
          line: 102,
          column: 17
        },
        end: {
          line: 102,
          column: 35
        }
      },
      "23": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 104,
          column: 33
        }
      },
      "24": {
        start: {
          line: 115,
          column: 19
        },
        end: {
          line: 115,
          column: 46
        }
      },
      "25": {
        start: {
          line: 116,
          column: 22
        },
        end: {
          line: 116,
          column: 56
        }
      },
      "26": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 124,
          column: 5
        }
      },
      "27": {
        start: {
          line: 120,
          column: 6
        },
        end: {
          line: 123,
          column: 8
        }
      },
      "28": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 126,
          column: 33
        }
      },
      "29": {
        start: {
          line: 136,
          column: 20
        },
        end: {
          line: 136,
          column: 22
        }
      },
      "30": {
        start: {
          line: 138,
          column: 4
        },
        end: {
          line: 142,
          column: 7
        }
      },
      "31": {
        start: {
          line: 139,
          column: 6
        },
        end: {
          line: 141,
          column: 7
        }
      },
      "32": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 38
        }
      },
      "33": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 144,
          column: 19
        }
      },
      "34": {
        start: {
          line: 154,
          column: 4
        },
        end: {
          line: 161,
          column: 7
        }
      },
      "35": {
        start: {
          line: 155,
          column: 6
        },
        end: {
          line: 160,
          column: 7
        }
      },
      "36": {
        start: {
          line: 156,
          column: 23
        },
        end: {
          line: 156,
          column: 51
        }
      },
      "37": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 38
        }
      },
      "38": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 20
        }
      },
      "39": {
        start: {
          line: 172,
          column: 4
        },
        end: {
          line: 179,
          column: 7
        }
      },
      "40": {
        start: {
          line: 173,
          column: 6
        },
        end: {
          line: 178,
          column: 7
        }
      },
      "41": {
        start: {
          line: 174,
          column: 23
        },
        end: {
          line: 174,
          column: 51
        }
      },
      "42": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 175,
          column: 37
        }
      },
      "43": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 20
        }
      },
      "44": {
        start: {
          line: 189,
          column: 4
        },
        end: {
          line: 255,
          column: 6
        }
      },
      "45": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 208,
          column: 9
        }
      },
      "46": {
        start: {
          line: 193,
          column: 40
        },
        end: {
          line: 193,
          column: 75
        }
      },
      "47": {
        start: {
          line: 194,
          column: 26
        },
        end: {
          line: 194,
          column: 94
        }
      },
      "48": {
        start: {
          line: 195,
          column: 40
        },
        end: {
          line: 195,
          column: 109
        }
      },
      "49": {
        start: {
          line: 197,
          column: 25
        },
        end: {
          line: 203,
          column: 12
        }
      },
      "50": {
        start: {
          line: 205,
          column: 10
        },
        end: {
          line: 205,
          column: 74
        }
      },
      "51": {
        start: {
          line: 207,
          column: 10
        },
        end: {
          line: 207,
          column: 22
        }
      },
      "52": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 219,
          column: 9
        }
      },
      "53": {
        start: {
          line: 214,
          column: 10
        },
        end: {
          line: 214,
          column: 57
        }
      },
      "54": {
        start: {
          line: 215,
          column: 25
        },
        end: {
          line: 215,
          column: 61
        }
      },
      "55": {
        start: {
          line: 216,
          column: 10
        },
        end: {
          line: 216,
          column: 40
        }
      },
      "56": {
        start: {
          line: 218,
          column: 10
        },
        end: {
          line: 218,
          column: 22
        }
      },
      "57": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 230,
          column: 9
        }
      },
      "58": {
        start: {
          line: 225,
          column: 32
        },
        end: {
          line: 225,
          column: 102
        }
      },
      "59": {
        start: {
          line: 226,
          column: 25
        },
        end: {
          line: 226,
          column: 60
        }
      },
      "60": {
        start: {
          line: 227,
          column: 10
        },
        end: {
          line: 227,
          column: 85
        }
      },
      "61": {
        start: {
          line: 229,
          column: 10
        },
        end: {
          line: 229,
          column: 22
        }
      },
      "62": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 242,
          column: 9
        }
      },
      "63": {
        start: {
          line: 236,
          column: 10
        },
        end: {
          line: 236,
          column: 57
        }
      },
      "64": {
        start: {
          line: 237,
          column: 32
        },
        end: {
          line: 237,
          column: 102
        }
      },
      "65": {
        start: {
          line: 238,
          column: 25
        },
        end: {
          line: 238,
          column: 75
        }
      },
      "66": {
        start: {
          line: 239,
          column: 10
        },
        end: {
          line: 239,
          column: 80
        }
      },
      "67": {
        start: {
          line: 241,
          column: 10
        },
        end: {
          line: 241,
          column: 22
        }
      },
      "68": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 253,
          column: 9
        }
      },
      "69": {
        start: {
          line: 248,
          column: 10
        },
        end: {
          line: 248,
          column: 57
        }
      },
      "70": {
        start: {
          line: 249,
          column: 10
        },
        end: {
          line: 249,
          column: 46
        }
      },
      "71": {
        start: {
          line: 250,
          column: 10
        },
        end: {
          line: 250,
          column: 83
        }
      },
      "72": {
        start: {
          line: 252,
          column: 10
        },
        end: {
          line: 252,
          column: 22
        }
      },
      "73": {
        start: {
          line: 259,
          column: 0
        },
        end: {
          line: 259,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 16,
            column: 2
          },
          end: {
            line: 16,
            column: 3
          }
        },
        loc: {
          start: {
            line: 16,
            column: 71
          },
          end: {
            line: 18,
            column: 3
          }
        },
        line: 16
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 29,
            column: 2
          },
          end: {
            line: 29,
            column: 3
          }
        },
        loc: {
          start: {
            line: 29,
            column: 47
          },
          end: {
            line: 31,
            column: 3
          }
        },
        line: 29
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 39,
            column: 2
          },
          end: {
            line: 39,
            column: 3
          }
        },
        loc: {
          start: {
            line: 39,
            column: 44
          },
          end: {
            line: 50,
            column: 3
          }
        },
        line: 39
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 40,
            column: 48
          },
          end: {
            line: 40,
            column: 49
          }
        },
        loc: {
          start: {
            line: 41,
            column: 6
          },
          end: {
            line: 41,
            column: 77
          }
        },
        line: 41
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 58,
            column: 2
          },
          end: {
            line: 58,
            column: 3
          }
        },
        loc: {
          start: {
            line: 58,
            column: 48
          },
          end: {
            line: 69,
            column: 3
          }
        },
        line: 58
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 59,
            column: 48
          },
          end: {
            line: 59,
            column: 49
          }
        },
        loc: {
          start: {
            line: 60,
            column: 6
          },
          end: {
            line: 60,
            column: 44
          }
        },
        line: 60
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 77,
            column: 2
          },
          end: {
            line: 77,
            column: 3
          }
        },
        loc: {
          start: {
            line: 77,
            column: 43
          },
          end: {
            line: 92,
            column: 3
          }
        },
        line: 77
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 80,
            column: 30
          },
          end: {
            line: 80,
            column: 31
          }
        },
        loc: {
          start: {
            line: 80,
            column: 37
          },
          end: {
            line: 89,
            column: 5
          }
        },
        line: 80
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 99,
            column: 2
          },
          end: {
            line: 99,
            column: 3
          }
        },
        loc: {
          start: {
            line: 99,
            column: 29
          },
          end: {
            line: 105,
            column: 3
          }
        },
        line: 99
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 114,
            column: 2
          },
          end: {
            line: 114,
            column: 3
          }
        },
        loc: {
          start: {
            line: 114,
            column: 70
          },
          end: {
            line: 127,
            column: 3
          }
        },
        line: 114
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 135,
            column: 2
          },
          end: {
            line: 135,
            column: 3
          }
        },
        loc: {
          start: {
            line: 135,
            column: 46
          },
          end: {
            line: 145,
            column: 3
          }
        },
        line: 135
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 138,
            column: 27
          },
          end: {
            line: 138,
            column: 28
          }
        },
        loc: {
          start: {
            line: 138,
            column: 36
          },
          end: {
            line: 142,
            column: 5
          }
        },
        line: 138
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 153,
            column: 2
          },
          end: {
            line: 153,
            column: 3
          }
        },
        loc: {
          start: {
            line: 153,
            column: 40
          },
          end: {
            line: 162,
            column: 3
          }
        },
        line: 153
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 154,
            column: 24
          },
          end: {
            line: 154,
            column: 25
          }
        },
        loc: {
          start: {
            line: 154,
            column: 49
          },
          end: {
            line: 161,
            column: 5
          }
        },
        line: 154
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 171,
            column: 2
          },
          end: {
            line: 171,
            column: 3
          }
        },
        loc: {
          start: {
            line: 171,
            column: 69
          },
          end: {
            line: 180,
            column: 3
          }
        },
        line: 171
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 172,
            column: 24
          },
          end: {
            line: 172,
            column: 25
          }
        },
        loc: {
          start: {
            line: 172,
            column: 49
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 172
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 188,
            column: 2
          },
          end: {
            line: 188,
            column: 3
          }
        },
        loc: {
          start: {
            line: 188,
            column: 46
          },
          end: {
            line: 256,
            column: 3
          }
        },
        line: 188
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 191,
            column: 27
          },
          end: {
            line: 191,
            column: 28
          }
        },
        loc: {
          start: {
            line: 191,
            column: 52
          },
          end: {
            line: 209,
            column: 7
          }
        },
        line: 191
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 212,
            column: 28
          },
          end: {
            line: 212,
            column: 29
          }
        },
        loc: {
          start: {
            line: 212,
            column: 53
          },
          end: {
            line: 220,
            column: 7
          }
        },
        line: 212
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 223,
            column: 27
          },
          end: {
            line: 223,
            column: 28
          }
        },
        loc: {
          start: {
            line: 223,
            column: 52
          },
          end: {
            line: 231,
            column: 7
          }
        },
        line: 223
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 234,
            column: 27
          },
          end: {
            line: 234,
            column: 28
          }
        },
        loc: {
          start: {
            line: 234,
            column: 52
          },
          end: {
            line: 243,
            column: 7
          }
        },
        line: 234
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 246,
            column: 27
          },
          end: {
            line: 246,
            column: 28
          }
        },
        loc: {
          start: {
            line: 246,
            column: 52
          },
          end: {
            line: 254,
            column: 7
          }
        },
        line: 246
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 16,
            column: 30
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 16,
            column: 26
          },
          end: {
            line: 16,
            column: 30
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 32
          },
          end: {
            line: 16,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 16,
            column: 42
          },
          end: {
            line: 16,
            column: 51
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 16,
            column: 53
          },
          end: {
            line: 16,
            column: 69
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 16,
            column: 66
          },
          end: {
            line: 16,
            column: 69
          }
        }],
        line: 16
      },
      "3": {
        loc: {
          start: {
            line: 41,
            column: 6
          },
          end: {
            line: 41,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 6
          },
          end: {
            line: 41,
            column: 31
          }
        }, {
          start: {
            line: 41,
            column: 35
          },
          end: {
            line: 41,
            column: 55
          }
        }, {
          start: {
            line: 41,
            column: 59
          },
          end: {
            line: 41,
            column: 77
          }
        }],
        line: 41
      },
      "4": {
        loc: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "5": {
        loc: {
          start: {
            line: 60,
            column: 6
          },
          end: {
            line: 60,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 6
          },
          end: {
            line: 60,
            column: 20
          }
        }, {
          start: {
            line: 60,
            column: 24
          },
          end: {
            line: 60,
            column: 44
          }
        }],
        line: 60
      },
      "6": {
        loc: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "7": {
        loc: {
          start: {
            line: 81,
            column: 6
          },
          end: {
            line: 88,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 6
          },
          end: {
            line: 88,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "8": {
        loc: {
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        }, {
          start: {
            line: 85,
            column: 15
          },
          end: {
            line: 87,
            column: 9
          }
        }],
        line: 83
      },
      "9": {
        loc: {
          start: {
            line: 100,
            column: 29
          },
          end: {
            line: 100,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 29
          },
          end: {
            line: 100,
            column: 53
          }
        }, {
          start: {
            line: 100,
            column: 57
          },
          end: {
            line: 100,
            column: 58
          }
        }],
        line: 100
      },
      "10": {
        loc: {
          start: {
            line: 101,
            column: 44
          },
          end: {
            line: 101,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 101,
            column: 44
          },
          end: {
            line: 101,
            column: 69
          }
        }, {
          start: {
            line: 101,
            column: 73
          },
          end: {
            line: 101,
            column: 75
          }
        }],
        line: 101
      },
      "11": {
        loc: {
          start: {
            line: 114,
            column: 23
          },
          end: {
            line: 114,
            column: 41
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 114,
            column: 39
          },
          end: {
            line: 114,
            column: 41
          }
        }],
        line: 114
      },
      "12": {
        loc: {
          start: {
            line: 114,
            column: 43
          },
          end: {
            line: 114,
            column: 68
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 114,
            column: 57
          },
          end: {
            line: 114,
            column: 68
          }
        }],
        line: 114
      },
      "13": {
        loc: {
          start: {
            line: 115,
            column: 19
          },
          end: {
            line: 115,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 19
          },
          end: {
            line: 115,
            column: 31
          }
        }, {
          start: {
            line: 115,
            column: 35
          },
          end: {
            line: 115,
            column: 46
          }
        }],
        line: 115
      },
      "14": {
        loc: {
          start: {
            line: 116,
            column: 22
          },
          end: {
            line: 116,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 116,
            column: 50
          },
          end: {
            line: 116,
            column: 51
          }
        }, {
          start: {
            line: 116,
            column: 54
          },
          end: {
            line: 116,
            column: 56
          }
        }],
        line: 116
      },
      "15": {
        loc: {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "16": {
        loc: {
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 119,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 119,
            column: 32
          }
        }, {
          start: {
            line: 119,
            column: 36
          },
          end: {
            line: 119,
            column: 67
          }
        }],
        line: 119
      },
      "17": {
        loc: {
          start: {
            line: 135,
            column: 25
          },
          end: {
            line: 135,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 135,
            column: 42
          },
          end: {
            line: 135,
            column: 44
          }
        }],
        line: 135
      },
      "18": {
        loc: {
          start: {
            line: 139,
            column: 6
          },
          end: {
            line: 141,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 6
          },
          end: {
            line: 141,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "19": {
        loc: {
          start: {
            line: 139,
            column: 10
          },
          end: {
            line: 139,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 139,
            column: 10
          },
          end: {
            line: 139,
            column: 36
          }
        }, {
          start: {
            line: 139,
            column: 40
          },
          end: {
            line: 139,
            column: 59
          }
        }],
        line: 139
      },
      "20": {
        loc: {
          start: {
            line: 194,
            column: 58
          },
          end: {
            line: 194,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 194,
            column: 58
          },
          end: {
            line: 194,
            column: 87
          }
        }, {
          start: {
            line: 194,
            column: 91
          },
          end: {
            line: 194,
            column: 93
          }
        }],
        line: 194
      },
      "21": {
        loc: {
          start: {
            line: 195,
            column: 70
          },
          end: {
            line: 195,
            column: 108
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 195,
            column: 70
          },
          end: {
            line: 195,
            column: 102
          }
        }, {
          start: {
            line: 195,
            column: 106
          },
          end: {
            line: 195,
            column: 108
          }
        }],
        line: 195
      },
      "22": {
        loc: {
          start: {
            line: 225,
            column: 67
          },
          end: {
            line: 225,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 225,
            column: 67
          },
          end: {
            line: 225,
            column: 95
          }
        }, {
          start: {
            line: 225,
            column: 99
          },
          end: {
            line: 225,
            column: 101
          }
        }],
        line: 225
      },
      "23": {
        loc: {
          start: {
            line: 237,
            column: 67
          },
          end: {
            line: 237,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 237,
            column: 67
          },
          end: {
            line: 237,
            column: 95
          }
        }, {
          start: {
            line: 237,
            column: 99
          },
          end: {
            line: 237,
            column: 101
          }
        }],
        line: 237
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0],
      "12": [0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "559f68f819280ef85acf4a4bd2e7da98fed353aa"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_8ubi9qwn4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_8ubi9qwn4();
const {
  successResponse,
  paginatedResponse
} =
/* istanbul ignore next */
(cov_8ubi9qwn4().s[0]++, require('../utils/response'));
const {
  asyncHandler
} =
/* istanbul ignore next */
(cov_8ubi9qwn4().s[1]++, require('../utils/asyncHandler'));
const {
  ValidationError
} =
/* istanbul ignore next */
(cov_8ubi9qwn4().s[2]++, require('../utils/errors'));

/**
 * Base controller class with common functionality
 */
class BaseController {
  /**
   * Send success response
   * @param {Object} res - Express response object
   * @param {*} data - Response data
   * @param {string} message - Success message
   * @param {number} statusCode - HTTP status code
   */
  sendSuccess(res, data =
  /* istanbul ignore next */
  (cov_8ubi9qwn4().b[0][0]++, null), message =
  /* istanbul ignore next */
  (cov_8ubi9qwn4().b[1][0]++, 'Success'), statusCode =
  /* istanbul ignore next */
  (cov_8ubi9qwn4().b[2][0]++, 200)) {
    /* istanbul ignore next */
    cov_8ubi9qwn4().f[0]++;
    cov_8ubi9qwn4().s[3]++;
    res.status(statusCode).json(successResponse(data, message));
  }

  /**
   * Send paginated response
   * @param {Object} res - Express response object
   * @param {Array} data - Response data
   * @param {number} page - Current page
   * @param {number} limit - Items per page
   * @param {number} total - Total items
   * @param {string} message - Success message
   */
  sendPaginated(res, data, page, limit, total) {
    /* istanbul ignore next */
    cov_8ubi9qwn4().f[1]++;
    cov_8ubi9qwn4().s[4]++;
    res.status(200).json(paginatedResponse(data, page, limit, total));
  }

  /**
   * Validate request body
   * @param {Object} body - Request body
   * @param {Array<string>} requiredFields - Required field names
   * @throws {ValidationError} If validation fails
   */
  validateRequestBody(body, requiredFields) {
    /* istanbul ignore next */
    cov_8ubi9qwn4().f[2]++;
    const missingFields =
    /* istanbul ignore next */
    (cov_8ubi9qwn4().s[5]++, requiredFields.filter(field => {
      /* istanbul ignore next */
      cov_8ubi9qwn4().f[3]++;
      cov_8ubi9qwn4().s[6]++;
      return /* istanbul ignore next */(cov_8ubi9qwn4().b[3][0]++, body[field] === undefined) ||
      /* istanbul ignore next */
      (cov_8ubi9qwn4().b[3][1]++, body[field] === null) ||
      /* istanbul ignore next */
      (cov_8ubi9qwn4().b[3][2]++, body[field] === '');
    }));
    /* istanbul ignore next */
    cov_8ubi9qwn4().s[7]++;
    if (missingFields.length > 0) {
      /* istanbul ignore next */
      cov_8ubi9qwn4().b[4][0]++;
      cov_8ubi9qwn4().s[8]++;
      throw new ValidationError(`Missing required fields: ${missingFields.join(', ')}`, {
        missingFields
      });
    } else
    /* istanbul ignore next */
    {
      cov_8ubi9qwn4().b[4][1]++;
    }
  }

  /**
   * Validate request parameters
   * @param {Object} params - Request parameters
   * @param {Array<string>} requiredParams - Required parameter names
   * @throws {ValidationError} If validation fails
   */
  validateRequestParams(params, requiredParams) {
    /* istanbul ignore next */
    cov_8ubi9qwn4().f[4]++;
    const missingParams =
    /* istanbul ignore next */
    (cov_8ubi9qwn4().s[9]++, requiredParams.filter(param => {
      /* istanbul ignore next */
      cov_8ubi9qwn4().f[5]++;
      cov_8ubi9qwn4().s[10]++;
      return /* istanbul ignore next */(cov_8ubi9qwn4().b[5][0]++, !params[param]) ||
      /* istanbul ignore next */
      (cov_8ubi9qwn4().b[5][1]++, params[param] === '');
    }));
    /* istanbul ignore next */
    cov_8ubi9qwn4().s[11]++;
    if (missingParams.length > 0) {
      /* istanbul ignore next */
      cov_8ubi9qwn4().b[6][0]++;
      cov_8ubi9qwn4().s[12]++;
      throw new ValidationError(`Missing required parameters: ${missingParams.join(', ')}`, {
        missingParams
      });
    } else
    /* istanbul ignore next */
    {
      cov_8ubi9qwn4().b[6][1]++;
    }
  }

  /**
   * Sanitize request body
   * @param {Object} body - Request body
   * @param {Array<string>} allowedFields - Allowed field names
   * @returns {Object} Sanitized body
   */
  sanitizeRequestBody(body, allowedFields) {
    /* istanbul ignore next */
    cov_8ubi9qwn4().f[6]++;
    const sanitized =
    /* istanbul ignore next */
    (cov_8ubi9qwn4().s[13]++, {});
    /* istanbul ignore next */
    cov_8ubi9qwn4().s[14]++;
    Object.keys(body).forEach(key => {
      /* istanbul ignore next */
      cov_8ubi9qwn4().f[7]++;
      cov_8ubi9qwn4().s[15]++;
      if (allowedFields.includes(key)) {
        /* istanbul ignore next */
        cov_8ubi9qwn4().b[7][0]++;
        cov_8ubi9qwn4().s[16]++;
        // Basic sanitization
        if (typeof body[key] === 'string') {
          /* istanbul ignore next */
          cov_8ubi9qwn4().b[8][0]++;
          cov_8ubi9qwn4().s[17]++;
          sanitized[key] = body[key].trim();
        } else {
          /* istanbul ignore next */
          cov_8ubi9qwn4().b[8][1]++;
          cov_8ubi9qwn4().s[18]++;
          sanitized[key] = body[key];
        }
      } else
      /* istanbul ignore next */
      {
        cov_8ubi9qwn4().b[7][1]++;
      }
    });
    /* istanbul ignore next */
    cov_8ubi9qwn4().s[19]++;
    return sanitized;
  }

  /**
   * Get pagination parameters from query
   * @param {Object} query - Request query object
   * @returns {Object} Pagination parameters
   */
  getPaginationParams(query) {
    /* istanbul ignore next */
    cov_8ubi9qwn4().f[8]++;
    const page =
    /* istanbul ignore next */
    (cov_8ubi9qwn4().s[20]++, Math.max(1,
    /* istanbul ignore next */
    (cov_8ubi9qwn4().b[9][0]++, parseInt(query.page, 10)) ||
    /* istanbul ignore next */
    (cov_8ubi9qwn4().b[9][1]++, 1)));
    const limit =
    /* istanbul ignore next */
    (cov_8ubi9qwn4().s[21]++, Math.min(100, Math.max(1,
    /* istanbul ignore next */
    (cov_8ubi9qwn4().b[10][0]++, parseInt(query.limit, 10)) ||
    /* istanbul ignore next */
    (cov_8ubi9qwn4().b[10][1]++, 10))));
    const skip =
    /* istanbul ignore next */
    (cov_8ubi9qwn4().s[22]++, (page - 1) * limit);
    /* istanbul ignore next */
    cov_8ubi9qwn4().s[23]++;
    return {
      page,
      limit,
      skip
    };
  }

  /**
   * Get sorting parameters from query
   * @param {Object} query - Request query object
   * @param {Array<string>} allowedFields - Allowed sort fields
   * @param {string} defaultSort - Default sort field
   * @returns {Object} Sort parameters
   */
  getSortParams(query, allowedFields =
  /* istanbul ignore next */
  (cov_8ubi9qwn4().b[11][0]++, []), defaultSort =
  /* istanbul ignore next */
  (cov_8ubi9qwn4().b[12][0]++, 'createdAt')) {
    /* istanbul ignore next */
    cov_8ubi9qwn4().f[9]++;
    const sortBy =
    /* istanbul ignore next */
    (cov_8ubi9qwn4().s[24]++,
    /* istanbul ignore next */
    (cov_8ubi9qwn4().b[13][0]++, query.sortBy) ||
    /* istanbul ignore next */
    (cov_8ubi9qwn4().b[13][1]++, defaultSort));
    const sortOrder =
    /* istanbul ignore next */
    (cov_8ubi9qwn4().s[25]++, query.sortOrder === 'asc' ?
    /* istanbul ignore next */
    (cov_8ubi9qwn4().b[14][0]++, 1) :
    /* istanbul ignore next */
    (cov_8ubi9qwn4().b[14][1]++, -1));

    // Validate sort field
    /* istanbul ignore next */
    cov_8ubi9qwn4().s[26]++;
    if (
    /* istanbul ignore next */
    (cov_8ubi9qwn4().b[16][0]++, allowedFields.length > 0) &&
    /* istanbul ignore next */
    (cov_8ubi9qwn4().b[16][1]++, !allowedFields.includes(sortBy))) {
      /* istanbul ignore next */
      cov_8ubi9qwn4().b[15][0]++;
      cov_8ubi9qwn4().s[27]++;
      throw new ValidationError(`Invalid sort field. Allowed fields: ${allowedFields.join(', ')}`, {
        allowedFields,
        providedField: sortBy
      });
    } else
    /* istanbul ignore next */
    {
      cov_8ubi9qwn4().b[15][1]++;
    }
    cov_8ubi9qwn4().s[28]++;
    return {
      sortBy,
      sortOrder
    };
  }

  /**
   * Get filter parameters from query
   * @param {Object} query - Request query object
   * @param {Array<string>} allowedFilters - Allowed filter fields
   * @returns {Object} Filter parameters
   */
  getFilterParams(query, allowedFilters =
  /* istanbul ignore next */
  (cov_8ubi9qwn4().b[17][0]++, [])) {
    /* istanbul ignore next */
    cov_8ubi9qwn4().f[10]++;
    const filters =
    /* istanbul ignore next */
    (cov_8ubi9qwn4().s[29]++, {});
    /* istanbul ignore next */
    cov_8ubi9qwn4().s[30]++;
    allowedFilters.forEach(field => {
      /* istanbul ignore next */
      cov_8ubi9qwn4().f[11]++;
      cov_8ubi9qwn4().s[31]++;
      if (
      /* istanbul ignore next */
      (cov_8ubi9qwn4().b[19][0]++, query[field] !== undefined) &&
      /* istanbul ignore next */
      (cov_8ubi9qwn4().b[19][1]++, query[field] !== '')) {
        /* istanbul ignore next */
        cov_8ubi9qwn4().b[18][0]++;
        cov_8ubi9qwn4().s[32]++;
        filters[field] = query[field];
      } else
      /* istanbul ignore next */
      {
        cov_8ubi9qwn4().b[18][1]++;
      }
    });
    /* istanbul ignore next */
    cov_8ubi9qwn4().s[33]++;
    return filters;
  }

  /**
   * Handle service method execution
   * @param {Function} serviceMethod - Service method to execute
   * @param {Array} args - Arguments to pass to service method
   * @returns {Function} Express middleware function
   */
  handleService(serviceMethod, ...args) {
    /* istanbul ignore next */
    cov_8ubi9qwn4().f[12]++;
    cov_8ubi9qwn4().s[34]++;
    return asyncHandler(async (req, res, next) => {
      /* istanbul ignore next */
      cov_8ubi9qwn4().f[13]++;
      cov_8ubi9qwn4().s[35]++;
      try {
        const result =
        /* istanbul ignore next */
        (cov_8ubi9qwn4().s[36]++, await serviceMethod(...args));
        /* istanbul ignore next */
        cov_8ubi9qwn4().s[37]++;
        this.sendSuccess(res, result);
      } catch (error) {
        /* istanbul ignore next */
        cov_8ubi9qwn4().s[38]++;
        next(error);
      }
    });
  }

  /**
   * Handle service method with custom response
   * @param {Function} serviceMethod - Service method to execute
   * @param {Function} responseHandler - Custom response handler
   * @param {Array} args - Arguments to pass to service method
   * @returns {Function} Express middleware function
   */
  handleServiceWithResponse(serviceMethod, responseHandler, ...args) {
    /* istanbul ignore next */
    cov_8ubi9qwn4().f[14]++;
    cov_8ubi9qwn4().s[39]++;
    return asyncHandler(async (req, res, next) => {
      /* istanbul ignore next */
      cov_8ubi9qwn4().f[15]++;
      cov_8ubi9qwn4().s[40]++;
      try {
        const result =
        /* istanbul ignore next */
        (cov_8ubi9qwn4().s[41]++, await serviceMethod(...args));
        /* istanbul ignore next */
        cov_8ubi9qwn4().s[42]++;
        responseHandler(res, result);
      } catch (error) {
        /* istanbul ignore next */
        cov_8ubi9qwn4().s[43]++;
        next(error);
      }
    });
  }

  /**
   * Create CRUD operations for a service
   * @param {Object} service - Service instance
   * @param {string} resourceName - Name of the resource
   * @returns {Object} CRUD operation methods
   */
  createCRUDOperations(service, resourceName) {
    /* istanbul ignore next */
    cov_8ubi9qwn4().f[16]++;
    cov_8ubi9qwn4().s[44]++;
    return {
      // Get all resources
      getAll: asyncHandler(async (req, res, next) => {
        /* istanbul ignore next */
        cov_8ubi9qwn4().f[17]++;
        cov_8ubi9qwn4().s[45]++;
        try {
          const {
            page,
            limit,
            skip
          } =
          /* istanbul ignore next */
          (cov_8ubi9qwn4().s[46]++, this.getPaginationParams(req.query));
          const filters =
          /* istanbul ignore next */
          (cov_8ubi9qwn4().s[47]++, this.getFilterParams(req.query,
          /* istanbul ignore next */
          (cov_8ubi9qwn4().b[20][0]++, service.getAllowedFilters?.()) ||
          /* istanbul ignore next */
          (cov_8ubi9qwn4().b[20][1]++, [])));
          const {
            sortBy,
            sortOrder
          } =
          /* istanbul ignore next */
          (cov_8ubi9qwn4().s[48]++, this.getSortParams(req.query,
          /* istanbul ignore next */
          (cov_8ubi9qwn4().b[21][0]++, service.getAllowedSortFields?.()) ||
          /* istanbul ignore next */
          (cov_8ubi9qwn4().b[21][1]++, [])));
          const result =
          /* istanbul ignore next */
          (cov_8ubi9qwn4().s[49]++, await service.getAll({
            page,
            limit,
            skip,
            filters,
            sort: {
              [sortBy]: sortOrder
            }
          }));
          /* istanbul ignore next */
          cov_8ubi9qwn4().s[50]++;
          this.sendPaginated(res, result.data, page, limit, result.total);
        } catch (error) {
          /* istanbul ignore next */
          cov_8ubi9qwn4().s[51]++;
          next(error);
        }
      }),
      // Get resource by ID
      getById: asyncHandler(async (req, res, next) => {
        /* istanbul ignore next */
        cov_8ubi9qwn4().f[18]++;
        cov_8ubi9qwn4().s[52]++;
        try {
          /* istanbul ignore next */
          cov_8ubi9qwn4().s[53]++;
          this.validateRequestParams(req.params, ['id']);
          const result =
          /* istanbul ignore next */
          (cov_8ubi9qwn4().s[54]++, await service.getById(req.params.id));
          /* istanbul ignore next */
          cov_8ubi9qwn4().s[55]++;
          this.sendSuccess(res, result);
        } catch (error) {
          /* istanbul ignore next */
          cov_8ubi9qwn4().s[56]++;
          next(error);
        }
      }),
      // Create new resource
      create: asyncHandler(async (req, res, next) => {
        /* istanbul ignore next */
        cov_8ubi9qwn4().f[19]++;
        cov_8ubi9qwn4().s[57]++;
        try {
          const sanitizedBody =
          /* istanbul ignore next */
          (cov_8ubi9qwn4().s[58]++, this.sanitizeRequestBody(req.body,
          /* istanbul ignore next */
          (cov_8ubi9qwn4().b[22][0]++, service.getAllowedFields?.()) ||
          /* istanbul ignore next */
          (cov_8ubi9qwn4().b[22][1]++, [])));
          const result =
          /* istanbul ignore next */
          (cov_8ubi9qwn4().s[59]++, await service.create(sanitizedBody));
          /* istanbul ignore next */
          cov_8ubi9qwn4().s[60]++;
          this.sendSuccess(res, result, `${resourceName} created successfully`, 201);
        } catch (error) {
          /* istanbul ignore next */
          cov_8ubi9qwn4().s[61]++;
          next(error);
        }
      }),
      // Update resource
      update: asyncHandler(async (req, res, next) => {
        /* istanbul ignore next */
        cov_8ubi9qwn4().f[20]++;
        cov_8ubi9qwn4().s[62]++;
        try {
          /* istanbul ignore next */
          cov_8ubi9qwn4().s[63]++;
          this.validateRequestParams(req.params, ['id']);
          const sanitizedBody =
          /* istanbul ignore next */
          (cov_8ubi9qwn4().s[64]++, this.sanitizeRequestBody(req.body,
          /* istanbul ignore next */
          (cov_8ubi9qwn4().b[23][0]++, service.getAllowedFields?.()) ||
          /* istanbul ignore next */
          (cov_8ubi9qwn4().b[23][1]++, [])));
          const result =
          /* istanbul ignore next */
          (cov_8ubi9qwn4().s[65]++, await service.update(req.params.id, sanitizedBody));
          /* istanbul ignore next */
          cov_8ubi9qwn4().s[66]++;
          this.sendSuccess(res, result, `${resourceName} updated successfully`);
        } catch (error) {
          /* istanbul ignore next */
          cov_8ubi9qwn4().s[67]++;
          next(error);
        }
      }),
      // Delete resource
      delete: asyncHandler(async (req, res, next) => {
        /* istanbul ignore next */
        cov_8ubi9qwn4().f[21]++;
        cov_8ubi9qwn4().s[68]++;
        try {
          /* istanbul ignore next */
          cov_8ubi9qwn4().s[69]++;
          this.validateRequestParams(req.params, ['id']);
          /* istanbul ignore next */
          cov_8ubi9qwn4().s[70]++;
          await service.delete(req.params.id);
          /* istanbul ignore next */
          cov_8ubi9qwn4().s[71]++;
          this.sendSuccess(res, null, `${resourceName} deleted successfully`, 204);
        } catch (error) {
          /* istanbul ignore next */
          cov_8ubi9qwn4().s[72]++;
          next(error);
        }
      })
    };
  }
}
/* istanbul ignore next */
cov_8ubi9qwn4().s[73]++;
module.exports = BaseController;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,