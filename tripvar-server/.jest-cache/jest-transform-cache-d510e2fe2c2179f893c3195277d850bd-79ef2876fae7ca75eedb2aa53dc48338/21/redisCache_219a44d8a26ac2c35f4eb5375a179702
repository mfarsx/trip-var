b7181958f9d62363089cddf242559bc3
/* istanbul ignore next */
function cov_2ji4hfeys8() {
  var path = "/Users/mfarsx/dev/tripvar/tripvar-server/src/middleware/redisCache.js";
  var hash = "e007b1ae0bff27b9b9270330ead3d1c0983ff28e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/mfarsx/dev/tripvar/tripvar-server/src/middleware/redisCache.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 23
        },
        end: {
          line: 1,
          column: 49
        }
      },
      "1": {
        start: {
          line: 2,
          column: 24
        },
        end: {
          line: 2,
          column: 50
        }
      },
      "2": {
        start: {
          line: 12,
          column: 19
        },
        end: {
          line: 67,
          column: 1
        }
      },
      "3": {
        start: {
          line: 13,
          column: 49
        },
        end: {
          line: 13,
          column: 56
        }
      },
      "4": {
        start: {
          line: 15,
          column: 2
        },
        end: {
          line: 66,
          column: 4
        }
      },
      "5": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 19,
          column: 5
        }
      },
      "6": {
        start: {
          line: 18,
          column: 6
        },
        end: {
          line: 18,
          column: 20
        }
      },
      "7": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "8": {
        start: {
          line: 24,
          column: 6
        },
        end: {
          line: 31,
          column: 7
        }
      },
      "9": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 28
        }
      },
      "10": {
        start: {
          line: 26,
          column: 13
        },
        end: {
          line: 31,
          column: 7
        }
      },
      "11": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 23
        }
      },
      "12": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 60
        }
      },
      "13": {
        start: {
          line: 34,
          column: 25
        },
        end: {
          line: 34,
          column: 60
        }
      },
      "14": {
        start: {
          line: 36,
          column: 6
        },
        end: {
          line: 43,
          column: 7
        }
      },
      "15": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 61
        }
      },
      "16": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 42,
          column: 11
        }
      },
      "17": {
        start: {
          line: 46,
          column: 6
        },
        end: {
          line: 46,
          column: 60
        }
      },
      "18": {
        start: {
          line: 49,
          column: 27
        },
        end: {
          line: 49,
          column: 35
        }
      },
      "19": {
        start: {
          line: 50,
          column: 6
        },
        end: {
          line: 58,
          column: 8
        }
      },
      "20": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 54,
          column: 11
        }
      },
      "21": {
        start: {
          line: 53,
          column: 10
        },
        end: {
          line: 53,
          column: 78
        }
      },
      "22": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 45
        }
      },
      "23": {
        start: {
          line: 60,
          column: 6
        },
        end: {
          line: 60,
          column: 13
        }
      },
      "24": {
        start: {
          line: 63,
          column: 6
        },
        end: {
          line: 63,
          column: 86
        }
      },
      "25": {
        start: {
          line: 64,
          column: 6
        },
        end: {
          line: 64,
          column: 13
        }
      },
      "26": {
        start: {
          line: 73,
          column: 24
        },
        end: {
          line: 86,
          column: 1
        }
      },
      "27": {
        start: {
          line: 74,
          column: 2
        },
        end: {
          line: 85,
          column: 3
        }
      },
      "28": {
        start: {
          line: 75,
          column: 31
        },
        end: {
          line: 75,
          column: 57
        }
      },
      "29": {
        start: {
          line: 76,
          column: 19
        },
        end: {
          line: 76,
          column: 35
        }
      },
      "30": {
        start: {
          line: 77,
          column: 17
        },
        end: {
          line: 77,
          column: 43
        }
      },
      "31": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 82,
          column: 5
        }
      },
      "32": {
        start: {
          line: 80,
          column: 6
        },
        end: {
          line: 80,
          column: 32
        }
      },
      "33": {
        start: {
          line: 81,
          column: 6
        },
        end: {
          line: 81,
          column: 69
        }
      },
      "34": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 84,
          column: 73
        }
      },
      "35": {
        start: {
          line: 91,
          column: 21
        },
        end: {
          line: 133,
          column: 1
        }
      },
      "36": {
        start: {
          line: 92,
          column: 26
        },
        end: {
          line: 92,
          column: 33
        }
      },
      "37": {
        start: {
          line: 94,
          column: 2
        },
        end: {
          line: 132,
          column: 4
        }
      },
      "38": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 131,
          column: 5
        }
      },
      "39": {
        start: {
          line: 97,
          column: 24
        },
        end: {
          line: 97,
          column: 77
        }
      },
      "40": {
        start: {
          line: 99,
          column: 6
        },
        end: {
          line: 104,
          column: 7
        }
      },
      "41": {
        start: {
          line: 100,
          column: 28
        },
        end: {
          line: 100,
          column: 66
        }
      },
      "42": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "43": {
        start: {
          line: 102,
          column: 10
        },
        end: {
          line: 102,
          column: 36
        }
      },
      "44": {
        start: {
          line: 107,
          column: 6
        },
        end: {
          line: 117,
          column: 8
        }
      },
      "45": {
        start: {
          line: 108,
          column: 29
        },
        end: {
          line: 108,
          column: 72
        }
      },
      "46": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 109,
          column: 61
        }
      },
      "47": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 114,
          column: 11
        }
      },
      "48": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 27
        }
      },
      "49": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 28
        }
      },
      "50": {
        start: {
          line: 119,
          column: 6
        },
        end: {
          line: 125,
          column: 8
        }
      },
      "51": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "52": {
        start: {
          line: 121,
          column: 10
        },
        end: {
          line: 121,
          column: 52
        }
      },
      "53": {
        start: {
          line: 122,
          column: 10
        },
        end: {
          line: 122,
          column: 39
        }
      },
      "54": {
        start: {
          line: 123,
          column: 10
        },
        end: {
          line: 123,
          column: 29
        }
      },
      "55": {
        start: {
          line: 127,
          column: 6
        },
        end: {
          line: 127,
          column: 13
        }
      },
      "56": {
        start: {
          line: 129,
          column: 6
        },
        end: {
          line: 129,
          column: 88
        }
      },
      "57": {
        start: {
          line: 130,
          column: 6
        },
        end: {
          line: 130,
          column: 13
        }
      },
      "58": {
        start: {
          line: 135,
          column: 0
        },
        end: {
          line: 139,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 19
          },
          end: {
            line: 12,
            column: 20
          }
        },
        loc: {
          start: {
            line: 12,
            column: 37
          },
          end: {
            line: 67,
            column: 1
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 10
          }
        },
        loc: {
          start: {
            line: 15,
            column: 34
          },
          end: {
            line: 66,
            column: 3
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 50,
            column: 17
          },
          end: {
            line: 50,
            column: 18
          }
        },
        loc: {
          start: {
            line: 50,
            column: 32
          },
          end: {
            line: 58,
            column: 7
          }
        },
        line: 50
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 52,
            column: 55
          },
          end: {
            line: 52,
            column: 56
          }
        },
        loc: {
          start: {
            line: 52,
            column: 62
          },
          end: {
            line: 54,
            column: 9
          }
        },
        line: 52
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 73,
            column: 24
          },
          end: {
            line: 73,
            column: 25
          }
        },
        loc: {
          start: {
            line: 73,
            column: 42
          },
          end: {
            line: 86,
            column: 1
          }
        },
        line: 73
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 91,
            column: 21
          },
          end: {
            line: 91,
            column: 22
          }
        },
        loc: {
          start: {
            line: 91,
            column: 39
          },
          end: {
            line: 133,
            column: 1
          }
        },
        line: 91
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 94,
            column: 9
          },
          end: {
            line: 94,
            column: 10
          }
        },
        loc: {
          start: {
            line: 94,
            column: 34
          },
          end: {
            line: 132,
            column: 3
          }
        },
        line: 94
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 107,
            column: 23
          },
          end: {
            line: 107,
            column: 24
          }
        },
        loc: {
          start: {
            line: 107,
            column: 38
          },
          end: {
            line: 117,
            column: 7
          }
        },
        line: 107
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 119,
            column: 25
          },
          end: {
            line: 119,
            column: 26
          }
        },
        loc: {
          start: {
            line: 119,
            column: 36
          },
          end: {
            line: 125,
            column: 7
          }
        },
        line: 119
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 12,
            column: 20
          },
          end: {
            line: 12,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 12,
            column: 30
          },
          end: {
            line: 12,
            column: 32
          }
        }],
        line: 12
      },
      "1": {
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 13,
            column: 25
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 13,
            column: 21
          },
          end: {
            line: 13,
            column: 25
          }
        }],
        line: 13
      },
      "2": {
        loc: {
          start: {
            line: 13,
            column: 27
          },
          end: {
            line: 13,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 13,
            column: 39
          },
          end: {
            line: 13,
            column: 44
          }
        }],
        line: 13
      },
      "3": {
        loc: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "4": {
        loc: {
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 17,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 17,
            column: 17
          }
        }, {
          start: {
            line: 17,
            column: 21
          },
          end: {
            line: 17,
            column: 51
          }
        }],
        line: 17
      },
      "5": {
        loc: {
          start: {
            line: 24,
            column: 6
          },
          end: {
            line: 31,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 6
          },
          end: {
            line: 31,
            column: 7
          }
        }, {
          start: {
            line: 26,
            column: 13
          },
          end: {
            line: 31,
            column: 7
          }
        }],
        line: 24
      },
      "6": {
        loc: {
          start: {
            line: 26,
            column: 13
          },
          end: {
            line: 31,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 13
          },
          end: {
            line: 31,
            column: 7
          }
        }, {
          start: {
            line: 28,
            column: 13
          },
          end: {
            line: 31,
            column: 7
          }
        }],
        line: 26
      },
      "7": {
        loc: {
          start: {
            line: 36,
            column: 6
          },
          end: {
            line: 43,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 6
          },
          end: {
            line: 43,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "8": {
        loc: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "9": {
        loc: {
          start: {
            line: 91,
            column: 22
          },
          end: {
            line: 91,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 91,
            column: 32
          },
          end: {
            line: 91,
            column: 34
          }
        }],
        line: 91
      },
      "10": {
        loc: {
          start: {
            line: 92,
            column: 10
          },
          end: {
            line: 92,
            column: 21
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 92,
            column: 16
          },
          end: {
            line: 92,
            column: 21
          }
        }],
        line: 92
      },
      "11": {
        loc: {
          start: {
            line: 97,
            column: 24
          },
          end: {
            line: 97,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 24
          },
          end: {
            line: 97,
            column: 46
          }
        }, {
          start: {
            line: 97,
            column: 50
          },
          end: {
            line: 97,
            column: 77
          }
        }],
        line: 97
      },
      "12": {
        loc: {
          start: {
            line: 99,
            column: 6
          },
          end: {
            line: 104,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 6
          },
          end: {
            line: 104,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "13": {
        loc: {
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "14": {
        loc: {
          start: {
            line: 108,
            column: 29
          },
          end: {
            line: 108,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 29
          },
          end: {
            line: 108,
            column: 38
          }
        }, {
          start: {
            line: 108,
            column: 42
          },
          end: {
            line: 108,
            column: 72
          }
        }],
        line: 108
      },
      "15": {
        loc: {
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0],
      "10": [0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e007b1ae0bff27b9b9270330ead3d1c0983ff28e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ji4hfeys8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ji4hfeys8();
const {
  redisUtils
} =
/* istanbul ignore next */
(cov_2ji4hfeys8().s[0]++, require('../config/redis'));
const {
  info,
  error
} =
/* istanbul ignore next */
(cov_2ji4hfeys8().s[1]++, require('../utils/logger'));

/**
 * Redis caching middleware
 * @param {Object} options - Cache options
 * @param {string} options.key - Cache key (can be a function that receives req)
 * @param {number} options.ttl - Time to live in seconds (default: 3600)
 * @param {boolean} options.skipCache - Skip cache for certain conditions
 * @returns {Function} Express middleware function
 */
/* istanbul ignore next */
cov_2ji4hfeys8().s[2]++;
const redisCache = (options =
/* istanbul ignore next */
(cov_2ji4hfeys8().b[0][0]++, {})) => {
  /* istanbul ignore next */
  cov_2ji4hfeys8().f[0]++;
  const {
    key,
    ttl =
    /* istanbul ignore next */
    (cov_2ji4hfeys8().b[1][0]++, 3600),
    skipCache =
    /* istanbul ignore next */
    (cov_2ji4hfeys8().b[2][0]++, false)
  } =
  /* istanbul ignore next */
  (cov_2ji4hfeys8().s[3]++, options);
  /* istanbul ignore next */
  cov_2ji4hfeys8().s[4]++;
  return async (req, res, next) => {
    /* istanbul ignore next */
    cov_2ji4hfeys8().f[1]++;
    cov_2ji4hfeys8().s[5]++;
    // Skip caching if requested
    if (
    /* istanbul ignore next */
    (cov_2ji4hfeys8().b[4][0]++, skipCache) ||
    /* istanbul ignore next */
    (cov_2ji4hfeys8().b[4][1]++, req.query.skipCache === 'true')) {
      /* istanbul ignore next */
      cov_2ji4hfeys8().b[3][0]++;
      cov_2ji4hfeys8().s[6]++;
      return next();
    } else
    /* istanbul ignore next */
    {
      cov_2ji4hfeys8().b[3][1]++;
    }
    cov_2ji4hfeys8().s[7]++;
    try {
      // Generate cache key
      let cacheKey;
      /* istanbul ignore next */
      cov_2ji4hfeys8().s[8]++;
      if (typeof key === 'function') {
        /* istanbul ignore next */
        cov_2ji4hfeys8().b[5][0]++;
        cov_2ji4hfeys8().s[9]++;
        cacheKey = key(req);
      } else {
        /* istanbul ignore next */
        cov_2ji4hfeys8().b[5][1]++;
        cov_2ji4hfeys8().s[10]++;
        if (key) {
          /* istanbul ignore next */
          cov_2ji4hfeys8().b[6][0]++;
          cov_2ji4hfeys8().s[11]++;
          cacheKey = key;
        } else {
          /* istanbul ignore next */
          cov_2ji4hfeys8().b[6][1]++;
          cov_2ji4hfeys8().s[12]++;
          // Default cache key based on URL and query params
          cacheKey = `cache:${req.method}:${req.originalUrl}`;
        }
      }

      // Try to get from cache
      const cachedData =
      /* istanbul ignore next */
      (cov_2ji4hfeys8().s[13]++, await redisUtils.getCache(cacheKey));
      /* istanbul ignore next */
      cov_2ji4hfeys8().s[14]++;
      if (cachedData) {
        /* istanbul ignore next */
        cov_2ji4hfeys8().b[7][0]++;
        cov_2ji4hfeys8().s[15]++;
        info('Cache hit', {
          key: cacheKey,
          path: req.path
        });
        /* istanbul ignore next */
        cov_2ji4hfeys8().s[16]++;
        return res.json({
          ...cachedData,
          _cached: true,
          _cacheKey: cacheKey
        });
      } else
      /* istanbul ignore next */
      {
        cov_2ji4hfeys8().b[7][1]++;
      }

      // Cache miss - continue to route handler
      cov_2ji4hfeys8().s[17]++;
      info('Cache miss', {
        key: cacheKey,
        path: req.path
      });

      // Store original res.json to intercept response
      const originalJson =
      /* istanbul ignore next */
      (cov_2ji4hfeys8().s[18]++, res.json);
      /* istanbul ignore next */
      cov_2ji4hfeys8().s[19]++;
      res.json = function (data) {
        /* istanbul ignore next */
        cov_2ji4hfeys8().f[2]++;
        cov_2ji4hfeys8().s[20]++;
        // Cache the response (async, don't wait)
        redisUtils.setCache(cacheKey, data, ttl).catch(err => {
          /* istanbul ignore next */
          cov_2ji4hfeys8().f[3]++;
          cov_2ji4hfeys8().s[21]++;
          error('Failed to cache response', {
            error: err.message,
            cacheKey
          });
        });

        // Call original json method
        /* istanbul ignore next */
        cov_2ji4hfeys8().s[22]++;
        return originalJson.call(this, data);
      };
      /* istanbul ignore next */
      cov_2ji4hfeys8().s[23]++;
      next();
    } catch (err) {
      /* istanbul ignore next */
      cov_2ji4hfeys8().s[24]++;
      // If Redis fails, continue without caching
      error('Redis cache middleware error', {
        error: err.message,
        stack: err.stack
      });
      /* istanbul ignore next */
      cov_2ji4hfeys8().s[25]++;
      next();
    }
  };
};

/**
 * Invalidate cache by key pattern
 * @param {string} pattern - Key pattern to invalidate
 */
/* istanbul ignore next */
cov_2ji4hfeys8().s[26]++;
const invalidateCache = async pattern => {
  /* istanbul ignore next */
  cov_2ji4hfeys8().f[4]++;
  cov_2ji4hfeys8().s[27]++;
  try {
    const {
      getRedisClient
    } =
    /* istanbul ignore next */
    (cov_2ji4hfeys8().s[28]++, require('../config/redis'));
    const client =
    /* istanbul ignore next */
    (cov_2ji4hfeys8().s[29]++, getRedisClient());
    const keys =
    /* istanbul ignore next */
    (cov_2ji4hfeys8().s[30]++, await client.keys(pattern));
    /* istanbul ignore next */
    cov_2ji4hfeys8().s[31]++;
    if (keys.length > 0) {
      /* istanbul ignore next */
      cov_2ji4hfeys8().b[8][0]++;
      cov_2ji4hfeys8().s[32]++;
      await client.del(...keys);
      /* istanbul ignore next */
      cov_2ji4hfeys8().s[33]++;
      info('Cache invalidated', {
        pattern,
        keysCount: keys.length
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ji4hfeys8().b[8][1]++;
    }
  } catch (err) {
    /* istanbul ignore next */
    cov_2ji4hfeys8().s[34]++;
    error('Failed to invalidate cache', {
      error: err.message,
      pattern
    });
  }
};

/**
 * Session middleware using Redis
 */
/* istanbul ignore next */
cov_2ji4hfeys8().s[35]++;
const redisSession = (options =
/* istanbul ignore next */
(cov_2ji4hfeys8().b[9][0]++, {})) => {
  /* istanbul ignore next */
  cov_2ji4hfeys8().f[5]++;
  const {
    ttl =
    /* istanbul ignore next */
    (cov_2ji4hfeys8().b[10][0]++, 86400)
  } =
  /* istanbul ignore next */
  (cov_2ji4hfeys8().s[36]++, options); // 24 hours default
  /* istanbul ignore next */
  cov_2ji4hfeys8().s[37]++;
  return async (req, res, next) => {
    /* istanbul ignore next */
    cov_2ji4hfeys8().f[6]++;
    cov_2ji4hfeys8().s[38]++;
    try {
      // Get session ID from cookie or header
      const sessionId =
      /* istanbul ignore next */
      (cov_2ji4hfeys8().s[39]++,
      /* istanbul ignore next */
      (cov_2ji4hfeys8().b[11][0]++, req.cookies?.sessionId) ||
      /* istanbul ignore next */
      (cov_2ji4hfeys8().b[11][1]++, req.headers['x-session-id']));
      /* istanbul ignore next */
      cov_2ji4hfeys8().s[40]++;
      if (sessionId) {
        /* istanbul ignore next */
        cov_2ji4hfeys8().b[12][0]++;
        const sessionData =
        /* istanbul ignore next */
        (cov_2ji4hfeys8().s[41]++, await redisUtils.getSession(sessionId));
        /* istanbul ignore next */
        cov_2ji4hfeys8().s[42]++;
        if (sessionData) {
          /* istanbul ignore next */
          cov_2ji4hfeys8().b[13][0]++;
          cov_2ji4hfeys8().s[43]++;
          req.session = sessionData;
        } else
        /* istanbul ignore next */
        {
          cov_2ji4hfeys8().b[13][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_2ji4hfeys8().b[12][1]++;
      }

      // Add session methods to response
      cov_2ji4hfeys8().s[44]++;
      res.setSession = async data => {
        /* istanbul ignore next */
        cov_2ji4hfeys8().f[7]++;
        const newSessionId =
        /* istanbul ignore next */
        (cov_2ji4hfeys8().s[45]++,
        /* istanbul ignore next */
        (cov_2ji4hfeys8().b[14][0]++, sessionId) ||
        /* istanbul ignore next */
        (cov_2ji4hfeys8().b[14][1]++, require('crypto').randomUUID()));
        /* istanbul ignore next */
        cov_2ji4hfeys8().s[46]++;
        await redisUtils.setSession(newSessionId, data, ttl);
        /* istanbul ignore next */
        cov_2ji4hfeys8().s[47]++;
        res.cookie('sessionId', newSessionId, {
          httpOnly: true,
          secure: process.env.NODE_ENV === 'production',
          maxAge: ttl * 1000
        });
        /* istanbul ignore next */
        cov_2ji4hfeys8().s[48]++;
        req.session = data;
        /* istanbul ignore next */
        cov_2ji4hfeys8().s[49]++;
        return newSessionId;
      };
      /* istanbul ignore next */
      cov_2ji4hfeys8().s[50]++;
      res.clearSession = async () => {
        /* istanbul ignore next */
        cov_2ji4hfeys8().f[8]++;
        cov_2ji4hfeys8().s[51]++;
        if (sessionId) {
          /* istanbul ignore next */
          cov_2ji4hfeys8().b[15][0]++;
          cov_2ji4hfeys8().s[52]++;
          await redisUtils.deleteSession(sessionId);
          /* istanbul ignore next */
          cov_2ji4hfeys8().s[53]++;
          res.clearCookie('sessionId');
          /* istanbul ignore next */
          cov_2ji4hfeys8().s[54]++;
          delete req.session;
        } else
        /* istanbul ignore next */
        {
          cov_2ji4hfeys8().b[15][1]++;
        }
      };
      /* istanbul ignore next */
      cov_2ji4hfeys8().s[55]++;
      next();
    } catch (err) {
      /* istanbul ignore next */
      cov_2ji4hfeys8().s[56]++;
      error('Redis session middleware error', {
        error: err.message,
        stack: err.stack
      });
      /* istanbul ignore next */
      cov_2ji4hfeys8().s[57]++;
      next();
    }
  };
};
/* istanbul ignore next */
cov_2ji4hfeys8().s[58]++;
module.exports = {
  redisCache,
  invalidateCache,
  redisSession
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,