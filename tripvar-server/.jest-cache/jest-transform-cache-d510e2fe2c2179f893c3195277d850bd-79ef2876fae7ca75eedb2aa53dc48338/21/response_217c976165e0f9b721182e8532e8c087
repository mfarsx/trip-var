829f69a7efb0396bdfba47940e968ba9
/* istanbul ignore next */
function cov_772dwv1en() {
  var path = "/Users/mfarsx/dev/tripvar/tripvar-server/src/utils/response.js";
  var hash = "c325b4a79bb7ade8882afd713a5370cae2e79b73";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/mfarsx/dev/tripvar/tripvar-server/src/utils/response.js",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 65
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "2": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 28,
          column: 3
        }
      },
      "3": {
        start: {
          line: 19,
          column: 59
        },
        end: {
          line: 28,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 26
          },
          end: {
            line: 6,
            column: 27
          }
        },
        loc: {
          start: {
            line: 6,
            column: 65
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 19,
            column: 28
          },
          end: {
            line: 19,
            column: 29
          }
        },
        loc: {
          start: {
            line: 19,
            column: 59
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 19
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 6,
            column: 27
          },
          end: {
            line: 6,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 6,
            column: 34
          },
          end: {
            line: 6,
            column: 38
          }
        }],
        line: 6
      },
      "1": {
        loc: {
          start: {
            line: 6,
            column: 40
          },
          end: {
            line: 6,
            column: 59
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 6,
            column: 50
          },
          end: {
            line: 6,
            column: 59
          }
        }],
        line: 6
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0],
      "1": [0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c325b4a79bb7ade8882afd713a5370cae2e79b73"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_772dwv1en = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_772dwv1en();
cov_772dwv1en().s[0]++;
/**
 * @param {Object} data - The data to be sent in the response
 * @param {String} message - Optional message to be sent with the response
 * @returns {Object} Standardized success response object
 */
exports.successResponse = (data =
/* istanbul ignore next */
(cov_772dwv1en().b[0][0]++, null), message =
/* istanbul ignore next */
(cov_772dwv1en().b[1][0]++, 'Success')) => {
  /* istanbul ignore next */
  cov_772dwv1en().f[0]++;
  cov_772dwv1en().s[1]++;
  return {
    status: 'success',
    message,
    data
  };
};

/**
 * @param {Array} data - The paginated data array
 * @param {Number} page - Current page number
 * @param {Number} limit - Items per page
 * @param {Number} total - Total number of items
 * @returns {Object} Standardized paginated response object
 */
/* istanbul ignore next */
cov_772dwv1en().s[2]++;
exports.paginatedResponse = (data, page, limit, total) => {
  /* istanbul ignore next */
  cov_772dwv1en().f[1]++;
  cov_772dwv1en().s[3]++;
  return {
    status: 'success',
    data,
    pagination: {
      page: parseInt(page),
      limit: parseInt(limit),
      total,
      pages: Math.ceil(total / limit)
    }
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfNzcyZHd2MWVuIiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiZXhwb3J0cyIsInN1Y2Nlc3NSZXNwb25zZSIsImRhdGEiLCJiIiwibWVzc2FnZSIsImYiLCJzdGF0dXMiLCJwYWdpbmF0ZWRSZXNwb25zZSIsInBhZ2UiLCJsaW1pdCIsInRvdGFsIiwicGFnaW5hdGlvbiIsInBhcnNlSW50IiwicGFnZXMiLCJNYXRoIiwiY2VpbCJdLCJzb3VyY2VzIjpbInJlc3BvbnNlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHBhcmFtIHtPYmplY3R9IGRhdGEgLSBUaGUgZGF0YSB0byBiZSBzZW50IGluIHRoZSByZXNwb25zZVxuICogQHBhcmFtIHtTdHJpbmd9IG1lc3NhZ2UgLSBPcHRpb25hbCBtZXNzYWdlIHRvIGJlIHNlbnQgd2l0aCB0aGUgcmVzcG9uc2VcbiAqIEByZXR1cm5zIHtPYmplY3R9IFN0YW5kYXJkaXplZCBzdWNjZXNzIHJlc3BvbnNlIG9iamVjdFxuICovXG5leHBvcnRzLnN1Y2Nlc3NSZXNwb25zZSA9IChkYXRhID0gbnVsbCwgbWVzc2FnZSA9ICdTdWNjZXNzJykgPT4gKHtcbiAgc3RhdHVzOiAnc3VjY2VzcycsXG4gIG1lc3NhZ2UsXG4gIGRhdGFcbn0pO1xuXG4vKipcbiAqIEBwYXJhbSB7QXJyYXl9IGRhdGEgLSBUaGUgcGFnaW5hdGVkIGRhdGEgYXJyYXlcbiAqIEBwYXJhbSB7TnVtYmVyfSBwYWdlIC0gQ3VycmVudCBwYWdlIG51bWJlclxuICogQHBhcmFtIHtOdW1iZXJ9IGxpbWl0IC0gSXRlbXMgcGVyIHBhZ2VcbiAqIEBwYXJhbSB7TnVtYmVyfSB0b3RhbCAtIFRvdGFsIG51bWJlciBvZiBpdGVtc1xuICogQHJldHVybnMge09iamVjdH0gU3RhbmRhcmRpemVkIHBhZ2luYXRlZCByZXNwb25zZSBvYmplY3RcbiAqL1xuZXhwb3J0cy5wYWdpbmF0ZWRSZXNwb25zZSA9IChkYXRhLCBwYWdlLCBsaW1pdCwgdG90YWwpID0+ICh7XG4gIHN0YXR1czogJ3N1Y2Nlc3MnLFxuICBkYXRhLFxuICBwYWdpbmF0aW9uOiB7XG4gICAgcGFnZTogcGFyc2VJbnQocGFnZSksXG4gICAgbGltaXQ6IHBhcnNlSW50KGxpbWl0KSxcbiAgICB0b3RhbCxcbiAgICBwYWdlczogTWF0aC5jZWlsKHRvdGFsIC8gbGltaXQpXG4gIH1cbn0pO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQWVZO0lBQUFBLGFBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFDLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFELGFBQUE7QUFBQUEsYUFBQSxHQUFBRSxDQUFBO0FBZlo7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBQyxPQUFPLENBQUNDLGVBQWUsR0FBRyxDQUFDQyxJQUFJO0FBQUE7QUFBQSxDQUFBTCxhQUFBLEdBQUFNLENBQUEsVUFBRyxJQUFJLEdBQUVDLE9BQU87QUFBQTtBQUFBLENBQUFQLGFBQUEsR0FBQU0sQ0FBQSxVQUFHLFNBQVMsTUFBTTtFQUFBO0VBQUFOLGFBQUEsR0FBQVEsQ0FBQTtFQUFBUixhQUFBLEdBQUFFLENBQUE7RUFBQTtJQUMvRE8sTUFBTSxFQUFFLFNBQVM7SUFDakJGLE9BQU87SUFDUEY7RUFDRixDQUFDO0FBQUQsQ0FBRTs7QUFFRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU5BO0FBQUFMLGFBQUEsR0FBQUUsQ0FBQTtBQU9BQyxPQUFPLENBQUNPLGlCQUFpQixHQUFHLENBQUNMLElBQUksRUFBRU0sSUFBSSxFQUFFQyxLQUFLLEVBQUVDLEtBQUssS0FBTTtFQUFBO0VBQUFiLGFBQUEsR0FBQVEsQ0FBQTtFQUFBUixhQUFBLEdBQUFFLENBQUE7RUFBQTtJQUN6RE8sTUFBTSxFQUFFLFNBQVM7SUFDakJKLElBQUk7SUFDSlMsVUFBVSxFQUFFO01BQ1ZILElBQUksRUFBRUksUUFBUSxDQUFDSixJQUFJLENBQUM7TUFDcEJDLEtBQUssRUFBRUcsUUFBUSxDQUFDSCxLQUFLLENBQUM7TUFDdEJDLEtBQUs7TUFDTEcsS0FBSyxFQUFFQyxJQUFJLENBQUNDLElBQUksQ0FBQ0wsS0FBSyxHQUFHRCxLQUFLO0lBQ2hDO0VBQ0YsQ0FBQztBQUFELENBQUUiLCJpZ25vcmVMaXN0IjpbXX0=