{"version":3,"names":["redisUtils","require","BaseService","cacheData","key","data","ttl","setCache","error","console","warn","message","getCachedData","getCache","deleteCachedData","deleteCache","clearCacheByPattern","pattern","getRedisClient","client","keys","length","del","validateRequiredFields","requiredFields","missingFields","filter","field","undefined","ValidationError","join","sanitizeInput","allowedFields","sanitized","Object","forEach","includes","trim","createPaginationMeta","page","limit","total","parseInt","pages","Math","ceil","hasNext","hasPrev","withRetry","operation","maxRetries","lastError","attempt","statusCode","delay","pow","Promise","resolve","setTimeout","module","exports"],"sources":["base.service.js"],"sourcesContent":["const { redisUtils } = require('../config/redis');\n\n/**\n * Base service class with common functionality\n */\nclass BaseService {\n  /**\n   * Cache data with TTL\n   * @param {string} key - Cache key\n   * @param {*} data - Data to cache\n   * @param {number} ttl - Time to live in seconds\n   * @returns {Promise<void>}\n   */\n  async cacheData(key, data, ttl = 300) {\n    try {\n      await redisUtils.setCache(key, data, ttl);\n    } catch (error) {\n      console.warn(`Failed to cache data for key ${key}:`, error.message);\n    }\n  }\n\n  /**\n   * Get cached data\n   * @param {string} key - Cache key\n   * @returns {Promise<*>} Cached data or null\n   */\n  async getCachedData(key) {\n    try {\n      return await redisUtils.getCache(key);\n    } catch (error) {\n      console.warn(`Failed to get cached data for key ${key}:`, error.message);\n      return null;\n    }\n  }\n\n  /**\n   * Delete cached data\n   * @param {string} key - Cache key\n   * @returns {Promise<void>}\n   */\n  async deleteCachedData(key) {\n    try {\n      await redisUtils.deleteCache(key);\n    } catch (error) {\n      console.warn(`Failed to delete cached data for key ${key}:`, error.message);\n    }\n  }\n\n  /**\n   * Clear cache by pattern\n   * @param {string} pattern - Cache key pattern\n   * @returns {Promise<number>} Number of keys deleted\n   */\n  async clearCacheByPattern(pattern) {\n    try {\n      const { getRedisClient } = require('../config/redis');\n      const client = getRedisClient();\n      const keys = await client.keys(pattern);\n\n      if (keys.length > 0) {\n        await client.del(...keys);\n        return keys.length;\n      }\n\n      return 0;\n    } catch (error) {\n      console.warn(`Failed to clear cache by pattern ${pattern}:`, error.message);\n      return 0;\n    }\n  }\n\n  /**\n   * Validate required fields\n   * @param {Object} data - Data to validate\n   * @param {Array<string>} requiredFields - Required field names\n   * @throws {ValidationError} If validation fails\n   */\n  validateRequiredFields(data, requiredFields) {\n    const missingFields = requiredFields.filter(field =>\n      data[field] === undefined || data[field] === null || data[field] === ''\n    );\n\n    if (missingFields.length > 0) {\n      const { ValidationError } = require('../utils/errors');\n      throw new ValidationError(\n        `Missing required fields: ${missingFields.join(', ')}`,\n        { missingFields }\n      );\n    }\n  }\n\n  /**\n   * Sanitize input data\n   * @param {Object} data - Data to sanitize\n   * @param {Array<string>} allowedFields - Allowed field names\n   * @returns {Object} Sanitized data\n   */\n  sanitizeInput(data, allowedFields) {\n    const sanitized = {};\n\n    Object.keys(data).forEach(key => {\n      if (allowedFields.includes(key)) {\n        // Basic sanitization\n        if (typeof data[key] === 'string') {\n          sanitized[key] = data[key].trim();\n        } else {\n          sanitized[key] = data[key];\n        }\n      }\n    });\n\n    return sanitized;\n  }\n\n  /**\n   * Create pagination metadata\n   * @param {number} page - Current page\n   * @param {number} limit - Items per page\n   * @param {number} total - Total items\n   * @returns {Object} Pagination metadata\n   */\n  createPaginationMeta(page, limit, total) {\n    return {\n      page: parseInt(page),\n      limit: parseInt(limit),\n      total,\n      pages: Math.ceil(total / limit),\n      hasNext: page * limit < total,\n      hasPrev: page > 1\n    };\n  }\n\n  /**\n   * Handle database operation with retry logic\n   * @param {Function} operation - Database operation\n   * @param {number} maxRetries - Maximum retry attempts\n   * @returns {Promise<*>} Operation result\n   */\n  async withRetry(operation, maxRetries = 3) {\n    let lastError;\n\n    for (let attempt = 1; attempt <= maxRetries; attempt++) {\n      try {\n        return await operation();\n      } catch (error) {\n        lastError = error;\n\n        // Don't retry on validation errors or authentication errors\n        if (error.statusCode && error.statusCode < 500) {\n          throw error;\n        }\n\n        if (attempt === maxRetries) {\n          throw error;\n        }\n\n        // Exponential backoff\n        const delay = Math.pow(2, attempt) * 1000;\n        await new Promise(resolve => setTimeout(resolve, delay));\n      }\n    }\n\n    throw lastError;\n  }\n}\n\nmodule.exports = BaseService;"],"mappings":"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","ignoreList":[]}