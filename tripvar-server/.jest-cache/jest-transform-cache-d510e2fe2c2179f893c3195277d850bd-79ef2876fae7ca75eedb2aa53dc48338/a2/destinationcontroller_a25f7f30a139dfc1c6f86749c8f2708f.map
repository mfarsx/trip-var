{"version":3,"names":["Destination","require","ValidationError","info","destinationController","getAllDestinations","req","res","next","category","featured","search","from","to","date","guests","query","searchConditions","push","title","$regex","$options","description","location","length","$or","destinations","find","resultsCount","status","json","data","message","error","getDestinationById","destination","findById","params","id","createDestination","create","body","updateDestination","findByIdAndUpdate","new","runValidators","deleteDestination","findByIdAndDelete","module","exports"],"sources":["destination.controller.js"],"sourcesContent":["const Destination = require('../models/destination.model');\nconst { ValidationError } = require('../utils/errors');\nconst { info } = require('../utils/logger');\n\nconst destinationController = {\n  // Get all destinations\n  getAllDestinations: async function(req, res, next) {\n    try {\n      const { category, featured, search, from, to, date, guests } = req.query;\n      const query = {};\n\n      // Basic filters\n      if (category) {\n        query.category = category;\n      }\n\n      if (featured === 'true') {\n        query.featured = true;\n      }\n\n      // Advanced search functionality\n      const searchConditions = [];\n\n      // If search parameter is provided (general search)\n      if (search) {\n        searchConditions.push(\n          { title: { $regex: search, $options: 'i' } },\n          { description: { $regex: search, $options: 'i' } },\n          { location: { $regex: search, $options: 'i' } }\n        );\n      }\n\n      // If destination (to) is provided\n      if (to) {\n        searchConditions.push(\n          { location: { $regex: to, $options: 'i' } },\n          { title: { $regex: to, $options: 'i' } }\n        );\n      }\n\n      // If departure location (from) is provided\n      // Note: This is a simplified approach since our model doesn't have a \"from\" field\n      // In a real app, you might have a different model structure\n      if (from) {\n        // We could use this to filter based on proximity or routes\n        // For now, we'll just log it\n        info(`Search request with departure location: ${from}`);\n      }\n\n      // If date is provided\n      if (date) {\n        // In a real app, you would filter based on availability on this date\n        // For now, we'll just log it\n        info(`Search request for date: ${date}`);\n      }\n\n      // If guests count is provided\n      if (guests) {\n        // In a real app, you would filter based on capacity\n        // For now, we'll just log it\n        info(`Search request for ${guests} guests`);\n      }\n\n      // Add search conditions to query if any exist\n      if (searchConditions.length > 0) {\n        query.$or = searchConditions;\n      }\n\n      const destinations = await Destination.find(query);\n\n      // Log the search for analytics purposes\n      info('Search performed', {\n        category, featured, search, from, to, date, guests,\n        resultsCount: destinations.length\n      });\n\n      res.status(200).json({\n        status: 'success',\n        data: {\n          destinations\n        },\n        message: 'Destinations retrieved successfully'\n      });\n    } catch (error) {\n      next(error);\n    }\n  },\n\n  // Get destination by ID\n  getDestinationById: async function(req, res, next) {\n    try {\n      const destination = await Destination.findById(req.params.id);\n      if (!destination) {\n        throw new ValidationError('Destination not found');\n      }\n      res.status(200).json({\n        status: 'success',\n        data: {\n          destination\n        },\n        message: 'Destination retrieved successfully'\n      });\n    } catch (error) {\n      next(error);\n    }\n  },\n\n  // Create new destination (admin only)\n  createDestination: async function(req, res, next) {\n    try {\n      const destination = await Destination.create(req.body);\n      res.status(201).json({\n        status: 'success',\n        data: {\n          destination\n        },\n        message: 'Destination created successfully'\n      });\n    } catch (error) {\n      next(error);\n    }\n  },\n\n  // Update destination (admin only)\n  updateDestination: async function(req, res, next) {\n    try {\n      const destination = await Destination.findByIdAndUpdate(\n        req.params.id,\n        req.body,\n        { new: true, runValidators: true }\n      );\n      if (!destination) {\n        throw new ValidationError('Destination not found');\n      }\n      res.status(200).json({\n        status: 'success',\n        data: {\n          destination\n        },\n        message: 'Destination updated successfully'\n      });\n    } catch (error) {\n      next(error);\n    }\n  },\n\n  // Delete destination (admin only)\n  deleteDestination: async function(req, res, next) {\n    try {\n      const destination = await Destination.findByIdAndDelete(req.params.id);\n      if (!destination) {\n        throw new ValidationError('Destination not found');\n      }\n      res.status(200).json({\n        status: 'success',\n        message: 'Destination deleted successfully'\n      });\n    } catch (error) {\n      next(error);\n    }\n  }\n};\n\nmodule.exports = destinationController;\n"],"mappings":"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","ignoreList":[]}