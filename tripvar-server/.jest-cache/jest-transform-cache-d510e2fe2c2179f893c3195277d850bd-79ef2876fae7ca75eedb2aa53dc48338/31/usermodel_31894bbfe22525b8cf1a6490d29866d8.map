{"version":3,"names":["mongoose","require","bcrypt","jwt","COUNTRIES","name","code","sort","a","b","localeCompare","userSchema","Schema","email","type","String","required","unique","lowercase","trim","validate","validator","v","test","message","props","value","password","minlength","select","dateOfBirth","Date","today","birthDate","age","getFullYear","monthDiff","getMonth","isOldEnough","getDate","nationality","some","country","role","enum","default","favorites","Types","ObjectId","ref","createdAt","now","passwordChangedAt","passwordResetToken","passwordResetExpires","active","Boolean","timestamps","toJSON","virtuals","transform","doc","ret","toObject","pre","next","isModified","hash","methods","comparePassword","candidatePassword","compare","generateAuthToken","sign","id","_id","process","env","JWT_SECRET","expiresIn","JWT_EXPIRES_IN","changedPasswordAfter","JWTTimestamp","changedTimestamp","parseInt","getTime","virtual","get","User","model","module","exports"],"sources":["user.model.js"],"sourcesContent":["const mongoose = require('mongoose');\nconst bcrypt = require('bcryptjs');\nconst jwt = require('jsonwebtoken');\n\n// List of countries with their codes for flag display\nconst COUNTRIES = [\n  { name: 'Afghanistan', code: 'AF' },\n  { name: 'Albania', code: 'AL' },\n  { name: 'Algeria', code: 'DZ' },\n  { name: 'Andorra', code: 'AD' },\n  { name: 'Angola', code: 'AO' },\n  { name: 'Argentina', code: 'AR' },\n  { name: 'Australia', code: 'AU' },\n  { name: 'Austria', code: 'AT' },\n  { name: 'Azerbaijan', code: 'AZ' },\n  { name: 'Bahamas', code: 'BS' },\n  { name: 'Bahrain', code: 'BH' },\n  { name: 'Bangladesh', code: 'BD' },\n  { name: 'Belgium', code: 'BE' },\n  { name: 'Brazil', code: 'BR' },\n  { name: 'Canada', code: 'CA' },\n  { name: 'China', code: 'CN' },\n  { name: 'Denmark', code: 'DK' },\n  { name: 'Egypt', code: 'EG' },\n  { name: 'Finland', code: 'FI' },\n  { name: 'France', code: 'FR' },\n  { name: 'Germany', code: 'DE' },\n  { name: 'Greece', code: 'GR' },\n  { name: 'Hong Kong', code: 'HK' },\n  { name: 'Iceland', code: 'IS' },\n  { name: 'India', code: 'IN' },\n  { name: 'Indonesia', code: 'ID' },\n  { name: 'Iran', code: 'IR' },\n  { name: 'Iraq', code: 'IQ' },\n  { name: 'Ireland', code: 'IE' },\n  { name: 'Israel', code: 'IL' },\n  { name: 'Italy', code: 'IT' },\n  { name: 'Japan', code: 'JP' },\n  { name: 'Kazakhstan', code: 'KZ' },\n  { name: 'Kenya', code: 'KE' },\n  { name: 'Kuwait', code: 'KW' },\n  { name: 'Malaysia', code: 'MY' },\n  { name: 'Mexico', code: 'MX' },\n  { name: 'Netherlands', code: 'NL' },\n  { name: 'New Zealand', code: 'NZ' },\n  { name: 'Norway', code: 'NO' },\n  { name: 'Pakistan', code: 'PK' },\n  { name: 'Philippines', code: 'PH' },\n  { name: 'Poland', code: 'PL' },\n  { name: 'Portugal', code: 'PT' },\n  { name: 'Qatar', code: 'QA' },\n  { name: 'Russia', code: 'RU' },\n  { name: 'Saudi Arabia', code: 'SA' },\n  { name: 'Singapore', code: 'SG' },\n  { name: 'South Africa', code: 'ZA' },\n  { name: 'South Korea', code: 'KR' },\n  { name: 'Spain', code: 'ES' },\n  { name: 'Sweden', code: 'SE' },\n  { name: 'Switzerland', code: 'CH' },\n  { name: 'Taiwan', code: 'TW' },\n  { name: 'Thailand', code: 'TH' },\n  { name: 'Turkey', code: 'TR' },\n  { name: 'Ukraine', code: 'UA' },\n  { name: 'United Arab Emirates', code: 'AE' },\n  { name: 'United Kingdom', code: 'GB' },\n  { name: 'United States', code: 'US' },\n  { name: 'Vietnam', code: 'VN' }\n].sort((a, b) => a.name.localeCompare(b.name));\n\nconst userSchema = new mongoose.Schema({\n  email: {\n    type: String,\n    required: [true, 'Email is required'],\n    unique: true,\n    lowercase: true,\n    trim: true,\n    validate: {\n      validator: function(v) {\n        return /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(v);\n      },\n      message: props => `${props.value} is not a valid email!`\n    }\n  },\n  password: {\n    type: String,\n    required: [true, 'Password is required'],\n    minlength: [6, 'Password must be at least 6 characters long'],\n    select: false\n  },\n  name: {\n    type: String,\n    required: [true, 'Name is required'],\n    trim: true\n  },\n  dateOfBirth: {\n    type: Date,\n    required: false,\n    validate: {\n      validator: function(v) {\n        if (!v) {\n          return true;\n        } // Allow empty value\n        const today = new Date();\n        const birthDate = new Date(v);\n        const age = today.getFullYear() - birthDate.getFullYear();\n        const monthDiff = today.getMonth() - birthDate.getMonth();\n\n        // Calculate actual age considering month and day\n        const isOldEnough = monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())\n          ? age - 1\n          : age;\n\n        return isOldEnough >= 20; // Minimum age requirement updated to 20\n      },\n      message: 'User must be at least 20 years old'\n    }\n  },\n  nationality: {\n    type: String,\n    required: false,\n    trim: true,\n    validate: {\n      validator: function(v) {\n        if (!v) {\n          return true;\n        } // Allow empty value\n        return COUNTRIES.some(country => country.name === v);\n      },\n      message: props => `${props.value} is not a valid country name`\n    }\n  },\n  role: {\n    type: String,\n    enum: ['user', 'admin'],\n    default: 'user'\n  },\n  favorites: {\n    type: [mongoose.Schema.Types.ObjectId],\n    ref: 'Destination',\n    default: []\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now\n  },\n  passwordChangedAt: Date,\n  passwordResetToken: String,\n  passwordResetExpires: Date,\n  active: {\n    type: Boolean,\n    default: true,\n    select: true\n  }\n}, {\n  timestamps: true,\n  toJSON: {\n    virtuals: true,\n    transform: function(doc, ret) {\n      delete ret.password; // Always remove password\n      return ret;\n    }\n  },\n  toObject: {\n    virtuals: true,\n    transform: function(doc, ret) {\n      delete ret.password; // Always remove password\n      return ret;\n    }\n  }\n});\n\n// Hash password before saving\nuserSchema.pre('save', async function(next) {\n  if (!this.isModified('password')) {\n    return next();\n  }\n  this.password = await bcrypt.hash(this.password, 12);\n  next();\n});\n\n// Compare password method\nuserSchema.methods.comparePassword = async function(candidatePassword) {\n  return await bcrypt.compare(candidatePassword, this.password);\n};\n\n// Generate JWT token\nuserSchema.methods.generateAuthToken = function() {\n  return jwt.sign(\n    { id: this._id, role: this.role },\n    process.env.JWT_SECRET,\n    { expiresIn: process.env.JWT_EXPIRES_IN }\n  );\n};\n\n// Check if password was changed after token was issued\nuserSchema.methods.changedPasswordAfter = function(JWTTimestamp) {\n  if (this.passwordChangedAt) {\n    const changedTimestamp = parseInt(this.passwordChangedAt.getTime() / 1000, 10);\n    return JWTTimestamp < changedTimestamp;\n  }\n  return false;\n};\n\n// Virtual field for age\nuserSchema.virtual('age').get(function() {\n  if (!this.dateOfBirth) {\n    return null;\n  }\n\n  const today = new Date();\n  const birthDate = new Date(this.dateOfBirth);\n  let age = today.getFullYear() - birthDate.getFullYear();\n  const monthDiff = today.getMonth() - birthDate.getMonth();\n\n  // Adjust age if birthday hasn't occurred this year\n  if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\n    age--;\n  }\n\n  return age;\n});\n\nconst User = mongoose.model('User', userSchema);\n\nmodule.exports = User;\n"],"mappings":"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","ignoreList":[]}