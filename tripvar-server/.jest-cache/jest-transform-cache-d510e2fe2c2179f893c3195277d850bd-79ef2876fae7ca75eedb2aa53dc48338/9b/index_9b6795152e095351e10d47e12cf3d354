16e3d54b0d3e67fdb5774039c37cb118
/* istanbul ignore next */
function cov_23wiiwq41x() {
  var path = "/Users/mfarsx/dev/tripvar/tripvar-server/src/container/index.js";
  var hash = "dbe1e5ccb0c03ba4bbe970fd5743bb1c46997615";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/mfarsx/dev/tripvar/tripvar-server/src/container/index.js",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 30
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 32
        }
      },
      "2": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 31
        }
      },
      "3": {
        start: {
          line: 18,
          column: 53
        },
        end: {
          line: 18,
          column: 60
        }
      },
      "4": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 24,
          column: 7
        }
      },
      "5": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 37,
          column: 7
        }
      },
      "6": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 40
        }
      },
      "7": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "8": {
        start: {
          line: 57,
          column: 6
        },
        end: {
          line: 57,
          column: 39
        }
      },
      "9": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "10": {
        start: {
          line: 62,
          column: 6
        },
        end: {
          line: 62,
          column: 42
        }
      },
      "11": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "12": {
        start: {
          line: 67,
          column: 6
        },
        end: {
          line: 67,
          column: 42
        }
      },
      "13": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 51
        }
      },
      "14": {
        start: {
          line: 79,
          column: 26
        },
        end: {
          line: 79,
          column: 49
        }
      },
      "15": {
        start: {
          line: 80,
          column: 49
        },
        end: {
          line: 80,
          column: 62
        }
      },
      "16": {
        start: {
          line: 83,
          column: 33
        },
        end: {
          line: 83,
          column: 71
        }
      },
      "17": {
        start: {
          line: 83,
          column: 57
        },
        end: {
          line: 83,
          column: 70
        }
      },
      "18": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 91,
          column: 5
        }
      },
      "19": {
        start: {
          line: 88,
          column: 6
        },
        end: {
          line: 88,
          column: 54
        }
      },
      "20": {
        start: {
          line: 90,
          column: 6
        },
        end: {
          line: 90,
          column: 25
        }
      },
      "21": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 96,
          column: 5
        }
      },
      "22": {
        start: {
          line: 95,
          column: 6
        },
        end: {
          line: 95,
          column: 42
        }
      },
      "23": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 98,
          column: 20
        }
      },
      "24": {
        start: {
          line: 107,
          column: 26
        },
        end: {
          line: 107,
          column: 50
        }
      },
      "25": {
        start: {
          line: 108,
          column: 38
        },
        end: {
          line: 108,
          column: 51
        }
      },
      "26": {
        start: {
          line: 111,
          column: 33
        },
        end: {
          line: 111,
          column: 71
        }
      },
      "27": {
        start: {
          line: 111,
          column: 57
        },
        end: {
          line: 111,
          column: 70
        }
      },
      "28": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 114,
          column: 44
        }
      },
      "29": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 125,
          column: 37
        }
      },
      "30": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 133,
          column: 31
        }
      },
      "31": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 134,
          column: 32
        }
      },
      "32": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 135,
          column: 33
        }
      },
      "33": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 142,
          column: 26
        }
      },
      "34": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 143,
          column: 27
        }
      },
      "35": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 144,
          column: 28
        }
      },
      "36": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 156,
          column: 6
        }
      },
      "37": {
        start: {
          line: 161,
          column: 18
        },
        end: {
          line: 161,
          column: 33
        }
      },
      "38": {
        start: {
          line: 163,
          column: 0
        },
        end: {
          line: 163,
          column: 27
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 2
          },
          end: {
            line: 5,
            column: 3
          }
        },
        loc: {
          start: {
            line: 5,
            column: 16
          },
          end: {
            line: 9,
            column: 3
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 2
          },
          end: {
            line: 17,
            column: 3
          }
        },
        loc: {
          start: {
            line: 17,
            column: 40
          },
          end: {
            line: 25,
            column: 3
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 33,
            column: 2
          },
          end: {
            line: 33,
            column: 3
          }
        },
        loc: {
          start: {
            line: 33,
            column: 52
          },
          end: {
            line: 38,
            column: 3
          }
        },
        line: 33
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 45,
            column: 2
          },
          end: {
            line: 45,
            column: 3
          }
        },
        loc: {
          start: {
            line: 45,
            column: 35
          },
          end: {
            line: 47,
            column: 3
          }
        },
        line: 45
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 54,
            column: 2
          },
          end: {
            line: 54,
            column: 3
          }
        },
        loc: {
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 71,
            column: 3
          }
        },
        line: 54
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 78,
            column: 2
          },
          end: {
            line: 78,
            column: 3
          }
        },
        loc: {
          start: {
            line: 78,
            column: 26
          },
          end: {
            line: 99,
            column: 3
          }
        },
        line: 78
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 83,
            column: 50
          },
          end: {
            line: 83,
            column: 51
          }
        },
        loc: {
          start: {
            line: 83,
            column: 57
          },
          end: {
            line: 83,
            column: 70
          }
        },
        line: 83
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 106,
            column: 2
          },
          end: {
            line: 106,
            column: 3
          }
        },
        loc: {
          start: {
            line: 106,
            column: 26
          },
          end: {
            line: 115,
            column: 3
          }
        },
        line: 106
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 111,
            column: 50
          },
          end: {
            line: 111,
            column: 51
          }
        },
        loc: {
          start: {
            line: 111,
            column: 57
          },
          end: {
            line: 111,
            column: 70
          }
        },
        line: 111
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 122,
            column: 2
          },
          end: {
            line: 122,
            column: 3
          }
        },
        loc: {
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 126,
            column: 3
          }
        },
        line: 122
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 132,
            column: 2
          },
          end: {
            line: 132,
            column: 3
          }
        },
        loc: {
          start: {
            line: 132,
            column: 15
          },
          end: {
            line: 136,
            column: 3
          }
        },
        line: 132
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 141,
            column: 2
          },
          end: {
            line: 141,
            column: 3
          }
        },
        loc: {
          start: {
            line: 141,
            column: 10
          },
          end: {
            line: 145,
            column: 3
          }
        },
        line: 141
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 151,
            column: 2
          },
          end: {
            line: 151,
            column: 3
          }
        },
        loc: {
          start: {
            line: 151,
            column: 20
          },
          end: {
            line: 157,
            column: 3
          }
        },
        line: 151
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 26
          },
          end: {
            line: 17,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 17,
            column: 36
          },
          end: {
            line: 17,
            column: 38
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 18,
            column: 29
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 18,
            column: 24
          },
          end: {
            line: 18,
            column: 29
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 18,
            column: 31
          },
          end: {
            line: 18,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 18,
            column: 46
          },
          end: {
            line: 18,
            column: 48
          }
        }],
        line: 18
      },
      "3": {
        loc: {
          start: {
            line: 33,
            column: 33
          },
          end: {
            line: 33,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 33,
            column: 48
          },
          end: {
            line: 33,
            column: 50
          }
        }],
        line: 33
      },
      "4": {
        loc: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "5": {
        loc: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "6": {
        loc: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "7": {
        loc: {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        }, {
          start: {
            line: 89,
            column: 11
          },
          end: {
            line: 91,
            column: 5
          }
        }],
        line: 87
      },
      "8": {
        loc: {
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "9": {
        loc: {
          start: {
            line: 123,
            column: 11
          },
          end: {
            line: 125,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 11
          },
          end: {
            line: 123,
            column: 34
          }
        }, {
          start: {
            line: 124,
            column: 11
          },
          end: {
            line: 124,
            column: 35
          }
        }, {
          start: {
            line: 125,
            column: 11
          },
          end: {
            line: 125,
            column: 36
          }
        }],
        line: 123
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "dbe1e5ccb0c03ba4bbe970fd5743bb1c46997615"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_23wiiwq41x = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_23wiiwq41x();
/**
 * Simple Dependency Injection Container
 */
class Container {
  constructor() {
    /* istanbul ignore next */
    cov_23wiiwq41x().f[0]++;
    cov_23wiiwq41x().s[0]++;
    this.services = new Map();
    /* istanbul ignore next */
    cov_23wiiwq41x().s[1]++;
    this.singletons = new Map();
    /* istanbul ignore next */
    cov_23wiiwq41x().s[2]++;
    this.factories = new Map();
  }

  /**
   * Register a service
   * @param {string} name - Service name
   * @param {Function|Object} service - Service constructor or instance
   * @param {Object} options - Registration options
   */
  register(name, service, options =
  /* istanbul ignore next */
  (cov_23wiiwq41x().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_23wiiwq41x().f[1]++;
    const {
      singleton =
      /* istanbul ignore next */
      (cov_23wiiwq41x().b[1][0]++, false),
      dependencies =
      /* istanbul ignore next */
      (cov_23wiiwq41x().b[2][0]++, [])
    } =
    /* istanbul ignore next */
    (cov_23wiiwq41x().s[3]++, options);
    /* istanbul ignore next */
    cov_23wiiwq41x().s[4]++;
    this.services.set(name, {
      service,
      dependencies,
      singleton
    });
  }

  /**
   * Register a factory function
   * @param {string} name - Factory name
   * @param {Function} factory - Factory function
   * @param {Array} dependencies - Factory dependencies
   */
  registerFactory(name, factory, dependencies =
  /* istanbul ignore next */
  (cov_23wiiwq41x().b[3][0]++, [])) {
    /* istanbul ignore next */
    cov_23wiiwq41x().f[2]++;
    cov_23wiiwq41x().s[5]++;
    this.factories.set(name, {
      factory,
      dependencies
    });
  }

  /**
   * Register a singleton instance
   * @param {string} name - Singleton name
   * @param {*} instance - Singleton instance
   */
  registerInstance(name, instance) {
    /* istanbul ignore next */
    cov_23wiiwq41x().f[3]++;
    cov_23wiiwq41x().s[6]++;
    this.singletons.set(name, instance);
  }

  /**
   * Get a service instance
   * @param {string} name - Service name
   * @returns {*} Service instance
   */
  get(name) {
    /* istanbul ignore next */
    cov_23wiiwq41x().f[4]++;
    cov_23wiiwq41x().s[7]++;
    // Check if it's a singleton instance
    if (this.singletons.has(name)) {
      /* istanbul ignore next */
      cov_23wiiwq41x().b[4][0]++;
      cov_23wiiwq41x().s[8]++;
      return this.singletons.get(name);
    } else
    /* istanbul ignore next */
    {
      cov_23wiiwq41x().b[4][1]++;
    }

    // Check if it's a factory
    cov_23wiiwq41x().s[9]++;
    if (this.factories.has(name)) {
      /* istanbul ignore next */
      cov_23wiiwq41x().b[5][0]++;
      cov_23wiiwq41x().s[10]++;
      return this.createFromFactory(name);
    } else
    /* istanbul ignore next */
    {
      cov_23wiiwq41x().b[5][1]++;
    }

    // Check if it's a registered service
    cov_23wiiwq41x().s[11]++;
    if (this.services.has(name)) {
      /* istanbul ignore next */
      cov_23wiiwq41x().b[6][0]++;
      cov_23wiiwq41x().s[12]++;
      return this.createFromService(name);
    } else
    /* istanbul ignore next */
    {
      cov_23wiiwq41x().b[6][1]++;
    }
    cov_23wiiwq41x().s[13]++;
    throw new Error(`Service '${name}' not found`);
  }

  /**
   * Create instance from service registration
   * @param {string} name - Service name
   * @returns {*} Service instance
   */
  createFromService(name) {
    /* istanbul ignore next */
    cov_23wiiwq41x().f[5]++;
    const serviceConfig =
    /* istanbul ignore next */
    (cov_23wiiwq41x().s[14]++, this.services.get(name));
    const {
      service,
      dependencies,
      singleton
    } =
    /* istanbul ignore next */
    (cov_23wiiwq41x().s[15]++, serviceConfig);

    // Resolve dependencies
    const resolvedDependencies =
    /* istanbul ignore next */
    (cov_23wiiwq41x().s[16]++, dependencies.map(dep => {
      /* istanbul ignore next */
      cov_23wiiwq41x().f[6]++;
      cov_23wiiwq41x().s[17]++;
      return this.get(dep);
    }));

    // Create instance
    let instance;
    /* istanbul ignore next */
    cov_23wiiwq41x().s[18]++;
    if (typeof service === 'function') {
      /* istanbul ignore next */
      cov_23wiiwq41x().b[7][0]++;
      cov_23wiiwq41x().s[19]++;
      instance = new service(...resolvedDependencies);
    } else {
      /* istanbul ignore next */
      cov_23wiiwq41x().b[7][1]++;
      cov_23wiiwq41x().s[20]++;
      instance = service;
    }

    // Store as singleton if configured
    /* istanbul ignore next */
    cov_23wiiwq41x().s[21]++;
    if (singleton) {
      /* istanbul ignore next */
      cov_23wiiwq41x().b[8][0]++;
      cov_23wiiwq41x().s[22]++;
      this.singletons.set(name, instance);
    } else
    /* istanbul ignore next */
    {
      cov_23wiiwq41x().b[8][1]++;
    }
    cov_23wiiwq41x().s[23]++;
    return instance;
  }

  /**
   * Create instance from factory
   * @param {string} name - Factory name
   * @returns {*} Factory result
   */
  createFromFactory(name) {
    /* istanbul ignore next */
    cov_23wiiwq41x().f[7]++;
    const factoryConfig =
    /* istanbul ignore next */
    (cov_23wiiwq41x().s[24]++, this.factories.get(name));
    const {
      factory,
      dependencies
    } =
    /* istanbul ignore next */
    (cov_23wiiwq41x().s[25]++, factoryConfig);

    // Resolve dependencies
    const resolvedDependencies =
    /* istanbul ignore next */
    (cov_23wiiwq41x().s[26]++, dependencies.map(dep => {
      /* istanbul ignore next */
      cov_23wiiwq41x().f[8]++;
      cov_23wiiwq41x().s[27]++;
      return this.get(dep);
    }));

    // Call factory function
    /* istanbul ignore next */
    cov_23wiiwq41x().s[28]++;
    return factory(...resolvedDependencies);
  }

  /**
   * Check if service is registered
   * @param {string} name - Service name
   * @returns {boolean} Registration status
   */
  has(name) {
    /* istanbul ignore next */
    cov_23wiiwq41x().f[9]++;
    cov_23wiiwq41x().s[29]++;
    return /* istanbul ignore next */(cov_23wiiwq41x().b[9][0]++, this.services.has(name)) ||
    /* istanbul ignore next */
    (cov_23wiiwq41x().b[9][1]++, this.factories.has(name)) ||
    /* istanbul ignore next */
    (cov_23wiiwq41x().b[9][2]++, this.singletons.has(name));
  }

  /**
   * Remove a service
   * @param {string} name - Service name
   */
  remove(name) {
    /* istanbul ignore next */
    cov_23wiiwq41x().f[10]++;
    cov_23wiiwq41x().s[30]++;
    this.services.delete(name);
    /* istanbul ignore next */
    cov_23wiiwq41x().s[31]++;
    this.factories.delete(name);
    /* istanbul ignore next */
    cov_23wiiwq41x().s[32]++;
    this.singletons.delete(name);
  }

  /**
   * Clear all services
   */
  clear() {
    /* istanbul ignore next */
    cov_23wiiwq41x().f[11]++;
    cov_23wiiwq41x().s[33]++;
    this.services.clear();
    /* istanbul ignore next */
    cov_23wiiwq41x().s[34]++;
    this.factories.clear();
    /* istanbul ignore next */
    cov_23wiiwq41x().s[35]++;
    this.singletons.clear();
  }

  /**
   * Get all registered service names
   * @returns {Array<string>} Service names
   */
  getServiceNames() {
    /* istanbul ignore next */
    cov_23wiiwq41x().f[12]++;
    cov_23wiiwq41x().s[36]++;
    return [...this.services.keys(), ...this.factories.keys(), ...this.singletons.keys()];
  }
}

// Create global container instance
const container =
/* istanbul ignore next */
(cov_23wiiwq41x().s[37]++, new Container());
/* istanbul ignore next */
cov_23wiiwq41x().s[38]++;
module.exports = container;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,