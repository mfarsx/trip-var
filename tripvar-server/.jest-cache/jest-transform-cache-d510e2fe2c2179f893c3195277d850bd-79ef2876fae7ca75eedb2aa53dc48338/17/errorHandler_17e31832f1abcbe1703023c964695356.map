{"version":3,"names":["AppError","createError","require","error","warn","security","config","handleCastErrorDB","err","message","path","value","validation","field","handleValidationErrorDB","errors","Object","values","map","el","e","join","handleJWTError","authentication","handleJWTExpiredError","handleDuplicateFieldsDB","keys","keyValue","charAt","toUpperCase","slice","conflict","handleMongoError","code","database","handleRedisError","serviceUnavailable","service","handleRateLimitError","tooManyRequests","retryAfter","limit","remaining","handleMulterError","maxSize","receivedSize","size","maxFiles","receivedFiles","files","length","sendErrorDev","res","req","status","statusCode","json","details","name","stack","requestId","timestamp","method","sendErrorProd","isOperational","url","userAgent","get","ip","body","query","params","Date","toISOString","module","exports","next","id","SyntaxError","originalError","type","server","isDevelopment","undefined"],"sources":["errorHandler.js"],"sourcesContent":["const { AppError, createError } = require('../utils/errors');\nconst { error, warn, security } = require('../utils/logger');\nconst config = require('../config/config');\n\nconst handleCastErrorDB = err => {\n  const message = `Invalid ${err.path}: ${err.value}`;\n  return createError.validation(message, { field: err.path, value: err.value });\n};\n\nconst handleValidationErrorDB = err => {\n  const errors = Object.values(err.errors).map(el => ({\n    field: el.path,\n    message: el.message,\n    value: el.value\n  }));\n  const message = `Invalid input data. ${errors.map(e => e.message).join('. ')}`;\n  return createError.validation(message, errors);\n};\n\nconst handleJWTError = () =>\n  createError.authentication('Invalid token. Please log in again!');\n\nconst handleJWTExpiredError = () =>\n  createError.authentication('Your token has expired! Please log in again.');\n\nconst handleDuplicateFieldsDB = err => {\n  const field = Object.keys(err.keyValue)[0];\n  const value = err.keyValue[field];\n  const message = `${field.charAt(0).toUpperCase() + field.slice(1)} '${value}' already exists`;\n  return createError.conflict(message, { field, value });\n};\n\nconst handleMongoError = err => {\n  if (err.code === 11000) {\n    return handleDuplicateFieldsDB(err);\n  }\n  return createError.database('Database operation failed', { code: err.code });\n};\n\nconst handleRedisError = err => {\n  return createError.serviceUnavailable('Cache service unavailable', {\n    service: 'redis',\n    error: err.message\n  });\n};\n\nconst handleRateLimitError = err => {\n  return createError.tooManyRequests('Too many requests, please try again later', {\n    retryAfter: err.retryAfter,\n    limit: err.limit,\n    remaining: err.remaining\n  });\n};\n\nconst handleMulterError = err => {\n  if (err.code === 'LIMIT_FILE_SIZE') {\n    return createError.validation('File too large', {\n      maxSize: err.limit,\n      receivedSize: err.size\n    });\n  }\n  if (err.code === 'LIMIT_FILE_COUNT') {\n    return createError.validation('Too many files', {\n      maxFiles: err.limit,\n      receivedFiles: err.files?.length\n    });\n  }\n  if (err.code === 'LIMIT_UNEXPECTED_FILE') {\n    return createError.validation('Unexpected file field', {\n      field: err.field\n    });\n  }\n  return createError.validation('File upload error', { error: err.message });\n};\n\nconst sendErrorDev = (err, res, req) => {\n  res.status(err.statusCode).json({\n    status: err.status,\n    message: err.message,\n    code: err.code,\n    details: err.details,\n    error: {\n      name: err.name,\n      stack: err.stack\n    },\n    requestId: req.requestId,\n    timestamp: err.timestamp,\n    path: req.path,\n    method: req.method\n  });\n};\n\nconst sendErrorProd = (err, res, req) => {\n  // Operational, trusted error: send message to client\n  if (err.isOperational) {\n    res.status(err.statusCode).json({\n      status: err.status,\n      message: err.message,\n      code: err.code,\n      details: err.details,\n      requestId: req.requestId,\n      timestamp: err.timestamp\n    });\n  }\n  // Programming or other unknown error: don't leak error details\n  else {\n    // Log error for debugging\n    error('Unhandled error', {\n      error: err.message,\n      stack: err.stack,\n      requestId: req.requestId,\n      url: req.url,\n      method: req.method,\n      userAgent: req.get('User-Agent'),\n      ip: req.ip,\n      body: req.body,\n      query: req.query,\n      params: req.params\n    });\n\n    // Send generic message\n    res.status(500).json({\n      status: 'error',\n      message: 'Something went very wrong!',\n      code: 'INTERNAL_SERVER_ERROR',\n      requestId: req.requestId,\n      timestamp: new Date().toISOString()\n    });\n  }\n};\n\n// Global error handling middleware\nmodule.exports = (err, req, res, next) => {\n\n  err.statusCode = err.statusCode || 500;\n  err.status = err.status || 'error';\n  err.timestamp = err.timestamp || new Date().toISOString();\n  err.requestId = req.requestId || req.id || 'unknown';\n\n  // Handle JSON parsing errors\n  if (err instanceof SyntaxError && err.status === 400 && 'body' in err) {\n    err = createError.validation('Invalid JSON format', { \n      originalError: err.message,\n      code: 'INVALID_JSON'\n    });\n  }\n\n  // Handle payload too large errors\n  if (err.type === 'entity.too.large') {\n    err = createError.validation('Request payload too large', {\n      code: 'PAYLOAD_TOO_LARGE',\n      limit: err.limit\n    });\n  }\n\n  // Log all errors with appropriate level\n  if (err.statusCode >= 500) {\n    error('Server error', {\n      error: err.message,\n      stack: config.server.isDevelopment ? err.stack : undefined,\n      requestId: req.requestId,\n      url: req.url,\n      method: req.method,\n      statusCode: err.statusCode,\n      userAgent: req.get('User-Agent'),\n      ip: req.ip\n    });\n\n    // Alert for critical server errors\n    warn('CRITICAL SERVER ERROR', {\n      error: err.message,\n      requestId: req.requestId,\n      url: req.url,\n      method: req.method,\n      statusCode: err.statusCode,\n      ip: req.ip,\n      timestamp: new Date().toISOString()\n    });\n  } else if (err.statusCode >= 400) {\n    warn('Client error', {\n      error: err.message,\n      requestId: req.requestId,\n      url: req.url,\n      method: req.method,\n      statusCode: err.statusCode,\n      userAgent: req.get('User-Agent'),\n      ip: req.ip\n    });\n  }\n\n  // Log security-related errors\n  if (err.statusCode === 401 || err.statusCode === 403) {\n    warn('Authentication/Authorization error', {\n      error: err.message,\n      requestId: req.requestId,\n      url: req.url,\n      method: req.method,\n      ip: req.ip,\n      userAgent: req.get('User-Agent')\n    });\n  }\n  \n  if (config.server.isDevelopment) {\n    sendErrorDev(err, res, req);\n  } else {\n    let error = { ...err };\n    error.message = err.message;\n\n    // Handle specific error types\n    if (error.name === 'CastError') {\n      error = handleCastErrorDB(error);\n    }\n    if (error.name === 'ValidationError') {\n      error = handleValidationErrorDB(error);\n    }\n    if (error.name === 'JsonWebTokenError') {\n      error = handleJWTError();\n    }\n    if (error.name === 'TokenExpiredError') {\n      error = handleJWTExpiredError();\n    }\n    if (error.name === 'MongoError') {\n      error = handleMongoError(error);\n    }\n    if (error.name === 'MongoServerError') {\n      error = handleMongoError(error);\n    }\n    if (error.name === 'RedisError') {\n      error = handleRedisError(error);\n    }\n    if (error.name === 'RateLimitError') {\n      error = handleRateLimitError(error);\n    }\n    if (error.name === 'MulterError') {\n      error = handleMulterError(error);\n    }\n\n    sendErrorProd(error, res, req);\n  }\n};"],"mappings":"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","ignoreList":[]}